[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/D:/Coding/Code-Complexity-Research/complexity-verification-project/CogniCrypt/CryptoAnalysis-2.8.0-SNAPSHOT-jar-with-dependencies.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 2.866 s 
[main] INFO crypto.analysis.CryptoScanner - Searching for seeds for the analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 8 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

Ruleset: 
	java.security.KeyPair
	javax.net.ssl.SSLContext
	java.security.AlgorithmParameterGenerator
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.MessageDigest
	javax.net.ssl.KeyStoreBuilderParameters
	javax.net.ssl.SSLParameters
	javax.crypto.spec.SecretKeySpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Cipher
	javax.crypto.KeyGenerator
	javax.net.ssl.SSLEngine
	javax.crypto.CipherInputStream
	java.security.SecureRandom
	javax.crypto.SecretKeyFactory
	java.security.spec.ECGenParameterSpec
	javax.crypto.spec.OAEPParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.crypto.KeyAgreement
	javax.crypto.spec.PBEKeySpec
	javax.crypto.CipherOutputStream
	java.security.spec.MGF1ParameterSpec
	java.security.KeyPairGenerator
	void
	javax.net.ssl.TrustManagerFactory
	java.security.Signature
	javax.net.ssl.KeyManagerFactory
	javax.crypto.Mac
	java.security.KeyStore
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	java.security.AlgorithmParameters
	java.security.spec.ECParameterSpec
	java.security.KeyFactory
	java.security.spec.DSAParameterSpec
	java.security.Key
	java.security.cert.PKIXBuilderParameters
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.DigestInputStream
	javax.crypto.SecretKey
	javax.crypto.spec.GCMParameterSpec
	java.security.cert.TrustAnchor

Analyzed Objects: 
	Object:
		Variable: r0
		Type: javax.crypto.KeyGenerator
		Statement: r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 163c353652c7f33ac2dcde1a1464ff0e8491b827d2a9fc9fcfa611f827a8ca2b
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.Cipher
		Statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.ConstraintErrorExample: void main(java.lang.String[])>
		SHA-256: 7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.PrivateKey
		Statement: $r2 = virtualinvoke r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: a47f9de423da367b588cad55f2ba98d9f5ecc2605dae69f5f26d90e024f90815
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.PrivateKey
		Statement: $r2 = virtualinvoke r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.TypestateErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 6c406ff64e79c9918f3f94d1ec9e4c708193bded16d54eb70f50e50eded63821
		Secure: true
	Object:
		Variable: r0
		Type: java.security.Signature
		Statement: r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: void main(java.lang.String[])>
		SHA-256: ffc340e1e49a9ab2c5cf1ee5435c7354f3cdca4e5202dcea4c4512da4f678e8f
		Secure: true
	Object:
		Variable: r0
		Type: java.security.KeyPairGenerator
		Statement: r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 27e811087d190364fc761ecfdccb8f55023609f47151ed48b40e5c6bf4c52b42
		Secure: true
	Object:
		Variable: r0
		Type: java.security.KeyPairGenerator
		Statement: r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer10)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.TypestateErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 3e4915514e7937ab72088bf66f2b1e9c32d2bf73ce3054ca4facf9b05cfff3b4
		Secure: true
	Object:
		Variable: r1
		Type: java.security.KeyPair
		Statement: r1 = virtualinvoke r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 5a6e6192df96e0643df370be669b22d67979c89e39098e8b753642f97df38198
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: void doInit()>
		SHA-256: 5ecd6b423df99f93ad438d4df86532bd3271d153b8936e81e4a0d4ce84569f45
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: badf53d6347cd4258ed248c19dd31fdbbe6651d9d0e1b27ca3c9326aed016634
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPair
		Statement: r1 = virtualinvoke r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.TypestateErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 88b0a01533e8ba9f54e595c0e9a80ed7722c848e173ce9c721dad9afc0ac31d0
		Secure: true
	Object:
		Variable: r0
		Type: java.security.Signature
		Statement: r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.TypestateErrorExample: void main(java.lang.String[])>
		SHA-256: f78aa10339b8711b3a279f96baf862bd4f3af269fe75be7c031dcb0cdb1de8e2
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.SecretKey
		Statement: r1 = virtualinvoke r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 397eab2349a84b690db5490764f66088a9e26874c97c741d552f97f956c5110
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <edu.wm.kobifeldman.CogniCrypt_Test.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 6d8bdb1ed5fe0e932ce63ac180d03203574e2130d4b340f33df31da976c2a8b5
		Secure: false

Findings in Java Class: edu.wm.kobifeldman.CogniCrypt_Test.ConstraintErrorExample

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)


Findings in Java Class: edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #5ecd6b423df99f93ad438d4df86532bd3271d153b8936e81e4a0d4ce84569f45)
			Operation on object of type java.security.Signature object not completed. Expected call to sign
			at statement: specialinvoke r7.<edu.wm.kobifeldman.CogniCrypt_Test.IncompleOperationErrorExample: void doSign()>()


Findings in Java Class: edu.wm.kobifeldman.CogniCrypt_Test.PredicateMissingExample

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #163c353652c7f33ac2dcde1a1464ff0e8491b827d2a9fc9fcfa611f827a8ca2b)
			First parameter (with value 46) should be any of {128, 192, 256}
			at statement: virtualinvoke r0.<javax.crypto.KeyGenerator: void init(int)>(varReplacer5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6, r1)


Findings in Java Class: edu.wm.kobifeldman.CogniCrypt_Test.TypestateErrorExample

	 in Method: void main(java.lang.String[])
		TypestateError violating CrySL rule for java.security.Signature (on Object #f78aa10339b8711b3a279f96baf862bd4f3af269fe75be7c031dcb0cdb1de8e2)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods initSign,update
			at statement: virtualinvoke r0.<java.security.Signature: byte[] sign()>()


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 14

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 2
	TypestateError: 1
	IncompleteOperationError: 2
	RequiredPredicateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.075 s
