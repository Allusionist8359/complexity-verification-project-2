JBMC version 5.61.0 (cbmc-5.61.0) 64-bit x86_64 linux
Parsing ...
Trying to load Java main class: Main
Found Java main class: Main
Converting
Java: added 494 String or Class constant symbols
Generating GOTO Program
Running GOTO functions transformation passes
Running with 16 object bits, 48 offset bits (default)
Starting Bounded Model Checking
Unwinding loop __CPROVER__start.0 iteration 1  thread 0
Unwinding loop __CPROVER__start.0 iteration 2  thread 0
Unwinding loop __CPROVER__start.0 iteration 3  thread 0
Unwinding loop __CPROVER__start.0 iteration 4  thread 0
Not unwinding loop __CPROVER__start.0 iteration 5  thread 0
Runtime Symex: 0.0711803s
size of program expression: 7186 steps
simple slicing removed 5 assignments
Generated 16 VCC(s), 1 remaining after simplification
Runtime Postprocess Equation: 0.000779656s
Passing problem to string refinement loop with MiniSAT 2.2.1 without simplifier
converting SSA
Runtime Convert SSA: 0.0108037s
Running string refinement loop with MiniSAT 2.2.1 without simplifier
BV-Refinement: post-processing
BV-Refinement: iteration 1
14337 variables, 12555 clauses
SAT checker: instance is SATISFIABLE
BV-Refinement: got SAT, and it simulates => SAT
Total iterations: 1
Runtime Solver: 0.0175954s
Runtime decision procedure: 0.028759s

** Results:
[array-create-negative-size.1] Array size should be >= 0: SUCCESS
[array-create-negative-size.2] Array size should be >= 0: SUCCESS
[array-create-negative-size.3] Array size should be >= 0: SUCCESS
[array-create-negative-size.4] Array size should be >= 0: SUCCESS
[array-create-negative-size.5] Array size should be >= 0: SUCCESS
[array-create-negative-size.6] Array size should be >= 0: SUCCESS
[array-create-negative-size.7] Array size should be >= 0: SUCCESS
[array-create-negative-size.8] Array size should be >= 0: SUCCESS
[array-create-negative-size.9] Array size should be >= 0: SUCCESS
function java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.1] assertion: SUCCESS

function java::java.lang.String.compareTo:(Ljava/lang/String;)I
[java::java.lang.String.compareTo:(Ljava/lang/String;)I.1] assertion: SUCCESS
[java::java.lang.String.compareTo:(Ljava/lang/String;)I.2] assertion: SUCCESS
[java::java.lang.String.compareTo:(Ljava/lang/String;)I.3] assertion: SUCCESS
[java::java.lang.String.compareTo:(Ljava/lang/String;)I.4] assertion: SUCCESS

function java::java.lang.String.contains:(Ljava/lang/CharSequence;)Z
[java::java.lang.String.contains:(Ljava/lang/CharSequence;)Z.1] assertion: SUCCESS
[java::java.lang.String.contains:(Ljava/lang/CharSequence;)Z.2] assertion: SUCCESS
[java::java.lang.String.contains:(Ljava/lang/CharSequence;)Z.3] assertion: SUCCESS
[java::java.lang.String.contains:(Ljava/lang/CharSequence;)Z.4] assertion: SUCCESS

function java::java.lang.String.endsWith:(Ljava/lang/String;)Z
[java::java.lang.String.endsWith:(Ljava/lang/String;)Z.1] assertion: SUCCESS
[java::java.lang.String.endsWith:(Ljava/lang/String;)Z.2] assertion: SUCCESS
[java::java.lang.String.endsWith:(Ljava/lang/String;)Z.3] assertion: SUCCESS
[java::java.lang.String.endsWith:(Ljava/lang/String;)Z.4] assertion: SUCCESS

function java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.1] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.2] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.3] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.4] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.5] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.6] assertion: SUCCESS
[java::java.lang.String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;.7] assertion: SUCCESS

function java::java.lang.String.startsWith:(Ljava/lang/String;)Z
[java::java.lang.String.startsWith:(Ljava/lang/String;)Z.1] assertion: SUCCESS
[java::java.lang.String.startsWith:(Ljava/lang/String;)Z.2] assertion: SUCCESS
[java::java.lang.String.startsWith:(Ljava/lang/String;)Z.3] assertion: SUCCESS
[java::java.lang.String.startsWith:(Ljava/lang/String;)Z.4] assertion: SUCCESS

function java::java.lang.String.toUpperCase:()Ljava/lang/String;
[java::java.lang.String.toUpperCase:()Ljava/lang/String;.1] assertion: SUCCESS
[java::java.lang.String.toUpperCase:()Ljava/lang/String;.2] assertion: SUCCESS
[java::java.lang.String.toUpperCase:()Ljava/lang/String;.3] assertion: SUCCESS

function java::java.lang.String.trim:()Ljava/lang/String;
[java::java.lang.String.trim:()Ljava/lang/String;.1] assertion: SUCCESS
[java::java.lang.String.trim:()Ljava/lang/String;.2] assertion: SUCCESS
[java::java.lang.String.trim:()Ljava/lang/String;.3] assertion: SUCCESS

function java::java.lang.StringBuffer.<init>:()V
[java::java.lang.StringBuffer.<init>:()V.1] assertion: SUCCESS

function java::java.lang.StringBuffer.append:(C)Ljava/lang/StringBuffer;
[java::java.lang.StringBuffer.append:(C)Ljava/lang/StringBuffer;.1] assertion: SUCCESS
[java::java.lang.StringBuffer.append:(C)Ljava/lang/StringBuffer;.2] assertion: SUCCESS
[java::java.lang.StringBuffer.append:(C)Ljava/lang/StringBuffer;.3] assertion: SUCCESS
[java::java.lang.StringBuffer.append:(C)Ljava/lang/StringBuffer;.4] assertion: SUCCESS

function java::java.lang.StringBuffer.length:()I
[java::java.lang.StringBuffer.length:()I.1] assertion: SUCCESS

function java::java.lang.StringBuilder.<init>:()V
[java::java.lang.StringBuilder.<init>:()V.1] assertion: SUCCESS

function java::java.lang.StringBuilder.append:(C)Ljava/lang/StringBuilder;
[java::java.lang.StringBuilder.append:(C)Ljava/lang/StringBuilder;.1] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(C)Ljava/lang/StringBuilder;.2] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(C)Ljava/lang/StringBuilder;.3] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(C)Ljava/lang/StringBuilder;.4] assertion: SUCCESS

function java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.1] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.2] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.3] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.4] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.5] assertion: SUCCESS
[java::java.lang.StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;.6] assertion: SUCCESS

function java::java.lang.StringBuilder.length:()I
[java::java.lang.StringBuilder.length:()I.1] assertion: SUCCESS

function java::java.lang.StringBuilder.substring:(II)Ljava/lang/String;
[java::java.lang.StringBuilder.substring:(II)Ljava/lang/String;.1] assertion: SUCCESS
[java::java.lang.StringBuilder.substring:(II)Ljava/lang/String;.2] assertion: SUCCESS
[java::java.lang.StringBuilder.substring:(II)Ljava/lang/String;.3] assertion: SUCCESS

function java::java.lang.StringBuilder.toString:()Ljava/lang/String;
[java::java.lang.StringBuilder.toString:()Ljava/lang/String;.1] assertion: SUCCESS
[java::java.lang.StringBuilder.toString:()Ljava/lang/String;.2] assertion: SUCCESS
[java::java.lang.StringBuilder.toString:()Ljava/lang/String;.3] assertion: SUCCESS

Antlr4Master.java function java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/io/InputStreamReader;)V
[java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/io/InputStreamReader;)V.null-pointer-exception.1] line 366 Null pointer check: SUCCESS
[java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/io/InputStreamReader;)V.null-pointer-exception.2] line 367 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/lang/String;)V
[java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/lang/String;)V.null-pointer-exception.1] line 370 Null pointer check: SUCCESS
[java::Antlr4Master$ANTLRInputStream.<init>:(LAntlr4Master;Ljava/lang/String;)V.null-pointer-exception.2] line 370 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$ATNConfig.<init>:(LAntlr4Master$ATNConfig;Ljava/lang/Object;)V
[java::Antlr4Master$ATNConfig.<init>:(LAntlr4Master$ATNConfig;Ljava/lang/Object;)V.null-pointer-exception.1] line 457 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$ATNConfigSet.<init>:()V
[java::Antlr4Master$ATNConfigSet.<init>:()V.null-pointer-exception.1] line 375 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$ATNConfigSet.add:(Ljava/lang/Object;)Z
[java::Antlr4Master$ATNConfigSet.add:(Ljava/lang/Object;)Z.bad-dynamic-cast.1] line 375 Dynamic cast check: SUCCESS
[java::Antlr4Master$ATNConfigSet.add:(Ljava/lang/Object;)Z.null-pointer-exception.1] line 375 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$CharStream.<init>:(LAntlr4Master;)V
[java::Antlr4Master$CharStream.<init>:(LAntlr4Master;)V.null-pointer-exception.1] line 346 Null pointer check: SUCCESS
[java::Antlr4Master$CharStream.<init>:(LAntlr4Master;)V.null-pointer-exception.2] line 346 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$CommonTokenStream.<init>:(LAntlr4Master;LAntlr4Master$LexerInterpreter;)V
[java::Antlr4Master$CommonTokenStream.<init>:(LAntlr4Master;LAntlr4Master$LexerInterpreter;)V.null-pointer-exception.1] line 509 Null pointer check: SUCCESS
[java::Antlr4Master$CommonTokenStream.<init>:(LAntlr4Master;LAntlr4Master$LexerInterpreter;)V.null-pointer-exception.2] line 509 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$GrammarDependencies.<init>:(LAntlr4Master;)V
[java::Antlr4Master$GrammarDependencies.<init>:(LAntlr4Master;)V.null-pointer-exception.1] line 53 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.<init>:(LAntlr4Master;)V.null-pointer-exception.2] line 53 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.1] line 66 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.2] line 66 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.3] line 66 Null pointer check: FAILURE
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.4] line 69 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.5] line 70 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.6] line 71 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.bad-dynamic-cast.1] line 73 Dynamic cast check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.7] line 73 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.8] line 73 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.9] line 73 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.10] line 75 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.11] line 75 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.12] line 76 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.13] line 76 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.bad-dynamic-cast.2] line 79 Dynamic cast check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.14] line 79 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.15] line 79 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.16] line 79 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.17] line 80 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.18] line 80 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.19] line 80 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.20] line 80 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.21] line 82 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.23] line 83 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.24] line 83 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.25] line 83 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.22] line 85 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.26] line 87 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.27] line 87 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.28] line 87 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.29] line 87 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.30] line 87 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.bad-dynamic-cast.3] line 91 Dynamic cast check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.31] line 91 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.32] line 91 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.33] line 91 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.34] line 93 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.35] line 93 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.36] line 93 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.37] line 95 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.39] line 96 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.40] line 96 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.41] line 96 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.38] line 98 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.42] line 100 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.43] line 100 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.44] line 100 Null pointer check: SUCCESS
[java::Antlr4Master$GrammarDependencies.analyze:(Ljava/util/Set;Ljava/util/Set;LAntlr4Master$Tool;)LAntlr4Master$GrammarDependencies;.null-pointer-exception.45] line 100 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$LexerGrammar.<init>:(LAntlr4Master;Ljava/lang/String;)V
[java::Antlr4Master$LexerGrammar.<init>:(LAntlr4Master;Ljava/lang/String;)V.null-pointer-exception.1] line 496 Null pointer check: SUCCESS
[java::Antlr4Master$LexerGrammar.<init>:(LAntlr4Master;Ljava/lang/String;)V.null-pointer-exception.2] line 496 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$MojoUtils.checksum:(Ljava/io/File;)[B
[java::Antlr4Master$MojoUtils.checksum:(Ljava/io/File;)[B.array-create-negative-size.1] line 321 Array size should be >= 0: SUCCESS

Antlr4Master.java function java::Antlr4Master$PredictionMode.<init>:()V
[java::Antlr4Master$PredictionMode.<init>:()V.null-pointer-exception.1] line 452 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$T.<init>:(LAntlr4Master;)V
[java::Antlr4Master$T.<init>:(LAntlr4Master;)V.null-pointer-exception.1] line 482 Null pointer check: SUCCESS
[java::Antlr4Master$T.<init>:(LAntlr4Master;)V.null-pointer-exception.2] line 482 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$TokenStreamRewriter.<init>:(LAntlr4Master;LAntlr4Master$CommonTokenStream;)V
[java::Antlr4Master$TokenStreamRewriter.<init>:(LAntlr4Master;LAntlr4Master$CommonTokenStream;)V.null-pointer-exception.1] line 519 Null pointer check: SUCCESS
[java::Antlr4Master$TokenStreamRewriter.<init>:(LAntlr4Master;LAntlr4Master$CommonTokenStream;)V.null-pointer-exception.2] line 519 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master$Tool.<init>:(LAntlr4Master;)V
[java::Antlr4Master$Tool.<init>:(LAntlr4Master;)V.null-pointer-exception.1] line 316 Null pointer check: SUCCESS
[java::Antlr4Master$Tool.<init>:(LAntlr4Master;)V.null-pointer-exception.2] line 316 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.<init>:()V
[java::Antlr4Master.<init>:()V.null-pointer-exception.1] line 14 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.1] line 188 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.2] line 190 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.bad-dynamic-cast.1] line 191 Dynamic cast check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.3] line 191 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.4] line 191 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.5] line 191 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.6] line 192 Null pointer check: SUCCESS
[java::Antlr4Master.hasSLLConflictTerminatingPrediction:(LAntlr4Master$PredictionMode;LAntlr4Master$ATNConfigSet;)Z.null-pointer-exception.7] line 193 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.process:()V
[java::Antlr4Master.process:()V.null-pointer-exception.1] line 113 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.2] line 116 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.3] line 116 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.4] line 120 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.5] line 122 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.6] line 122 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.7] line 125 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.array-create-negative-size.1] line 130 Array size should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-high.1] line 130 Array index should be < length: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-low.1] line 130 Array index should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.8] line 130 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.9] line 130 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.array-create-negative-size.2] line 131 Array size should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-high.2] line 131 Array index should be < length: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-low.2] line 131 Array index should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.bad-dynamic-cast.1] line 131 Dynamic cast check: SUCCESS
[java::Antlr4Master.process:()V.bad-dynamic-cast.2] line 131 Dynamic cast check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.10] line 131 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.11] line 131 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.12] line 135 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.13] line 135 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.14] line 137 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.15] line 137 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.array-create-negative-size.3] line 138 Array size should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-high.3] line 138 Array index should be < length: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-low.3] line 138 Array index should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.16] line 138 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.17] line 138 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.array-create-negative-size.4] line 139 Array size should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-high.4] line 139 Array index should be < length: SUCCESS
[java::Antlr4Master.process:()V.array-index-out-of-bounds-low.4] line 139 Array index should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.bad-dynamic-cast.3] line 139 Dynamic cast check: SUCCESS
[java::Antlr4Master.process:()V.bad-dynamic-cast.4] line 139 Dynamic cast check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.18] line 139 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.19] line 139 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.20] line 142 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.21] line 142 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.22] line 143 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.23] line 143 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.24] line 145 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.25] line 148 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.28] line 148 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.29] line 148 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.30] line 148 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.26] line 149 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.27] line 150 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.31] line 152 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.bad-dynamic-cast.5] line 155 Dynamic cast check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.32] line 155 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.33] line 155 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.34] line 155 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.35] line 155 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.36] line 157 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.array-create-negative-size.5] line 158 Array size should be >= 0: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.37] line 160 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.40] line 160 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.41] line 160 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.42] line 160 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.38] line 161 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.39] line 162 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.43] line 164 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.44] line 164 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.45] line 165 Null pointer check: SUCCESS
[java::Antlr4Master.process:()V.null-pointer-exception.46] line 167 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.1] line 215 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-high.1] line 216 Array index should be < length: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-low.1] line 216 Array index should be >= 0: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.2] line 216 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.3] line 216 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.4] line 222 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-high.2] line 223 Array index should be < length: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-low.2] line 223 Array index should be >= 0: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.5] line 223 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.6] line 229 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.7] line 229 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.8] line 231 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-high.3] line 232 Array index should be < length: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.array-index-out-of-bounds-low.3] line 232 Array index should be >= 0: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.9] line 232 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.10] line 232 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.11] line 233 Null pointer check: SUCCESS
[java::Antlr4Master.removeFast:(LAntlr4Master$T;)Z.null-pointer-exception.12] line 233 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.runAll:()V
[java::Antlr4Master.runAll:()V.null-pointer-exception.1] line 31 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.2] line 31 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.3] line 31 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.4] line 31 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.5] line 31 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.6] line 34 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.7] line 37 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.8] line 40 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.9] line 42 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.10] line 42 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.11] line 43 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.12] line 43 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.13] line 45 Null pointer check: SUCCESS
[java::Antlr4Master.runAll:()V.null-pointer-exception.14] line 48 Null pointer check: SUCCESS

Antlr4Master.java function java::Antlr4Master.testToStringStartStop2:()V
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.1] line 244 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.2] line 256 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.3] line 256 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.4] line 257 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.5] line 258 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.6] line 259 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.7] line 261 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.8] line 261 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.9] line 263 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.10] line 265 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.11] line 266 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.12] line 268 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.13] line 270 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.14] line 272 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.15] line 274 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.16] line 276 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.17] line 278 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.18] line 280 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.19] line 282 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.20] line 284 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.21] line 286 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.22] line 288 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.23] line 289 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.24] line 291 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.25] line 293 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.26] line 294 Null pointer check: SUCCESS
[java::Antlr4Master.testToStringStartStop2:()V.null-pointer-exception.27] line 297 Null pointer check: SUCCESS

CarReport.java function java::CarReport$1.<init>:(LCarReport;LCarReport$Save;)V
[java::CarReport$1.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.1] line 54 Null pointer check: SUCCESS
[java::CarReport$1.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.2] line 54 Null pointer check: SUCCESS

CarReport.java function java::CarReport$2.<init>:(LCarReport;I[JI)V
[java::CarReport$2.<init>:(LCarReport;I[JI)V.null-pointer-exception.1] line 167 Null pointer check: SUCCESS
[java::CarReport$2.<init>:(LCarReport;I[JI)V.null-pointer-exception.2] line 167 Null pointer check: SUCCESS
[java::CarReport$2.<init>:(LCarReport;I[JI)V.null-pointer-exception.3] line 167 Null pointer check: SUCCESS
[java::CarReport$2.<init>:(LCarReport;I[JI)V.null-pointer-exception.4] line 167 Null pointer check: SUCCESS
[java::CarReport$2.<init>:(LCarReport;I[JI)V.null-pointer-exception.5] line 167 Null pointer check: SUCCESS

CarReport.java function java::CarReport$3.<init>:(LCarReport;)V
[java::CarReport$3.<init>:(LCarReport;)V.null-pointer-exception.1] line 237 Null pointer check: SUCCESS
[java::CarReport$3.<init>:(LCarReport;)V.null-pointer-exception.2] line 237 Null pointer check: SUCCESS

CarReport.java function java::CarReport$AbstractFormFieldValidator.<init>:(LCarReport;LCarReport$Save;)V
[java::CarReport$AbstractFormFieldValidator.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.1] line 376 Null pointer check: SUCCESS
[java::CarReport$AbstractFormFieldValidator.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.2] line 376 Null pointer check: SUCCESS

CarReport.java function java::CarReport$AbstractReport.<init>:(LCarReport;)V
[java::CarReport$AbstractReport.<init>:(LCarReport;)V.null-pointer-exception.1] line 636 Null pointer check: SUCCESS
[java::CarReport$AbstractReport.<init>:(LCarReport;)V.null-pointer-exception.2] line 636 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Activity.<init>:()V
[java::CarReport$Activity.<init>:()V.null-pointer-exception.1] line 477 Null pointer check: SUCCESS

CarReport.java function java::CarReport$AnimatorListenerAdapter.<init>:(LCarReport;)V
[java::CarReport$AnimatorListenerAdapter.<init>:(LCarReport;)V.null-pointer-exception.1] line 693 Null pointer check: SUCCESS
[java::CarReport$AnimatorListenerAdapter.<init>:(LCarReport;)V.null-pointer-exception.2] line 693 Null pointer check: SUCCESS

CarReport.java function java::CarReport$AnimatorSet.<init>:(LCarReport;)V
[java::CarReport$AnimatorSet.<init>:(LCarReport;)V.null-pointer-exception.1] line 662 Null pointer check: SUCCESS
[java::CarReport$AnimatorSet.<init>:(LCarReport;)V.null-pointer-exception.2] line 662 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Builder.<init>:(LCarReport;LCarReport;)V
[java::CarReport$Builder.<init>:(LCarReport;LCarReport;)V.null-pointer-exception.1] line 554 Null pointer check: SUCCESS
[java::CarReport$Builder.<init>:(LCarReport;LCarReport;)V.null-pointer-exception.2] line 554 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Bundle.<init>:(LCarReport;)V
[java::CarReport$Bundle.<init>:(LCarReport;)V.null-pointer-exception.1] line 394 Null pointer check: SUCCESS
[java::CarReport$Bundle.<init>:(LCarReport;)V.null-pointer-exception.2] line 394 Null pointer check: SUCCESS

CarReport.java function java::CarReport$CarSelection.<init>:(LCarReport;)V
[java::CarReport$CarSelection.<init>:(LCarReport;)V.null-pointer-exception.1] line 570 Null pointer check: SUCCESS
[java::CarReport$CarSelection.<init>:(LCarReport;)V.null-pointer-exception.2] line 570 Null pointer check: SUCCESS

CarReport.java function java::CarReport$ComboLineColumnChartView.<init>:(LCarReport;)V
[java::CarReport$ComboLineColumnChartView.<init>:(LCarReport;)V.null-pointer-exception.1] line 614 Null pointer check: SUCCESS
[java::CarReport$ComboLineColumnChartView.<init>:(LCarReport;)V.null-pointer-exception.2] line 614 Null pointer check: SUCCESS

CarReport.java function java::CarReport$DbxException.<init>:(LCarReport;)V
[java::CarReport$DbxException.<init>:(LCarReport;)V.null-pointer-exception.1] line 727 Null pointer check: SUCCESS
[java::CarReport$DbxException.<init>:(LCarReport;)V.null-pointer-exception.2] line 727 Null pointer check: SUCCESS

CarReport.java function java::CarReport$DialogInterface$OnClickListener.<init>:()V
[java::CarReport$DialogInterface$OnClickListener.<init>:()V.null-pointer-exception.1] line 549 Null pointer check: SUCCESS

CarReport.java function java::CarReport$FormFieldNotEmptyValidator.<init>:(LCarReport;LCarReport$Save;)V
[java::CarReport$FormFieldNotEmptyValidator.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.1] line 371 Null pointer check: SUCCESS
[java::CarReport$FormFieldNotEmptyValidator.<init>:(LCarReport;LCarReport$Save;)V.null-pointer-exception.2] line 371 Null pointer check: SUCCESS

CarReport.java function java::CarReport$FormValidator.<init>:(LCarReport;)V
[java::CarReport$FormValidator.<init>:(LCarReport;)V.null-pointer-exception.1] line 356 Null pointer check: SUCCESS
[java::CarReport$FormValidator.<init>:(LCarReport;)V.null-pointer-exception.2] line 356 Null pointer check: SUCCESS

CarReport.java function java::CarReport$FuelTypeContentValues.<init>:(LCarReport;)V
[java::CarReport$FuelTypeContentValues.<init>:(LCarReport;)V.null-pointer-exception.1] line 332 Null pointer check: SUCCESS
[java::CarReport$FuelTypeContentValues.<init>:(LCarReport;)V.null-pointer-exception.2] line 332 Null pointer check: SUCCESS

CarReport.java function java::CarReport$FuelTypeSelection.<init>:(LCarReport;)V
[java::CarReport$FuelTypeSelection.<init>:(LCarReport;)V.null-pointer-exception.1] line 350 Null pointer check: SUCCESS
[java::CarReport$FuelTypeSelection.<init>:(LCarReport;)V.null-pointer-exception.2] line 350 Null pointer check: SUCCESS

CarReport.java function java::CarReport$NetworkIOException.<init>:(LCarReport;)V
[java::CarReport$NetworkIOException.<init>:(LCarReport;)V.null-pointer-exception.1] line 724 Null pointer check: SUCCESS
[java::CarReport$NetworkIOException.<init>:(LCarReport;)V.null-pointer-exception.2] line 724 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Point.<init>:(LCarReport;)V
[java::CarReport$Point.<init>:(LCarReport;)V.null-pointer-exception.1] line 696 Null pointer check: SUCCESS
[java::CarReport$Point.<init>:(LCarReport;)V.null-pointer-exception.2] line 696 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Preferences.<init>:(LCarReport;LCarReport;)V
[java::CarReport$Preferences.<init>:(LCarReport;LCarReport;)V.null-pointer-exception.1] line 525 Null pointer check: SUCCESS
[java::CarReport$Preferences.<init>:(LCarReport;LCarReport;)V.null-pointer-exception.2] line 525 Null pointer check: SUCCESS

CarReport.java function java::CarReport$Rect.<init>:(LCarReport;)V
[java::CarReport$Rect.<init>:(LCarReport;)V.null-pointer-exception.1] line 645 Null pointer check: SUCCESS
[java::CarReport$Rect.<init>:(LCarReport;)V.null-pointer-exception.2] line 645 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SetupWebDavSyncDialogActivity$1.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V
[java::CarReport$SetupWebDavSyncDialogActivity$1.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.1] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity$1.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.2] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity$1.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.3] line 102 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SetupWebDavSyncDialogActivity$2.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V
[java::CarReport$SetupWebDavSyncDialogActivity$2.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.1] line 130 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity$2.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.2] line 130 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SetupWebDavSyncDialogActivity$3.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V
[java::CarReport$SetupWebDavSyncDialogActivity$3.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.1] line 136 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity$3.<init>:(LCarReport$SetupWebDavSyncDialogActivity;)V.null-pointer-exception.2] line 136 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SetupWebDavSyncDialogActivity.<init>:(LCarReport;)V
[java::CarReport$SetupWebDavSyncDialogActivity.<init>:(LCarReport;)V.null-pointer-exception.1] line 93 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.<init>:(LCarReport;)V.null-pointer-exception.2] line 93 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.1] line 97 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.2] line 98 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.3] line 98 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.4] line 98 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.5] line 99 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.6] line 99 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.7] line 99 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.1] line 101 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.8] line 101 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.9] line 101 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.10] line 101 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.11] line 101 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.12] line 101 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.13] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.14] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.15] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.16] line 102 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.2] line 119 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.17] line 119 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.18] line 119 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.19] line 119 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.20] line 119 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.21] line 119 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.3] line 120 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.22] line 120 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.23] line 120 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.24] line 120 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.25] line 120 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.26] line 120 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.4] line 121 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.27] line 121 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.28] line 121 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.29] line 121 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.30] line 121 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.31] line 121 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.5] line 122 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.32] line 122 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.33] line 122 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.34] line 122 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.35] line 122 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.36] line 122 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.6] line 123 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.37] line 123 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.38] line 123 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.39] line 123 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.40] line 123 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.41] line 123 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.42] line 125 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.43] line 125 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.44] line 125 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.45] line 126 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.46] line 126 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.47] line 126 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.48] line 127 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.49] line 127 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.50] line 127 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.bad-dynamic-cast.7] line 129 Dynamic cast check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.51] line 129 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.52] line 129 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.53] line 129 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.54] line 129 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.55] line 129 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.56] line 130 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.57] line 130 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.58] line 130 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.59] line 130 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.60] line 136 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.61] line 136 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.62] line 136 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.63] line 136 Null pointer check: SUCCESS
[java::CarReport$SetupWebDavSyncDialogActivity.onCreate:(LCarReport$Bundle;)V.null-pointer-exception.64] line 136 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SyncIoException.<init>:(LCarReport;LCarReport$NetworkIOException;)V
[java::CarReport$SyncIoException.<init>:(LCarReport;LCarReport$NetworkIOException;)V.null-pointer-exception.1] line 702 Null pointer check: SUCCESS
[java::CarReport$SyncIoException.<init>:(LCarReport;LCarReport$NetworkIOException;)V.null-pointer-exception.2] line 702 Null pointer check: SUCCESS

CarReport.java function java::CarReport$SyncParseException.<init>:(LCarReport;Ljava/lang/Exception;)V
[java::CarReport$SyncParseException.<init>:(LCarReport;Ljava/lang/Exception;)V.null-pointer-exception.1] line 707 Null pointer check: SUCCESS
[java::CarReport$SyncParseException.<init>:(LCarReport;Ljava/lang/Exception;)V.null-pointer-exception.2] line 707 Null pointer check: SUCCESS

CarReport.java function java::CarReport$TextWatcher.<init>:(LCarReport;)V
[java::CarReport$TextWatcher.<init>:(LCarReport;)V.null-pointer-exception.1] line 497 Null pointer check: SUCCESS
[java::CarReport$TextWatcher.<init>:(LCarReport;)V.null-pointer-exception.2] line 497 Null pointer check: SUCCESS

CarReport.java function java::CarReport$View$OnClickListener.<init>:()V
[java::CarReport$View$OnClickListener.<init>:()V.null-pointer-exception.1] line 470 Null pointer check: SUCCESS

CarReport.java function java::CarReport.<init>:()V
[java::CarReport.<init>:()V.null-pointer-exception.1] line 9 Null pointer check: SUCCESS

CarReport.java function java::CarReport.downloadFile:()V
[java::CarReport.downloadFile:()V.null-pointer-exception.1] line 252 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.2] line 253 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.3] line 253 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.4] line 253 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.5] line 253 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.6] line 257 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.7] line 258 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.8] line 258 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.9] line 259 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.10] line 259 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.11] line 260 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.12] line 262 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.13] line 262 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.16] line 265 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.17] line 265 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.18] line 267 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.19] line 267 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.14] line 271 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.20] line 271 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.15] line 277 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.21] line 277 Null pointer check: SUCCESS
[java::CarReport.downloadFile:()V.null-pointer-exception.22] line 280 Null pointer check: SUCCESS

CarReport.java function java::CarReport.handleFABClick:(II)V
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.1] line 149 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.2] line 151 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.bad-dynamic-cast.1] line 152 Dynamic cast check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.3] line 152 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.4] line 152 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.5] line 152 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.6] line 152 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.7] line 155 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.8] line 155 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.9] line 156 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.10] line 156 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.11] line 157 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-create-negative-size.1] line 159 Array size should be >= 0: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.12] line 159 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-create-negative-size.2] line 160 Array size should be >= 0: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.13] line 160 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.14] line 161 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-index-out-of-bounds-high.1] line 162 Array index should be < length: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-index-out-of-bounds-low.1] line 162 Array index should be >= 0: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.15] line 162 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.16] line 162 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.17] line 162 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-index-out-of-bounds-high.2] line 163 Array index should be < length: SUCCESS
[java::CarReport.handleFABClick:(II)V.array-index-out-of-bounds-low.2] line 163 Array index should be >= 0: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.18] line 163 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.19] line 163 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.20] line 163 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.21] line 166 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.22] line 166 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.23] line 167 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.24] line 174 Null pointer check: SUCCESS
[java::CarReport.handleFABClick:(II)V.null-pointer-exception.25] line 175 Null pointer check: SUCCESS

CarReport.java function java::CarReport.runAll:()V
[java::CarReport.runAll:()V.null-pointer-exception.1] line 37 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.2] line 38 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.3] line 38 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.4] line 38 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.5] line 39 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.6] line 40 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.7] line 40 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.8] line 40 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.9] line 42 Null pointer check: SUCCESS
[java::CarReport.runAll:()V.null-pointer-exception.10] line 45 Null pointer check: SUCCESS

CarReport.java function java::CarReport.save:()Z
[java::CarReport.save:()Z.null-pointer-exception.1] line 52 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.2] line 53 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.3] line 53 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.4] line 53 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.5] line 54 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.6] line 54 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.7] line 54 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.8] line 66 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.9] line 66 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.10] line 66 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.11] line 68 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.12] line 69 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.13] line 70 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.14] line 70 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.15] line 70 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.16] line 70 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.17] line 71 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.18] line 71 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.19] line 71 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.20] line 71 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.21] line 73 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.22] line 74 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.23] line 74 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.24] line 74 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.25] line 76 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.26] line 76 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.27] line 76 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.28] line 76 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.29] line 77 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.30] line 77 Null pointer check: SUCCESS
[java::CarReport.save:()Z.null-pointer-exception.31] line 77 Null pointer check: SUCCESS

CarReport.java function java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.1] line 182 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.2] line 186 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.3] line 187 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.4] line 187 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.5] line 190 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.6] line 192 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.7] line 192 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.8] line 193 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.9] line 193 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.10] line 193 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.11] line 194 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.12] line 194 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.13] line 197 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.14] line 197 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.15] line 198 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.16] line 199 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.17] line 201 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.18] line 201 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.19] line 201 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.20] line 202 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.21] line 202 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.22] line 203 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.23] line 203 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.24] line 203 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.25] line 203 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.26] line 204 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.27] line 204 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.28] line 204 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.29] line 207 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.30] line 207 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.31] line 207 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.32] line 207 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.33] line 209 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.34] line 209 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.35] line 209 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.36] line 209 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.37] line 214 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.38] line 214 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.39] line 215 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.40] line 215 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.41] line 220 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.42] line 220 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.43] line 221 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.44] line 221 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.45] line 225 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.50] line 226 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.46] line 227 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.47] line 227 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.48] line 227 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.49] line 227 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.51] line 229 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.52] line 229 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.53] line 229 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.54] line 229 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.55] line 229 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.57] line 231 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.58] line 231 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.56] line 232 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.60] line 233 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.61] line 233 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.59] line 234 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.62] line 235 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.63] line 235 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.64] line 235 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.65] line 235 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.66] line 235 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.67] line 237 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.68] line 237 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.69] line 244 Null pointer check: SUCCESS
[java::CarReport.showFullScreenChart:(LCarReport$AbstractReport;LCarReport$ComboLineColumnChartView;)V.null-pointer-exception.70] line 245 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$1.<init>:(LHibernateORM;)V
[java::HibernateORM$1.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 26 Null pointer check: SUCCESS
[java::HibernateORM$1.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 26 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$1WorkImpl.<init>:(LHibernateORM;LHibernateORM$SessionImplementor;)V
[java::HibernateORM$1WorkImpl.<init>:(LHibernateORM;LHibernateORM$SessionImplementor;)V.null-pointer-exception.1] line 244 Null pointer check: SUCCESS
[java::HibernateORM$1WorkImpl.<init>:(LHibernateORM;LHibernateORM$SessionImplementor;)V.null-pointer-exception.2] line 244 Null pointer check: SUCCESS
[java::HibernateORM$1WorkImpl.<init>:(LHibernateORM;LHibernateORM$SessionImplementor;)V.null-pointer-exception.3] line 244 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$CollectionPersister.<init>:()V
[java::HibernateORM$CollectionPersister.<init>:()V.null-pointer-exception.1] line 81 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$CollectionPersister.getRole:()[C
[java::HibernateORM$CollectionPersister.getRole:()[C.array-create-negative-size.1] line 83 Array size should be >= 0: SUCCESS

HibernateORM.java function java::HibernateORM$Dialect.<init>:(LHibernateORM;)V
[java::HibernateORM$Dialect.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 325 Null pointer check: SUCCESS
[java::HibernateORM$Dialect.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 325 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$NoArgSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;Z)V
[java::HibernateORM$NoArgSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;Z)V.null-pointer-exception.1] line 346 Null pointer check: SUCCESS
[java::HibernateORM$NoArgSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;Z)V.null-pointer-exception.2] line 347 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$PersistentCollection.<init>:()V
[java::HibernateORM$PersistentCollection.<init>:()V.null-pointer-exception.1] line 95 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$QueryParameters.<init>:(LHibernateORM;)V
[java::HibernateORM$QueryParameters.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 459 Null pointer check: SUCCESS
[java::HibernateORM$QueryParameters.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 459 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$Session.<init>:(LHibernateORM;)V
[java::HibernateORM$Session.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 497 Null pointer check: SUCCESS
[java::HibernateORM$Session.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 497 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$SessionImplementor.<init>:(LHibernateORM;)V
[java::HibernateORM$SessionImplementor.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 462 Null pointer check: SUCCESS
[java::HibernateORM$SessionImplementor.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 462 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$SharedSessionContractImplementor.<init>:(LHibernateORM;)V
[java::HibernateORM$SharedSessionContractImplementor.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 441 Null pointer check: SUCCESS
[java::HibernateORM$SharedSessionContractImplementor.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 441 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;)V
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 340 Null pointer check: SUCCESS
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 340 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;)V
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;)V.null-pointer-exception.1] line 333 Null pointer check: SUCCESS
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;)V.null-pointer-exception.2] line 333 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;)V
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;)V.null-pointer-exception.1] line 336 Null pointer check: SUCCESS
[java::HibernateORM$StandardSQLFunction.<init>:(LHibernateORM;Ljava/lang/String;Ljava/lang/Object;)V.null-pointer-exception.2] line 336 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.1] line 123 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.2] line 124 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.3] line 125 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.4] line 126 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.5] line 127 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.6] line 128 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.7] line 129 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.8] line 130 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.9] line 131 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.10] line 132 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.11] line 133 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.12] line 134 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.13] line 135 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.14] line 136 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.15] line 137 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.16] line 138 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.17] line 141 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.18] line 142 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.19] line 144 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.20] line 144 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.21] line 145 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.22] line 145 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.23] line 145 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.24] line 146 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.25] line 146 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.26] line 147 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.27] line 147 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.28] line 148 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.29] line 148 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.30] line 149 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.31] line 149 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.32] line 150 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.33] line 150 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.34] line 151 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.35] line 151 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.36] line 152 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.37] line 152 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.38] line 153 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.39] line 153 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.40] line 154 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.41] line 154 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.42] line 155 Null pointer check: SUCCESS
[java::HibernateORM$TimesTenDialect.<init>:(LHibernateORM;)V.null-pointer-exception.43] line 155 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM$Type.toLoggableString:(Ljava/io/Serializable;Ljava/lang/Object;)[C
[java::HibernateORM$Type.toLoggableString:(Ljava/io/Serializable;Ljava/lang/Object;)[C.array-create-negative-size.1] line 107 Array size should be >= 0: SUCCESS

HibernateORM.java function java::HibernateORM.<init>:()V
[java::HibernateORM.<init>:()V.null-pointer-exception.1] line 5 Null pointer check: SUCCESS
[java::HibernateORM.<init>:()V.null-pointer-exception.2] line 6 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.1] line 293 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.2] line 294 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.3] line 296 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.4] line 299 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.5] line 299 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.6] line 300 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.7] line 302 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.8] line 303 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.9] line 307 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.11] line 307 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.10] line 308 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.12] line 312 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.13] line 313 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.14] line 313 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.15] line 314 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.17] line 316 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.18] line 316 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.16] line 317 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.19] line 319 Null pointer check: SUCCESS
[java::HibernateORM.collectionInfoString:(LHibernateORM$CollectionPersister;LHibernateORM$PersistentCollection;Ljava/io/Serializable;LHibernateORM$SharedSessionContractImplementor;)Ljava/lang/String;.null-pointer-exception.20] line 321 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.1] line 163 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.2] line 163 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.3] line 170 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.4] line 170 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.5] line 170 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.6] line 170 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.7] line 172 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.1] line 173 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.1] line 173 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.8] line 173 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.9] line 173 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.10] line 173 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.11] line 174 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.12] line 176 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.13] line 176 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.14] line 176 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.15] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.16] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.17] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.18] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.21] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.22] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.23] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.24] line 180 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.19] line 181 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.20] line 181 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.25] line 181 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.26] line 181 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.27] line 183 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.28] line 186 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.29] line 186 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.30] line 186 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.31] line 186 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.32] line 186 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.33] line 190 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.34] line 190 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.2] line 191 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.2] line 191 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.35] line 191 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.36] line 191 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.3] line 196 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.3] line 196 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.37] line 196 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.38] line 196 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.39] line 196 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.40] line 196 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.41] line 196 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.4] line 197 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.4] line 197 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.42] line 197 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.43] line 197 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.5] line 199 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.5] line 199 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.44] line 199 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.45] line 199 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.46] line 199 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.6] line 200 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.7] line 200 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.6] line 200 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.7] line 200 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.47] line 200 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.48] line 200 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.49] line 200 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.50] line 200 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.51] line 202 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.52] line 204 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.53] line 204 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.54] line 204 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.55] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.56] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.57] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.58] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.61] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.62] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.63] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.64] line 208 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.59] line 209 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.60] line 209 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.65] line 209 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.66] line 209 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.67] line 211 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-high.8] line 214 Array index should be < length: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.array-index-out-of-bounds-low.8] line 214 Array index should be >= 0: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.68] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.69] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.70] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.71] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.72] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.73] line 214 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.74] line 221 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.75] line 221 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.76] line 221 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.77] line 221 Null pointer check: SUCCESS
[java::HibernateORM.execute:(LHibernateORM$SharedSessionContractImplementor;LHibernateORM$QueryParameters;)I.null-pointer-exception.78] line 222 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM.extractSequenceValue:(LHibernateORM$SessionImplementor;)J
[java::HibernateORM.extractSequenceValue:(LHibernateORM$SessionImplementor;)J.null-pointer-exception.1] line 269 Null pointer check: SUCCESS
[java::HibernateORM.extractSequenceValue:(LHibernateORM$SessionImplementor;)J.null-pointer-exception.2] line 270 Null pointer check: SUCCESS
[java::HibernateORM.extractSequenceValue:(LHibernateORM$SessionImplementor;)J.null-pointer-exception.3] line 271 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM.getExactOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;
[java::HibernateORM.getExactOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;.array-create-negative-size.1] line 329 Array size should be >= 0: SUCCESS

HibernateORM.java function java::HibernateORM.getOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;
[java::HibernateORM.getOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;.null-pointer-exception.1] line 39 Null pointer check: SUCCESS
[java::HibernateORM.getOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;.null-pointer-exception.2] line 72 Null pointer check: SUCCESS
[java::HibernateORM.getOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;.null-pointer-exception.3] line 75 Null pointer check: SUCCESS
[java::HibernateORM.getOverriddenColumn:(Ljava/lang/String;)[Ljavax/persistence/Column;.null-pointer-exception.4] line 75 Null pointer check: SUCCESS

HibernateORM.java function java::HibernateORM.runAll:()V
[java::HibernateORM.runAll:()V.null-pointer-exception.1] line 17 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.2] line 18 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.3] line 20 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.4] line 20 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.5] line 20 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.6] line 23 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.7] line 25 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.8] line 25 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.9] line 26 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.10] line 26 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.11] line 26 Null pointer check: SUCCESS
[java::HibernateORM.runAll:()V.null-pointer-exception.12] line 26 Null pointer check: SUCCESS

K9.java function java::K9$Context.<init>:()V
[java::K9$Context.<init>:()V.null-pointer-exception.1] line 249 Null pointer check: SUCCESS

K9.java function java::K9$DefaultTrustedSocketFactory.<init>:(LK9$Context;)V
[java::K9$DefaultTrustedSocketFactory.<init>:(LK9$Context;)V.null-pointer-exception.1] line 369 Null pointer check: SUCCESS

K9.java function java::K9$ExternalStorageProvider.<init>:()V
[java::K9$ExternalStorageProvider.<init>:()V.null-pointer-exception.1] line 296 Null pointer check: SUCCESS

K9.java function java::K9$ImapStore.<init>:(LK9$StoreConfig;LK9$DefaultTrustedSocketFactory;LK9$ConnectivityManager;LK9$OAuth2TokenProvider;)V
[java::K9$ImapStore.<init>:(LK9$StoreConfig;LK9$DefaultTrustedSocketFactory;LK9$ConnectivityManager;LK9$OAuth2TokenProvider;)V.null-pointer-exception.1] line 375 Null pointer check: SUCCESS

K9.java function java::K9$InternalStorageProvider.<init>:()V
[java::K9$InternalStorageProvider.<init>:()V.null-pointer-exception.1] line 278 Null pointer check: SUCCESS

K9.java function java::K9$MessagingException.<init>:(Ljava/lang/String;)V
[java::K9$MessagingException.<init>:(Ljava/lang/String;)V.null-pointer-exception.1] line 354 Null pointer check: SUCCESS

K9.java function java::K9$MockSmtpServer.<init>:(LK9;)V
[java::K9$MockSmtpServer.<init>:(LK9;)V.null-pointer-exception.1] line 394 Null pointer check: SUCCESS
[java::K9$MockSmtpServer.<init>:(LK9;)V.null-pointer-exception.2] line 394 Null pointer check: SUCCESS

K9.java function java::K9$Pop3Store.<init>:(LK9$StoreConfig;LK9$DefaultTrustedSocketFactory;)V
[java::K9$Pop3Store.<init>:(LK9$StoreConfig;LK9$DefaultTrustedSocketFactory;)V.null-pointer-exception.1] line 381 Null pointer check: SUCCESS

K9.java function java::K9$ProvLock.<init>:(LK9;)V
[java::K9$ProvLock.<init>:(LK9;)V.null-pointer-exception.1] line 260 Null pointer check: SUCCESS
[java::K9$ProvLock.<init>:(LK9;)V.null-pointer-exception.2] line 260 Null pointer check: SUCCESS

K9.java function java::K9$StorageManager.<init>:(LK9;LK9$Context;)V
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.1] line 160 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.2] line 160 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.3] line 162 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.4] line 162 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.5] line 165 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.array-create-negative-size.1] line 180 Array size should be >= 0: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.array-index-out-of-bounds-high.1] line 180 Array index should be < length: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.array-index-out-of-bounds-high.2] line 180 Array index should be < length: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.array-index-out-of-bounds-low.1] line 180 Array index should be >= 0: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.array-index-out-of-bounds-low.2] line 180 Array index should be >= 0: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.6] line 180 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.7] line 180 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.8] line 180 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.9] line 180 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.bad-dynamic-cast.1] line 182 Dynamic cast check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.10] line 182 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.11] line 182 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.12] line 182 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.13] line 184 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.14] line 187 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.15] line 188 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.16] line 188 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.17] line 188 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.18] line 189 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.19] line 189 Null pointer check: SUCCESS
[java::K9$StorageManager.<init>:(LK9;LK9$Context;)V.null-pointer-exception.20] line 189 Null pointer check: SUCCESS

K9.java function java::K9$Store.<init>:()V
[java::K9$Store.<init>:()V.null-pointer-exception.1] line 344 Null pointer check: SUCCESS

K9.java function java::K9$StoreConfig.<init>:()V
[java::K9$StoreConfig.<init>:()V.null-pointer-exception.1] line 347 Null pointer check: SUCCESS

K9.java function java::K9$SynchronizationAid.<init>:(LK9;)V
[java::K9$SynchronizationAid.<init>:(LK9;)V.null-pointer-exception.1] line 257 Null pointer check: SUCCESS
[java::K9$SynchronizationAid.<init>:(LK9;)V.null-pointer-exception.2] line 257 Null pointer check: SUCCESS

K9.java function java::K9$WebDavHttpClientFactory.<init>:()V
[java::K9$WebDavHttpClientFactory.<init>:()V.null-pointer-exception.1] line 385 Null pointer check: SUCCESS

K9.java function java::K9$WebDavStore.<init>:(LK9$StoreConfig;LK9$WebDavHttpClientFactory;)V
[java::K9$WebDavStore.<init>:(LK9$StoreConfig;LK9$WebDavHttpClientFactory;)V.null-pointer-exception.1] line 390 Null pointer check: SUCCESS

K9.java function java::K9.<init>:()V
[java::K9.<init>:()V.null-pointer-exception.1] line 4 Null pointer check: SUCCESS
[java::K9.<init>:()V.null-pointer-exception.2] line 6 Null pointer check: SUCCESS
[java::K9.<init>:()V.null-pointer-exception.3] line 6 Null pointer check: SUCCESS
[java::K9.<init>:()V.null-pointer-exception.4] line 7 Null pointer check: SUCCESS
[java::K9.<init>:()V.null-pointer-exception.5] line 7 Null pointer check: SUCCESS

K9.java function java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.1] line 74 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.2] line 76 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.3] line 77 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.4] line 77 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.bad-dynamic-cast.1] line 80 Dynamic cast check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.5] line 80 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.6] line 82 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.7] line 84 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.bad-dynamic-cast.2] line 87 Dynamic cast check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.8] line 87 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.9] line 87 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.10] line 89 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.11] line 90 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.12] line 90 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.13] line 91 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.14] line 92 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.15] line 92 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.16] line 96 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.17] line 101 Null pointer check: SUCCESS
[java::K9.getInstance:(LK9$Context;LK9$StoreConfig;)LK9$Store;.null-pointer-exception.18] line 101 Null pointer check: SUCCESS

K9.java function java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.1] line 111 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.2] line 112 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.3] line 113 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.4] line 114 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.5] line 115 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.6] line 116 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.7] line 117 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.8] line 118 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.9] line 119 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.10] line 120 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.11] line 121 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.12] line 122 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.13] line 123 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.14] line 124 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.15] line 125 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.16] line 126 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.17] line 129 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.18] line 130 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.20] line 132 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.19] line 134 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.21] line 137 Null pointer check: SUCCESS
[java::K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure:()V.null-pointer-exception.22] line 138 Null pointer check: SUCCESS

K9.java function java::K9.runAll:()V
[java::K9.runAll:()V.null-pointer-exception.1] line 12 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.2] line 15 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.3] line 18 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.4] line 18 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.5] line 21 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.6] line 24 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.7] line 27 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.8] line 29 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.9] line 29 Null pointer check: SUCCESS
[java::K9.runAll:()V.null-pointer-exception.10] line 30 Null pointer check: SUCCESS

K9.java function java::K9.testFetchResponse:()V
[java::K9.testFetchResponse:()V.null-pointer-exception.1] line 37 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.2] line 44 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.3] line 46 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.4] line 46 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.5] line 47 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.6] line 47 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.7] line 48 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.8] line 48 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.9] line 49 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.10] line 49 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.11] line 49 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.12] line 50 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.13] line 50 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.14] line 50 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.15] line 51 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.16] line 51 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.17] line 51 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.18] line 52 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.19] line 52 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.20] line 52 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.21] line 53 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.22] line 53 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.23] line 53 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.24] line 54 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.25] line 54 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.26] line 54 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.27] line 55 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.28] line 55 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.29] line 55 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.30] line 56 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.31] line 56 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.32] line 56 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.33] line 56 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.34] line 57 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.35] line 57 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.36] line 57 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.37] line 57 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.38] line 58 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.39] line 58 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.40] line 58 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.41] line 58 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.42] line 58 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.43] line 59 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.44] line 59 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.45] line 59 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.46] line 59 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.47] line 59 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.48] line 60 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.49] line 60 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.50] line 60 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.51] line 60 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.52] line 60 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.53] line 61 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.54] line 61 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.55] line 61 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.56] line 61 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.57] line 61 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.58] line 62 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.59] line 62 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.60] line 62 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.61] line 63 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.62] line 63 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.63] line 63 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.64] line 64 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.65] line 64 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.66] line 64 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.67] line 64 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.68] line 65 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.69] line 65 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.70] line 65 Null pointer check: SUCCESS
[java::K9.testFetchResponse:()V.null-pointer-exception.71] line 65 Null pointer check: SUCCESS

K9.java function java::K9.testTextQuoteToHtmlBlockquote:()V
[java::K9.testTextQuoteToHtmlBlockquote:()V.null-pointer-exception.1] line 212 Null pointer check: SUCCESS
[java::K9.testTextQuoteToHtmlBlockquote:()V.null-pointer-exception.2] line 213 Null pointer check: SUCCESS

Main.java function java::Main.main:([Ljava/lang/String;)V
[java::Main.main:([Ljava/lang/String;)V.1] line 9 no uncaught exception: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.1] line 9 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.2] line 12 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.3] line 13 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.4] line 15 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.5] line 16 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.6] line 18 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.7] line 19 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.8] line 21 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.9] line 22 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.10] line 24 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.11] line 25 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.12] line 27 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.13] line 28 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.14] line 30 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.15] line 31 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.16] line 33 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.17] line 34 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.18] line 36 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.19] line 37 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.20] line 39 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.21] line 40 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.22] line 42 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.23] line 43 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.24] line 45 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.25] line 46 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.26] line 48 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.27] line 49 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.28] line 51 Null pointer check: SUCCESS
[java::Main.main:([Ljava/lang/String;)V.null-pointer-exception.29] line 52 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$1.<init>:(LMyExpenses;)V
[java::MyExpenses$1.<init>:(LMyExpenses;)V.null-pointer-exception.1] line 32 Null pointer check: SUCCESS
[java::MyExpenses$1.<init>:(LMyExpenses;)V.null-pointer-exception.2] line 32 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$2.<clinit>:()V
[java::MyExpenses$2.<clinit>:()V.array-create-negative-size.1] line 48 Array size should be >= 0: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-high.1] line 48 Array index should be < length: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-high.2] line 48 Array index should be < length: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-high.3] line 48 Array index should be < length: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-low.1] line 48 Array index should be >= 0: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-low.2] line 48 Array index should be >= 0: SUCCESS
[java::MyExpenses$2.<clinit>:()V.array-index-out-of-bounds-low.3] line 48 Array index should be >= 0: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.1] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.2] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.3] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.4] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.5] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.6] line 48 Null pointer check: SUCCESS
[java::MyExpenses$2.<clinit>:()V.null-pointer-exception.7] line 48 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Bundle.<init>:(LMyExpenses;)V
[java::MyExpenses$Bundle.<init>:(LMyExpenses;)V.null-pointer-exception.1] line 359 Null pointer check: SUCCESS
[java::MyExpenses$Bundle.<init>:(LMyExpenses;)V.null-pointer-exception.2] line 359 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Chunk.<init>:(LMyExpenses;Ljava/lang/String;LMyExpenses$Font;)V
[java::MyExpenses$Chunk.<init>:(LMyExpenses;Ljava/lang/String;LMyExpenses$Font;)V.null-pointer-exception.1] line 571 Null pointer check: SUCCESS
[java::MyExpenses$Chunk.<init>:(LMyExpenses;Ljava/lang/String;LMyExpenses$Font;)V.null-pointer-exception.2] line 571 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-create-negative-size.1] line 24 Array size should be >= 0: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-high.1] line 24 Array index should be < length: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-high.2] line 24 Array index should be < length: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-high.3] line 24 Array index should be < length: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-low.1] line 24 Array index should be >= 0: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-low.2] line 24 Array index should be >= 0: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.array-index-out-of-bounds-low.3] line 24 Array index should be >= 0: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.null-pointer-exception.1] line 24 Null pointer check: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.null-pointer-exception.2] line 24 Null pointer check: SUCCESS
[java::MyExpenses$ContribFeature.$values:()[LMyExpenses$ContribFeature;.null-pointer-exception.3] line 24 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$ContribFeature.<clinit>:()V
[java::MyExpenses$ContribFeature.<clinit>:()V.null-pointer-exception.1] line 25 Null pointer check: SUCCESS
[java::MyExpenses$ContribFeature.<clinit>:()V.null-pointer-exception.2] line 26 Null pointer check: SUCCESS
[java::MyExpenses$ContribFeature.<clinit>:()V.null-pointer-exception.3] line 27 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$ContribFeature.<init>:(Ljava/lang/String;I)V
[java::MyExpenses$ContribFeature.<init>:(Ljava/lang/String;I)V.null-pointer-exception.1] line 24 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$ContribFeature.values:()[LMyExpenses$ContribFeature;
[java::MyExpenses$ContribFeature.values:()[LMyExpenses$ContribFeature;.bad-dynamic-cast.1] line 24 Dynamic cast check: SUCCESS
[java::MyExpenses$ContribFeature.values:()[LMyExpenses$ContribFeature;.null-pointer-exception.1] line 24 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Intent.<init>:(LMyExpenses;LMyExpenses;Ljava/lang/Class;)V
[java::MyExpenses$Intent.<init>:(LMyExpenses;LMyExpenses;Ljava/lang/Class;)V.null-pointer-exception.1] line 331 Null pointer check: SUCCESS
[java::MyExpenses$Intent.<init>:(LMyExpenses;LMyExpenses;Ljava/lang/Class;)V.null-pointer-exception.2] line 331 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$SplitTransaction.<init>:(LMyExpenses;Ljava/lang/Object;Ljava/lang/Long;)V
[java::MyExpenses$SplitTransaction.<init>:(LMyExpenses;Ljava/lang/Object;Ljava/lang/Long;)V.null-pointer-exception.1] line 593 Null pointer check: SUCCESS
[java::MyExpenses$SplitTransaction.<init>:(LMyExpenses;Ljava/lang/Object;Ljava/lang/Long;)V.null-pointer-exception.2] line 594 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Transaction.<init>:()V
[java::MyExpenses$Transaction.<init>:()V.null-pointer-exception.1] line 530 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Transaction.<init>:(LMyExpenses$Dummy;Ljava/lang/Long;)V
[java::MyExpenses$Transaction.<init>:(LMyExpenses$Dummy;Ljava/lang/Long;)V.null-pointer-exception.1] line 526 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$TransactionChange.<init>:(LMyExpenses;)V
[java::MyExpenses$TransactionChange.<init>:(LMyExpenses;)V.null-pointer-exception.1] line 392 Null pointer check: SUCCESS
[java::MyExpenses$TransactionChange.<init>:(LMyExpenses;)V.null-pointer-exception.2] line 392 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses$Transfer.<init>:(LMyExpenses;LMyExpenses$Dummy;Ljava/lang/Long;)V
[java::MyExpenses$Transfer.<init>:(LMyExpenses;LMyExpenses$Dummy;Ljava/lang/Long;)V.null-pointer-exception.1] line 690 Null pointer check: SUCCESS
[java::MyExpenses$Transfer.<init>:(LMyExpenses;LMyExpenses$Dummy;Ljava/lang/Long;)V.null-pointer-exception.2] line 691 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.<clinit>:()V
[java::MyExpenses.<clinit>:()V.null-pointer-exception.1] line 6 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.<init>:()V
[java::MyExpenses.<init>:()V.null-pointer-exception.1] line 6 Null pointer check: SUCCESS
[java::MyExpenses.<init>:()V.null-pointer-exception.2] line 16 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.array-index-out-of-bounds-high.1] line 48 Array index should be < length: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.array-index-out-of-bounds-low.1] line 48 Array index should be >= 0: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.1] line 48 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.2] line 48 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.3] line 50 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.4] line 51 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.5] line 52 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.6] line 53 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.7] line 54 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.8] line 54 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.bad-dynamic-cast.1] line 56 Dynamic cast check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.integer-divide-by-zero.1] line 56 Denominator should be nonzero: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.9] line 56 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.bad-dynamic-cast.2] line 57 Dynamic cast check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.integer-divide-by-zero.2] line 57 Denominator should be nonzero: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.10] line 57 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.11] line 58 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.12] line 59 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.13] line 60 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.14] line 62 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.bad-dynamic-cast.3] line 66 Dynamic cast check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.15] line 66 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.16] line 74 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.17] line 76 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.18] line 77 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.19] line 77 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.20] line 78 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.21] line 78 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.22] line 79 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.23] line 79 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.24] line 80 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.25] line 82 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.26] line 82 Null pointer check: SUCCESS
[java::MyExpenses.contribFeatureCalled:(LMyExpenses$ContribFeature;Ljava/io/Serializable;)V.null-pointer-exception.27] line 83 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.assertion.1] line 93 assertion at file MyExpenses.java line 93 function java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList; bytecode-index 6: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.1] line 93 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.2] line 93 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.3] line 95 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.4] line 96 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.5] line 102 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.6] line 103 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.7] line 103 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.8] line 103 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.9] line 104 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.10] line 105 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.11] line 105 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.12] line 105 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.13] line 106 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.14] line 106 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.15] line 106 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.16] line 107 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.17] line 109 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.18] line 109 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.19] line 109 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.20] line 110 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.21] line 111 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.22] line 111 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.23] line 113 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.24] line 117 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.25] line 117 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.26] line 118 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.27] line 119 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.28] line 119 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.29] line 121 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.30] line 122 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.assertion.2] line 123 assertion at file MyExpenses.java line 123 function java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList; bytecode-index 104: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.31] line 123 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.32] line 124 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.33] line 124 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.34] line 124 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.35] line 127 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.36] line 128 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.37] line 128 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.38] line 130 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.39] line 133 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.40] line 134 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.41] line 134 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.42] line 136 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.43] line 139 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.44] line 140 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.45] line 140 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.46] line 142 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.47] line 142 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.48] line 143 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.49] line 144 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.50] line 146 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.51] line 148 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.52] line 150 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.53] line 151 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.54] line 151 Null pointer check: SUCCESS
[java::MyExpenses.getContentProviderOperationsForCreate:(LMyExpenses$TransactionChange;II)Ljava/util/ArrayList;.null-pointer-exception.55] line 153 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.1] line 175 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.2] line 175 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.3] line 176 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.4] line 176 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.5] line 178 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.6] line 178 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.7] line 178 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.8] line 179 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.9] line 179 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.10] line 181 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.11] line 182 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.12] line 183 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.13] line 183 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.14] line 185 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.15] line 186 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.16] line 186 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.17] line 188 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.18] line 189 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.19] line 189 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.20] line 191 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.21] line 192 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.22] line 192 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.23] line 194 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.24] line 195 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.25] line 195 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.26] line 197 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.27] line 198 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.28] line 198 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.29] line 200 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.30] line 201 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.31] line 201 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.32] line 203 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.33] line 204 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.34] line 204 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.35] line 206 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.36] line 207 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.37] line 207 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.38] line 209 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.39] line 210 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.40] line 210 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.41] line 212 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.42] line 213 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.43] line 213 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.44] line 215 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.45] line 216 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.46] line 216 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.47] line 218 Null pointer check: SUCCESS
[java::MyExpenses.mergeUpdate:(LMyExpenses$TransactionChange;LMyExpenses$TransactionChange;)LMyExpenses$TransactionChange;.null-pointer-exception.48] line 218 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.array-index-out-of-bounds-high.1] line 225 Array index should be < length: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.array-index-out-of-bounds-low.1] line 225 Array index should be >= 0: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.1] line 225 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.2] line 227 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.3] line 232 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.4] line 232 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.5] line 233 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.6] line 234 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.7] line 234 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.8] line 236 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.9] line 237 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.10] line 237 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.11] line 238 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.12] line 238 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.13] line 238 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.14] line 239 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.15] line 241 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.16] line 243 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.array-index-out-of-bounds-high.2] line 244 Array index should be < length: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.array-index-out-of-bounds-low.2] line 244 Array index should be >= 0: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.17] line 244 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.18] line 244 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.19] line 249 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.20] line 249 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.21] line 250 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.22] line 251 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.23] line 251 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.24] line 253 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.25] line 254 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.26] line 254 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.27] line 255 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.28] line 255 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.29] line 255 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.30] line 256 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.31] line 258 Null pointer check: SUCCESS
[java::MyExpenses.processChar:([CILjava/lang/StringBuffer;)LMyExpenses$Chunk;.null-pointer-exception.32] line 260 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.runAll:()V
[java::MyExpenses.runAll:()V.null-pointer-exception.1] line 32 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.2] line 32 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.3] line 33 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.4] line 33 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.5] line 34 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.6] line 34 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.7] line 34 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.array-create-negative-size.1] line 36 Array size should be >= 0: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.8] line 36 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.9] line 36 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.10] line 39 Null pointer check: SUCCESS
[java::MyExpenses.runAll:()V.null-pointer-exception.11] line 41 Null pointer check: SUCCESS

MyExpenses.java function java::MyExpenses.updateOrClearHeader:(I)V
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.1] line 276 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.2] line 276 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.3] line 276 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.4] line 277 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.5] line 281 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.6] line 281 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.7] line 283 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.8] line 283 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.9] line 284 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.10] line 284 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.11] line 285 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.12] line 285 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.13] line 293 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.14] line 293 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.15] line 295 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.16] line 295 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.17] line 296 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.18] line 296 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.19] line 296 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.20] line 296 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.21] line 300 Null pointer check: SUCCESS
[java::MyExpenses.updateOrClearHeader:(I)V.null-pointer-exception.22] line 304 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$1.<init>:(LOpenCMSCore;)V
[java::OpenCMSCore$1.<init>:(LOpenCMSCore;)V.null-pointer-exception.1] line 24 Null pointer check: SUCCESS
[java::OpenCMSCore$1.<init>:(LOpenCMSCore;)V.null-pointer-exception.2] line 24 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$A_CmsSitemapMenuEntry.<init>:(LOpenCMSCore;)V
[java::OpenCMSCore$A_CmsSitemapMenuEntry.<init>:(LOpenCMSCore;)V.null-pointer-exception.1] line 350 Null pointer check: SUCCESS
[java::OpenCMSCore$A_CmsSitemapMenuEntry.<init>:(LOpenCMSCore;)V.null-pointer-exception.2] line 350 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsAddToNavMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsAddToNavMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 462 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsAddToNavMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 463 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsAdvancedSubmenu.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;Ljava/util/List;)V
[java::OpenCMSCore$CmsAdvancedSubmenu.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;Ljava/util/List;)V.null-pointer-exception.1] line 438 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsAdvancedSubmenu.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;Ljava/util/List;)V.null-pointer-exception.2] line 439 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsAvailabilityMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsAvailabilityMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 433 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsAvailabilityMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 433 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsBumpDetailPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsBumpDetailPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 468 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsBumpDetailPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 469 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsCopyAsModelGroupPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsCopyAsModelGroupPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 492 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsCopyAsModelGroupPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 493 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsCopyModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsCopyModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 480 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsCopyModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 481 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsCopyPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsCopyPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 474 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsCopyPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 475 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsCreateGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsCreateGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 498 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsCreateGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 499 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsDeleteMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsDeleteMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 396 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsDeleteMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 397 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsDeleteModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsDeleteModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 390 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsDeleteModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 391 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsDisableMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsDisableMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 444 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsDisableMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 445 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsEditMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsEditMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 450 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsEditMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 451 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsEditModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsEditModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 384 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsEditModelPageMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 385 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsEditRedirectMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsEditRedirectMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 378 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsEditRedirectMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 379 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsFileBuffer.<init>:(LOpenCMSCore;)V
[java::OpenCMSCore$CmsFileBuffer.<init>:(LOpenCMSCore;)V.null-pointer-exception.1] line 545 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsFileBuffer.<init>:(LOpenCMSCore;)V.null-pointer-exception.2] line 545 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsGotoExplorerMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsGotoExplorerMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 366 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsGotoExplorerMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 367 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsGotoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsGotoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 360 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsGotoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 361 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsGotoSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsGotoSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 516 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsGotoSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 517 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsHideMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsHideMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 528 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsHideMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 529 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 428 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 428 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsMergeMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsMergeMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 413 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsMergeMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 413 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsModelPageLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsModelPageLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 402 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsModelPageLockReportMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 403 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsNewChoiceMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsNewChoiceMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 522 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsNewChoiceMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 523 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsObject.<init>:()V
[java::OpenCMSCore$CmsObject.<init>:()V.null-pointer-exception.1] line 332 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsOpenGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsOpenGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 372 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsOpenGalleryMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 373 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsParentSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsParentSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 510 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsParentSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 511 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsRefreshMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsRefreshMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 456 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsRefreshMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 457 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsRemoveMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsRemoveMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 408 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsRemoveMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 408 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsResourceInfoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsResourceInfoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 504 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsResourceInfoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 505 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsSeoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsSeoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 423 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsSeoMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 423 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsSetDefaultModelMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsSetDefaultModelMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 486 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsSetDefaultModelMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 487 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsShowMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsShowMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 534 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsShowMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 535 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsSitemapHoverbar.<init>:(LOpenCMSCore;)V
[java::OpenCMSCore$CmsSitemapHoverbar.<init>:(LOpenCMSCore;)V.null-pointer-exception.1] line 347 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsSitemapHoverbar.<init>:(LOpenCMSCore;)V.null-pointer-exception.2] line 347 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V
[java::OpenCMSCore$CmsSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.1] line 418 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsSubSitemapMenuEntry.<init>:(LOpenCMSCore;LOpenCMSCore$CmsSitemapHoverbar;)V.null-pointer-exception.2] line 418 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore$CmsWorkplace.<init>:(LOpenCMSCore;)V
[java::OpenCMSCore$CmsWorkplace.<init>:(LOpenCMSCore;)V.null-pointer-exception.1] line 572 Null pointer check: SUCCESS
[java::OpenCMSCore$CmsWorkplace.<init>:(LOpenCMSCore;)V.null-pointer-exception.2] line 572 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.<init>:()V
[java::OpenCMSCore.<init>:()V.null-pointer-exception.1] line 6 Null pointer check: SUCCESS
[java::OpenCMSCore.<init>:()V.null-pointer-exception.2] line 8 Null pointer check: SUCCESS
[java::OpenCMSCore.<init>:()V.null-pointer-exception.3] line 8 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.1] line 250 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.2] line 253 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.3] line 255 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.4] line 257 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.5] line 259 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.6] line 259 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.7] line 259 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.8] line 259 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.9] line 262 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.10] line 264 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.11] line 268 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.12] line 269 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.13] line 269 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.14] line 269 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.15] line 270 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.16] line 270 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.17] line 270 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.18] line 271 Null pointer check: SUCCESS
[java::OpenCMSCore.buttonHtml:(LOpenCMSCore$CmsWorkplace;)Ljava/lang/String;.null-pointer-exception.19] line 272 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.1] line 51 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.2] line 51 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.3] line 52 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.4] line 52 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.5] line 53 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.6] line 53 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.7] line 54 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.8] line 54 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.9] line 55 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.10] line 55 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.11] line 56 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.12] line 56 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.13] line 57 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.14] line 57 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.15] line 58 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.16] line 58 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.17] line 59 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.18] line 59 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.19] line 60 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.20] line 60 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.21] line 61 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.22] line 61 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.23] line 62 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.24] line 62 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.25] line 63 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.26] line 63 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.27] line 64 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.28] line 64 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.29] line 65 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.30] line 65 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.31] line 66 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.32] line 66 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.33] line 67 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.34] line 67 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.35] line 68 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.36] line 68 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.37] line 69 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.38] line 69 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.39] line 70 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.40] line 70 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.41] line 71 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.42] line 71 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.43] line 72 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.44] line 72 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-create-negative-size.1] line 73 Array size should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.1] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.2] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.3] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.4] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.5] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-high.6] line 73 Array index should be < length: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.1] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.2] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.3] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.4] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.5] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.array-index-out-of-bounds-low.6] line 73 Array index should be >= 0: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.45] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.46] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.47] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.48] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.49] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.50] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.51] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.52] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.53] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.54] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.55] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.56] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.58] line 73 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.57] line 76 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.59] line 83 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.60] line 83 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.61] line 84 Null pointer check: SUCCESS
[java::OpenCMSCore.createContextMenu:(LOpenCMSCore$CmsSitemapHoverbar;)Ljava/util/List;.null-pointer-exception.62] line 84 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.execute:(Ljava/io/Reader;)V
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.1] line 140 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.2] line 141 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.3] line 142 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.4] line 144 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.5] line 144 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.6] line 146 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.7] line 158 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.8] line 158 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.9] line 159 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.10] line 159 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.11] line 162 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.12] line 163 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.13] line 164 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.14] line 165 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.15] line 167 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.16] line 168 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.17] line 169 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.18] line 170 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.19] line 170 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.20] line 170 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.21] line 170 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.22] line 172 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.23] line 172 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.24] line 175 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.25] line 177 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.26] line 179 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.27] line 180 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.28] line 180 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.bad-dynamic-cast.1] line 186 Dynamic cast check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.29] line 186 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.30] line 187 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.31] line 187 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.32] line 190 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.33] line 193 Null pointer check: SUCCESS
[java::OpenCMSCore.execute:(Ljava/io/Reader;)V.null-pointer-exception.34] line 193 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.generateContent:(LOpenCMSCore$CmsObject;Ljava/lang/String;ID)I
[java::OpenCMSCore.generateContent:(LOpenCMSCore$CmsObject;Ljava/lang/String;ID)I.null-pointer-exception.1] line 240 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.runAll:()V
[java::OpenCMSCore.runAll:()V.null-pointer-exception.1] line 17 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.2] line 17 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.3] line 19 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.4] line 22 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.5] line 24 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.6] line 24 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.7] line 37 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.8] line 40 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.9] line 42 Null pointer check: SUCCESS
[java::OpenCMSCore.runAll:()V.null-pointer-exception.10] line 42 Null pointer check: SUCCESS

OpenCMSCore.java function java::OpenCMSCore.seekFile:(JI)J
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.1] line 95 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.2] line 101 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.3] line 101 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.4] line 101 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.5] line 101 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.6] line 107 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.7] line 107 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.8] line 108 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.9] line 108 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.10] line 115 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.11] line 115 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.12] line 118 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.13] line 118 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.14] line 120 Null pointer check: SUCCESS
[java::OpenCMSCore.seekFile:(JI)J.null-pointer-exception.15] line 120 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$Context.<init>:(LPhoenix;)V
[java::Phoenix$Context.<init>:(LPhoenix;)V.null-pointer-exception.1] line 476 Null pointer check: SUCCESS
[java::Phoenix$Context.<init>:(LPhoenix;)V.null-pointer-exception.2] line 476 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/lang/Throwable;)V
[java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/lang/Throwable;)V.null-pointer-exception.1] line 507 Null pointer check: SUCCESS
[java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/lang/Throwable;)V.null-pointer-exception.2] line 507 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/sql/SQLException;)V
[java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/sql/SQLException;)V.null-pointer-exception.1] line 503 Null pointer check: SUCCESS
[java::Phoenix$EventDeliveryException.<init>:(LPhoenix;Ljava/lang/String;Ljava/sql/SQLException;)V.null-pointer-exception.2] line 503 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$ImmutableBytesPtr.<init>:(LPhoenix;[B)V
[java::Phoenix$ImmutableBytesPtr.<init>:(LPhoenix;[B)V.null-pointer-exception.1] line 357 Null pointer check: SUCCESS
[java::Phoenix$ImmutableBytesPtr.<init>:(LPhoenix;[B)V.null-pointer-exception.2] line 357 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$MetaDataMutationResult.<init>:(LPhoenix;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
[java::Phoenix$MetaDataMutationResult.<init>:(LPhoenix;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V.null-pointer-exception.1] line 345 Null pointer check: SUCCESS
[java::Phoenix$MetaDataMutationResult.<init>:(LPhoenix;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V.null-pointer-exception.2] line 345 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix$Tuple.<init>:(LPhoenix;)V
[java::Phoenix$Tuple.<init>:(LPhoenix;)V.null-pointer-exception.1] line 373 Null pointer check: SUCCESS
[java::Phoenix$Tuple.<init>:(LPhoenix;)V.null-pointer-exception.2] line 373 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.<init>:()V
[java::Phoenix.<init>:()V.null-pointer-exception.1] line 20 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.configure:(LPhoenix$Context;)V
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.1] line 160 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.2] line 160 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.3] line 161 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.4] line 161 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.5] line 162 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.6] line 163 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.7] line 164 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.8] line 164 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.9] line 165 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.10] line 166 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.11] line 167 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.12] line 169 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.13] line 171 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.14] line 174 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.15] line 176 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.bad-dynamic-cast.1] line 178 Dynamic cast check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.16] line 178 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.17] line 178 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.18] line 178 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.19] line 178 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.20] line 179 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.21] line 179 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.bad-dynamic-cast.2] line 183 Dynamic cast check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.22] line 183 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.23] line 183 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.24] line 183 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.25] line 183 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.26] line 184 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.27] line 184 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.28] line 190 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.29] line 190 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.30] line 191 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.31] line 193 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.32] line 193 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.33] line 198 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.34] line 198 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.35] line 198 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.36] line 199 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.37] line 199 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.38] line 199 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.39] line 199 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.40] line 200 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.41] line 200 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.42] line 201 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.43] line 201 Null pointer check: SUCCESS
[java::Phoenix.configure:(LPhoenix$Context;)V.null-pointer-exception.44] line 203 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.1] line 67 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.2] line 67 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.3] line 67 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.4] line 70 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.5] line 71 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.6] line 72 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.7] line 72 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.8] line 76 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.22] line 76 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.23] line 76 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.24] line 76 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.9] line 77 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.10] line 78 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.11] line 80 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.bad-dynamic-cast.1] line 83 Dynamic cast check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.13] line 83 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.14] line 84 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.15] line 84 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.16] line 84 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.17] line 84 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.18] line 89 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.19] line 90 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.20] line 91 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.12] line 92 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.21] line 92 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.25] line 94 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.26] line 97 Null pointer check: SUCCESS
[java::Phoenix.doDropSchema:(JLjava/lang/String;[BLjava/util/List;Ljava/util/List;)LPhoenix$MetaDataMutationResult;.null-pointer-exception.27] line 99 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.1] line 114 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.2] line 115 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.3] line 118 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.4] line 121 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.5] line 121 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.6] line 121 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.7] line 121 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.8] line 124 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.9] line 125 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.10] line 128 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.11] line 131 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.12] line 131 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.13] line 131 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.14] line 131 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.integer-divide-by-zero.1] line 134 Denominator should be nonzero: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.array-create-negative-size.1] line 137 Array size should be >= 0: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.15] line 137 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.16] line 138 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.17] line 138 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.18] line 138 Null pointer check: SUCCESS
[java::Phoenix.evaluate:(LPhoenix$Tuple;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Z.null-pointer-exception.19] line 139 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.1] line 295 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.2] line 297 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.3] line 300 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.4] line 302 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.5] line 302 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.6] line 305 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.7] line 305 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.8] line 306 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.9] line 309 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.10] line 309 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.11] line 310 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.12] line 310 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.13] line 310 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.14] line 314 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.15] line 314 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.16] line 316 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.17] line 316 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.18] line 316 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.19] line 319 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.20] line 319 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.21] line 320 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.22] line 320 Null pointer check: SUCCESS
[java::Phoenix.parseOptions:([Ljava/lang/String;)Lorg/apache/hbase/thirdparty/org/apache/commons/cli/CommandLine;.null-pointer-exception.23] line 320 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.process:()LPhoenix$Status;
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.1] line 213 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.2] line 215 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.3] line 218 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.4] line 219 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.5] line 221 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.6] line 221 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.7] line 222 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.8] line 226 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.9] line 226 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.10] line 228 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.11] line 228 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.12] line 232 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.13] line 235 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.14] line 236 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.15] line 236 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.16] line 237 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.17] line 237 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.18] line 240 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.19] line 240 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.20] line 244 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.21] line 244 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.22] line 245 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.23] line 245 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.24] line 245 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.25] line 248 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.26] line 248 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.27] line 249 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.28] line 249 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.29] line 252 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.37] line 254 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.38] line 256 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.39] line 256 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.47] line 259 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.48] line 259 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.49] line 260 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.50] line 261 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.51] line 261 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.52] line 262 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.53] line 262 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.54] line 265 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.55] line 266 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.56] line 266 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.57] line 267 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.58] line 267 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-create-negative-size.1] line 270 Array size should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-create-negative-size.2] line 270 Array size should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-create-negative-size.3] line 270 Array size should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.35] line 270 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.45] line 270 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.64] line 270 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.1] line 271 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.3] line 271 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.5] line 271 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.1] line 271 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.3] line 271 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.5] line 271 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.30] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.31] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.32] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.40] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.41] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.42] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.59] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.60] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.61] line 271 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.2] line 272 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.4] line 272 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-high.6] line 272 Array index should be < length: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.2] line 272 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.4] line 272 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.array-index-out-of-bounds-low.6] line 272 Array index should be >= 0: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.33] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.34] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.43] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.44] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.62] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.63] line 272 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.36] line 274 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.46] line 274 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.65] line 274 Null pointer check: SUCCESS
[java::Phoenix.process:()LPhoenix$Status;.null-pointer-exception.66] line 276 Null pointer check: SUCCESS

Phoenix.java function java::Phoenix.runAll:()V
[java::Phoenix.runAll:()V.array-create-negative-size.1] line 47 Array size should be >= 0: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.1] line 47 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.2] line 47 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.3] line 47 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.4] line 50 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.5] line 52 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.6] line 52 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.7] line 52 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.8] line 53 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.9] line 53 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.10] line 55 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.11] line 58 Null pointer check: SUCCESS
[java::Phoenix.runAll:()V.array-create-negative-size.2] line 60 Array size should be >= 0: SUCCESS
[java::Phoenix.runAll:()V.null-pointer-exception.12] line 60 Null pointer check: SUCCESS

Pom.java function java::Pom$1.<init>:()V
[java::Pom$1.<init>:()V.null-pointer-exception.1] line 152 Null pointer check: SUCCESS

Pom.java function java::Pom$2.<init>:(Ljava/util/Iterator;LPom$CountingPredicate;)V
[java::Pom$2.<init>:(Ljava/util/Iterator;LPom$CountingPredicate;)V.null-pointer-exception.1] line 214 Null pointer check: SUCCESS
[java::Pom$2.<init>:(Ljava/util/Iterator;LPom$CountingPredicate;)V.null-pointer-exception.2] line 214 Null pointer check: SUCCESS
[java::Pom$2.<init>:(Ljava/util/Iterator;LPom$CountingPredicate;)V.null-pointer-exception.3] line 214 Null pointer check: SUCCESS
[java::Pom$2.<init>:(Ljava/util/Iterator;LPom$CountingPredicate;)V.null-pointer-exception.4] line 217 Null pointer check: SUCCESS

Pom.java function java::Pom$2.fetch:()V
[java::Pom$2.fetch:()V.null-pointer-exception.1] line 231 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.2] line 231 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.3] line 232 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.4] line 232 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.5] line 233 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.6] line 233 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.7] line 233 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.8] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.9] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.10] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.11] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.12] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.13] line 234 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.14] line 235 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.15] line 236 Null pointer check: SUCCESS
[java::Pom$2.fetch:()V.null-pointer-exception.16] line 239 Null pointer check: SUCCESS

Pom.java function java::Pom$2.hasNext:()Z
[java::Pom$2.hasNext:()Z.null-pointer-exception.1] line 219 Null pointer check: SUCCESS
[java::Pom$2.hasNext:()Z.null-pointer-exception.2] line 220 Null pointer check: SUCCESS

Pom.java function java::Pom$2.next:()Ljava/lang/Object;
[java::Pom$2.next:()Ljava/lang/Object;.null-pointer-exception.1] line 224 Null pointer check: SUCCESS
[java::Pom$2.next:()Ljava/lang/Object;.null-pointer-exception.2] line 225 Null pointer check: SUCCESS
[java::Pom$2.next:()Ljava/lang/Object;.null-pointer-exception.3] line 226 Null pointer check: SUCCESS

Pom.java function java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.1] line 75 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.2] line 75 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.3] line 76 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.4] line 78 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.5] line 80 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.6] line 82 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.7] line 84 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.8] line 86 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.9] line 90 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.10] line 92 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.11] line 94 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.12] line 96 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.13] line 98 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.14] line 101 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.15] line 103 Null pointer check: SUCCESS
[java::Pom$HealthReport.<init>:(LPom;ILjava/lang/String;LPom$Localizable;)V.null-pointer-exception.16] line 104 Null pointer check: SUCCESS

Pom.java function java::Pom$HealthReport.setLocalizibleDescription:(LPom$Localizable;)V
[java::Pom$HealthReport.setLocalizibleDescription:(LPom$Localizable;)V.null-pointer-exception.1] line 52 Null pointer check: SUCCESS

Pom.java function java::Pom$Localizable.<init>:(LPom;)V
[java::Pom$Localizable.<init>:(LPom;)V.null-pointer-exception.1] line 346 Null pointer check: SUCCESS
[java::Pom$Localizable.<init>:(LPom;)V.null-pointer-exception.2] line 346 Null pointer check: SUCCESS

Pom.java function java::Pom$POSIXHandler.<init>:()V
[java::Pom$POSIXHandler.<init>:()V.null-pointer-exception.1] line 470 Null pointer check: SUCCESS

Pom.java function java::Pom$ReloadThread.<init>:()V
[java::Pom$ReloadThread.<init>:()V.null-pointer-exception.1] line 335 Null pointer check: SUCCESS

Pom.java function java::Pom$RunMap.<init>:(LPom;)V
[java::Pom$RunMap.<init>:(LPom;)V.null-pointer-exception.1] line 352 Null pointer check: SUCCESS
[java::Pom$RunMap.<init>:(LPom;)V.null-pointer-exception.2] line 352 Null pointer check: SUCCESS

Pom.java function java::Pom$ViewJob.<init>:(LPom;)V
[java::Pom$ViewJob.<init>:(LPom;)V.null-pointer-exception.1] line 109 Null pointer check: SUCCESS
[java::Pom$ViewJob.<init>:(LPom;)V.null-pointer-exception.2] line 109 Null pointer check: SUCCESS

Pom.java function java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.1] line 112 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.2] line 112 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.3] line 112 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.4] line 112 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.5] line 115 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.6] line 115 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.7] line 116 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.8] line 116 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.9] line 116 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.10] line 116 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.11] line 117 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.12] line 117 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.13] line 118 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.14] line 118 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.15] line 119 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.16] line 119 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.17] line 121 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.18] line 123 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.19] line 123 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.20] line 123 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.21] line 123 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.22] line 124 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.23] line 124 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.24] line 128 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.25] line 128 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.26] line 132 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.27] line 133 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.28] line 135 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.29] line 136 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.30] line 138 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.31] line 139 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.32] line 140 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.33] line 143 Null pointer check: SUCCESS
[java::Pom$ViewJob._getRuns:()Ljava/util/SortedMap;.null-pointer-exception.34] line 143 Null pointer check: SUCCESS

Pom.java function java::Pom.<init>:()V
[java::Pom.<init>:()V.null-pointer-exception.1] line 12 Null pointer check: SUCCESS
[java::Pom.<init>:()V.null-pointer-exception.2] line 27 Null pointer check: SUCCESS
[java::Pom.<init>:()V.null-pointer-exception.3] line 27 Null pointer check: SUCCESS
[java::Pom.<init>:()V.null-pointer-exception.4] line 28 Null pointer check: SUCCESS
[java::Pom.<init>:()V.null-pointer-exception.5] line 29 Null pointer check: SUCCESS

Pom.java function java::Pom.get:()Lorg/jruby/ext/posix/POSIX;
[java::Pom.get:()Lorg/jruby/ext/posix/POSIX;.null-pointer-exception.1] line 152 Null pointer check: SUCCESS

Pom.java function java::Pom.limit:(Ljava/util/Iterator;LPom$CountingPredicate;)Ljava/util/Iterator;
[java::Pom.limit:(Ljava/util/Iterator;LPom$CountingPredicate;)Ljava/util/Iterator;.null-pointer-exception.1] line 214 Null pointer check: SUCCESS

Pom.java function java::Pom.runAll:()V
[java::Pom.runAll:()V.null-pointer-exception.1] line 37 Null pointer check: SUCCESS
[java::Pom.runAll:()V.null-pointer-exception.2] line 37 Null pointer check: SUCCESS
[java::Pom.runAll:()V.null-pointer-exception.3] line 38 Null pointer check: SUCCESS
[java::Pom.runAll:()V.null-pointer-exception.4] line 38 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$1.<init>:(LSpringBatch;LSpringBatch$RetryTemplate;)V
[java::SpringBatch$1.<init>:(LSpringBatch;LSpringBatch$RetryTemplate;)V.null-pointer-exception.1] line 65 Null pointer check: SUCCESS
[java::SpringBatch$1.<init>:(LSpringBatch;LSpringBatch$RetryTemplate;)V.null-pointer-exception.2] line 65 Null pointer check: SUCCESS
[java::SpringBatch$1.<init>:(LSpringBatch;LSpringBatch$RetryTemplate;)V.null-pointer-exception.3] line 65 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$2.<init>:(LSpringBatch;)V
[java::SpringBatch$2.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 185 Null pointer check: SUCCESS
[java::SpringBatch$2.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 185 Null pointer check: SUCCESS
[java::SpringBatch$2.<init>:(LSpringBatch;)V.null-pointer-exception.3] line 188 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$3.<init>:(LSpringBatch;)V
[java::SpringBatch$3.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 221 Null pointer check: SUCCESS
[java::SpringBatch$3.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 221 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$4.<init>:(LSpringBatch;)V
[java::SpringBatch$4.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 235 Null pointer check: SUCCESS
[java::SpringBatch$4.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 235 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$ExtendedConnectionDataSourceProxy.<init>:(LSpringBatch;Ljavax/sql/DataSource;)V
[java::SpringBatch$ExtendedConnectionDataSourceProxy.<init>:(LSpringBatch;Ljavax/sql/DataSource;)V.null-pointer-exception.1] line 380 Null pointer check: SUCCESS
[java::SpringBatch$ExtendedConnectionDataSourceProxy.<init>:(LSpringBatch;Ljavax/sql/DataSource;)V.null-pointer-exception.2] line 380 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$MessageListener.<init>:(LSpringBatch;)V
[java::SpringBatch$MessageListener.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 369 Null pointer check: SUCCESS
[java::SpringBatch$MessageListener.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 369 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$NeverRetryPolicy.<init>:(LSpringBatch;)V
[java::SpringBatch$NeverRetryPolicy.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 306 Null pointer check: SUCCESS
[java::SpringBatch$NeverRetryPolicy.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 306 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$Properties.<init>:(LSpringBatch;)V
[java::SpringBatch$Properties.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 293 Null pointer check: SUCCESS
[java::SpringBatch$Properties.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 293 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch$RetryTemplate.<init>:(LSpringBatch;)V
[java::SpringBatch$RetryTemplate.<init>:(LSpringBatch;)V.null-pointer-exception.1] line 296 Null pointer check: SUCCESS
[java::SpringBatch$RetryTemplate.<init>:(LSpringBatch;)V.null-pointer-exception.2] line 296 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.<init>:()V
[java::SpringBatch.<init>:()V.null-pointer-exception.1] line 17 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.initWriterForSimpleCallbackTests:()V
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.1] line 220 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.2] line 220 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.3] line 221 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.4] line 221 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.5] line 221 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.6] line 235 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.7] line 235 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.8] line 235 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.9] line 250 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.10] line 250 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.11] line 251 Null pointer check: SUCCESS
[java::SpringBatch.initWriterForSimpleCallbackTests:()V.null-pointer-exception.12] line 251 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.runAll:()V
[java::SpringBatch.runAll:()V.null-pointer-exception.1] line 28 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.2] line 31 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.3] line 34 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.4] line 37 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.5] line 40 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.6] line 43 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.7] line 46 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.8] line 49 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.9] line 52 Null pointer check: SUCCESS
[java::SpringBatch.runAll:()V.null-pointer-exception.10] line 55 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.testArtifactUniqueness:()V
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.1] line 111 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.2] line 111 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.3] line 112 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.4] line 114 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.5] line 114 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.6] line 115 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.7] line 117 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.8] line 117 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.9] line 118 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.10] line 120 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.11] line 120 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.12] line 121 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.13] line 123 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.14] line 123 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.15] line 124 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.16] line 126 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.17] line 126 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.18] line 127 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.19] line 129 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.20] line 129 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.21] line 130 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.22] line 132 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.23] line 132 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.24] line 133 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.25] line 135 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.26] line 135 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.27] line 136 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.28] line 138 Null pointer check: SUCCESS
[java::SpringBatch.testArtifactUniqueness:()V.null-pointer-exception.29] line 138 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.1] line 185 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.2] line 185 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.3] line 185 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.4] line 209 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.5] line 209 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.6] line 209 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.7] line 210 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.8] line 210 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.9] line 210 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.10] line 212 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.11] line 212 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.12] line 212 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.13] line 213 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.14] line 213 Null pointer check: SUCCESS
[java::SpringBatch.testCustomRecordSeparatorMultilineBlankLineAfterEnd:()V.null-pointer-exception.15] line 213 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.testFailureAndRecovery:()V
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.1] line 63 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.2] line 64 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.3] line 64 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.4] line 65 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.5] line 65 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.6] line 65 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.7] line 100 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.8] line 100 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.9] line 101 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.10] line 101 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.11] line 102 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.12] line 102 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.13] line 103 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.14] line 103 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.15] line 103 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.16] line 104 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.17] line 104 Null pointer check: SUCCESS
[java::SpringBatch.testFailureAndRecovery:()V.null-pointer-exception.18] line 104 Null pointer check: SUCCESS

SpringBatch.java function java::SpringBatch.testOperationWithDirectCloseCall:()V
[java::SpringBatch.testOperationWithDirectCloseCall:()V.bad-dynamic-cast.1] line 145 Dynamic cast check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.1] line 145 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.bad-dynamic-cast.2] line 146 Dynamic cast check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.2] line 146 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.3] line 148 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.4] line 148 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.5] line 148 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.6] line 149 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.7] line 150 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.8] line 150 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.9] line 150 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.10] line 151 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.11] line 154 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.12] line 156 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.13] line 157 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.14] line 158 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.15] line 159 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.16] line 160 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.17] line 161 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.18] line 162 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.19] line 163 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.20] line 164 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.21] line 165 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.22] line 166 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.23] line 166 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.24] line 169 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.25] line 170 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.26] line 170 Null pointer check: SUCCESS
[java::SpringBatch.testOperationWithDirectCloseCall:()V.null-pointer-exception.27] line 171 Null pointer check: SUCCESS

weka/estimators/CheckEstimator.java function java::weka.estimators.CheckEstimator.<init>:()V
[java::weka.estimators.CheckEstimator.<init>:()V.null-pointer-exception.1] line 137 Null pointer check: SUCCESS

weka/estimators/CheckEstimator.java function java::weka.estimators.CheckEstimator.printAttributeSummary:(II)V
[java::weka.estimators.CheckEstimator.printAttributeSummary:(II)V.null-pointer-exception.1] line 260 Null pointer check: SUCCESS

weka/estimators/CheckEstimator.java function java::weka.estimators.CheckEstimator.runAll:()V
[java::weka.estimators.CheckEstimator.runAll:()V.null-pointer-exception.1] line 141 Null pointer check: SUCCESS

weka/estimators/EstimatorUtils.java function java::weka.estimators.EstimatorUtils$Instances.<init>:()V
[java::weka.estimators.EstimatorUtils$Instances.<init>:()V.null-pointer-exception.1] line 98 Null pointer check: SUCCESS

weka/estimators/EstimatorUtils.java function java::weka.estimators.EstimatorUtils.<init>:()V
[java::weka.estimators.EstimatorUtils.<init>:()V.null-pointer-exception.1] line 33 Null pointer check: SUCCESS

weka/estimators/EstimatorUtils.java function java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.1] line 62 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.2] line 63 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.3] line 63 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.4] line 66 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.5] line 67 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.bad-dynamic-cast.1] line 69 Dynamic cast check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.6] line 69 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.7] line 70 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.8] line 70 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.9] line 73 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.10] line 75 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.11] line 76 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.12] line 78 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.bad-dynamic-cast.2] line 79 Dynamic cast check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.13] line 79 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.14] line 80 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.15] line 82 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.16] line 83 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.17] line 85 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.18] line 86 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.array-index-out-of-bounds-high.1] line 92 Array index should be < length: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.array-index-out-of-bounds-low.1] line 92 Array index should be >= 0: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.19] line 92 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.array-index-out-of-bounds-high.2] line 93 Array index should be < length: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.array-index-out-of-bounds-low.2] line 93 Array index should be >= 0: SUCCESS
[java::weka.estimators.EstimatorUtils.getMinMax:(Lweka/estimators/EstimatorUtils$Instances;I[D)I.null-pointer-exception.20] line 93 Null pointer check: SUCCESS

weka/estimators/EstimatorUtils.java function java::weka.estimators.EstimatorUtils.runAll:()V
[java::weka.estimators.EstimatorUtils.runAll:()V.array-create-negative-size.1] line 38 Array size should be >= 0: SUCCESS
[java::weka.estimators.EstimatorUtils.runAll:()V.null-pointer-exception.1] line 38 Null pointer check: SUCCESS
[java::weka.estimators.EstimatorUtils.runAll:()V.null-pointer-exception.2] line 41 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V.null-pointer-exception.1] line 64 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V.null-pointer-exception.2] line 64 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.1] line 67 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.2] line 67 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.3] line 68 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.4] line 68 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.5] line 68 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.6] line 68 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.7] line 72 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.8] line 72 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.9] line 72 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.10] line 73 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.bad-dynamic-cast.1] line 74 Dynamic cast check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.11] line 74 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.12] line 74 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.13] line 74 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.14] line 74 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.15] line 74 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.16] line 75 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.17] line 75 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.18] line 77 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.19] line 77 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.20] line 78 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.21] line 78 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.22] line 78 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.23] line 80 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.24] line 80 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.25] line 81 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.26] line 81 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$1.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.27] line 81 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V.null-pointer-exception.1] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.<init>:(Lweka/gui/beans/ClassifierPerformanceEvaluatorCustomizer;)V.null-pointer-exception.2] line 86 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.1] line 90 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.2] line 90 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.3] line 91 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.4] line 91 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.5] line 92 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.6] line 92 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer$2.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.7] line 92 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.<init>:()V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.<init>:()V.null-pointer-exception.1] line 41 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.1] line 55 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.2] line 56 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.3] line 58 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.4] line 59 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.5] line 59 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.6] line 60 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.7] line 61 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.8] line 62 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.9] line 64 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.10] line 64 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.11] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons:()V.null-pointer-exception.12] line 86 Null pointer check: SUCCESS

weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java function java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.runAll:()V
[java::weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.runAll:()V.null-pointer-exception.1] line 50 Null pointer check: SUCCESS

weka/gui/beans/ModelPerformanceChart.java function java::weka.gui.beans.ModelPerformanceChart$1.<init>:(Lweka/gui/beans/ModelPerformanceChart;Ljavax/swing/JFrame;)V
[java::weka.gui.beans.ModelPerformanceChart$1.<init>:(Lweka/gui/beans/ModelPerformanceChart;Ljavax/swing/JFrame;)V.null-pointer-exception.1] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart$1.<init>:(Lweka/gui/beans/ModelPerformanceChart;Ljavax/swing/JFrame;)V.null-pointer-exception.2] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart$1.<init>:(Lweka/gui/beans/ModelPerformanceChart;Ljavax/swing/JFrame;)V.null-pointer-exception.3] line 86 Null pointer check: SUCCESS

weka/gui/beans/ModelPerformanceChart.java function java::weka.gui.beans.ModelPerformanceChart.<init>:()V
[java::weka.gui.beans.ModelPerformanceChart.<init>:()V.null-pointer-exception.1] line 39 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.<init>:()V.null-pointer-exception.2] line 46 Null pointer check: SUCCESS

weka/gui/beans/ModelPerformanceChart.java function java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.1] line 75 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.2] line 78 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.3] line 79 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.4] line 81 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.5] line 83 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.6] line 84 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.7] line 84 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.8] line 84 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.9] line 85 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.10] line 85 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.11] line 85 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.12] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.13] line 86 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.14] line 93 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.15] line 94 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.16] line 96 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.17] line 96 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.18] line 99 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.19] line 100 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.20] line 102 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.21] line 103 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.22] line 103 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.23] line 104 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.24] line 104 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.25] line 105 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.26] line 105 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.27] line 106 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.28] line 107 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.29] line 108 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.30] line 110 Null pointer check: SUCCESS
[java::weka.gui.beans.ModelPerformanceChart.performRequest:(Ljava/lang/String;)V.null-pointer-exception.31] line 110 Null pointer check: SUCCESS

weka/gui/beans/ModelPerformanceChart.java function java::weka.gui.beans.ModelPerformanceChart.runAll:()V
[java::weka.gui.beans.ModelPerformanceChart.runAll:()V.null-pointer-exception.1] line 54 Null pointer check: SUCCESS

weka/gui/experiment/GeneratorPropertyIteratorPanel.java function java::weka.gui.experiment.GeneratorPropertyIteratorPanel$GenericArrayEditor.<init>:(Lweka/gui/experiment/GeneratorPropertyIteratorPanel;)V
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel$GenericArrayEditor.<init>:(Lweka/gui/experiment/GeneratorPropertyIteratorPanel;)V.null-pointer-exception.1] line 127 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel$GenericArrayEditor.<init>:(Lweka/gui/experiment/GeneratorPropertyIteratorPanel;)V.null-pointer-exception.2] line 127 Null pointer check: SUCCESS

weka/gui/experiment/GeneratorPropertyIteratorPanel.java function java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.1] line 40 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.2] line 47 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.3] line 47 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.4] line 50 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.5] line 50 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.6] line 53 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.7] line 53 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.8] line 61 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.<init>:()V.null-pointer-exception.9] line 61 Null pointer check: SUCCESS

weka/gui/experiment/GeneratorPropertyIteratorPanel.java function java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.1] line 79 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.2] line 79 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.3] line 80 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.4] line 81 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.5] line 81 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.6] line 83 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.7] line 83 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.bad-dynamic-cast.1] line 84 Dynamic cast check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.8] line 84 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.9] line 84 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.10] line 85 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.11] line 85 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.12] line 90 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.13] line 90 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.14] line 91 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.15] line 91 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.16] line 92 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.17] line 92 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.18] line 93 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.19] line 93 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.20] line 93 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.21] line 94 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.22] line 94 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.23] line 95 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.24] line 97 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.25] line 97 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.26] line 98 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.27] line 100 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.28] line 100 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.29] line 101 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.30] line 101 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.31] line 103 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.32] line 103 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.33] line 104 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.34] line 104 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.35] line 105 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.36] line 105 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.37] line 105 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed:(Ljava/awt/event/ActionEvent;)V.null-pointer-exception.38] line 107 Null pointer check: SUCCESS

weka/gui/experiment/GeneratorPropertyIteratorPanel.java function java::weka.gui.experiment.GeneratorPropertyIteratorPanel.runAll:()V
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.runAll:()V.null-pointer-exception.1] line 66 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.runAll:()V.null-pointer-exception.2] line 66 Null pointer check: SUCCESS
[java::weka.gui.experiment.GeneratorPropertyIteratorPanel.runAll:()V.null-pointer-exception.3] line 66 Null pointer check: SUCCESS

** 1 of 2096 failed (2 iterations)
VERIFICATION FAILED
