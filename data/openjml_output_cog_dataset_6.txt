warning: A specification path directory does not exist: /home/mkellogg/.gradle/caches/modules-2/files-2.1/org.apache.hbase/hbase/2.2.0/7ffe793908c696d87ba5b68e52eea1d628832b98/hbase-2.2.0.pom (/home/mkellogg/dataset-6-runner-5-minute-to/complexity-verification-project/dataset6/src/main/java)
warning: A specification path directory does not exist: /home/mkellogg/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/5.0.4/da08b8cce7bbf903602a25a3a163ae252435795/asm-5.0.4.jar
  /home/mkellogg/dataset-6-runner-5-minute-to/complexity-verification-project/dataset9/libs/org.eclipse.emf.emfstore.mongodb.server_1.2.0.v20140404-1123.jar (/home/mkellogg/dataset-6-runner-5-minute-to/complexity-verification-project/dataset6/src/main/java)
/home/mkellogg/openjml/specs/java/nio/file/Path.jml:25: warning: A non-pure method is being called where it is not permitted: java.nio.file.Path.isAbsolute()
    //@   requires path.isAbsolute() && path.canonicalPath.length != 0;
                                  ^
/home/mkellogg/openjml/specs/java/nio/file/Path.jml:28: warning: A non-pure method is being called where it is not permitted: java.nio.file.Path.isAbsolute()
    //@   requires !path.isAbsolute() && path.canonicalPath.length != 0;
                                   ^
/home/mkellogg/openjml/specs/java/util/Calendar.jml:185: warning: A non-pure method is being called where it is not permitted: java.text.DateFormat.getAvailableLocales()
       @                \result.equals(DateFormat.getAvailableLocales());
                                                                     ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:370: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TaskExecutionFragment.TASK_SPLIT
        public static final Object TASK_SPLIT = null;
                                   ^
./MyExpenses.java:352: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.TransactionList.KEY_FILTER
        public static final Object KEY_FILTER = null;
                                   ^
./MyExpenses.java:378: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.ASYNC_TAG
        public static final Dummy ASYNC_TAG = null;
                                  ^
./MyExpenses.java:379: warning: Use a static_initializer clause to specify the values of static final fields: MyExpenses.ProtectionDelegate.PROGRESS_TAG
        public static final Dummy PROGRESS_TAG = null;
                                  ^
./MyExpenses.java:15: verify: The prover cannot establish an assertion (NullField) in method MyExpenses
    private StickyListHeadersAdapter mDrawerListAdapter;
                                     ^
./MyExpenses.java:324: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:324:) in method getInstanceFromDb: getInstanceFromDb
        public static Account getInstanceFromDb(long mAccountId) {
                      ^
./MyExpenses.java:324: verify: Associated declaration: ./MyExpenses.java:324:
        public static Account getInstanceFromDb(long mAccountId) {
                              ^
./MyExpenses.java:325: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:69: verify: The prover cannot establish an assertion (NullFormal: ./MyExpenses.java:673:) in method contribFeatureCalled: o in startTaskExecution(java.lang.Object,java.lang.Object[],java.lang.Object,int)
                            null,
                            ^
./MyExpenses.java:673: verify: Associated declaration: ./MyExpenses.java:69:
    private void startTaskExecution(Object taskSplit, Object[] tag, Object o, int i) {
                                                                    ^
./MyExpenses.java:68: verify: The prover cannot establish an assertion (PossiblyBadCast) in method contribFeatureCalled: a java.io.Serializable cannot be proved to be a java.lang.Object[]
                            (Object[]) tag,
                            ^
./MyExpenses.java:56: verify: The prover cannot establish an assertion (PossiblyBadCast) in method contribFeatureCalled: a java.io.Serializable cannot be proved to be a java.lang.Long
                    int year = (int) ((Long) tag / 1000);
                                      ^
./MyExpenses.java:56: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method contribFeatureCalled
                    int year = (int) ((Long) tag / 1000);
                               ^
./MyExpenses.java:56: verify: The prover cannot establish an assertion (ArithmeticCastRange) in method contribFeatureCalled
                    int year = (int) ((Long) tag / 1000);
                               ^
./MyExpenses.java:54: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method contribFeatureCalled: (Caller: MyExpenses.contribFeatureCalled(MyExpenses.ContribFeature,java.io.Serializable), Callee: MyExpenses.Intent.putExtra(java.lang.String,long))
                i.putExtra(KEY_ACCOUNTID, mAccountId);
                           ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./MyExpenses.java:54:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./MyExpenses.java:599: verify: The prover cannot establish an assertion (NullField) in method Dummy
        public Dummy progress_dialog_printing;
                     ^
./MyExpenses.java:609: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:609:) in method add: add
        public Dummy add(Object newInstanceWithBundle, Dummy asyncTag) {
               ^
./MyExpenses.java:609: verify: Associated declaration: ./MyExpenses.java:609:
        public Dummy add(Object newInstanceWithBundle, Dummy asyncTag) {
                     ^
./MyExpenses.java:610: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:605: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:605:) in method beginTransaction: beginTransaction
        public Dummy beginTransaction() {
               ^
./MyExpenses.java:605: verify: Associated declaration: ./MyExpenses.java:605:
        public Dummy beginTransaction() {
                     ^
./MyExpenses.java:606: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:621: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:621:) in method build: build
        public TransactionChange build() {
               ^
./MyExpenses.java:621: verify: Associated declaration: ./MyExpenses.java:621:
        public TransactionChange build() {
                                 ^
./MyExpenses.java:622: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:601: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:601:) in method getChildAt: getChildAt
        public View getChildAt(int i) {
               ^
./MyExpenses.java:601: verify: Associated declaration: ./MyExpenses.java:601:
        public View getChildAt(int i) {
                    ^
./MyExpenses.java:602: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:617: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:617:) in method getId: getId
        public Dummy getId() {
               ^
./MyExpenses.java:617: verify: Associated declaration: ./MyExpenses.java:617:
        public Dummy getId() {
                     ^
./MyExpenses.java:618: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:577: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:577:) in method getBaseFont: getBaseFont
        public Dummy getBaseFont() {
               ^
./MyExpenses.java:577: verify: Associated declaration: ./MyExpenses.java:577:
        public Dummy getBaseFont() {
                     ^
./MyExpenses.java:578: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:168: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:168:) in method getAccount: getAccount
    private Dummy getAccount() {
            ^
./MyExpenses.java:168: verify: Associated declaration: ./MyExpenses.java:168:
    private Dummy getAccount() {
                  ^
./MyExpenses.java:169: verify: Associated method exit
        return null;
        ^
./MyExpenses.java:93: verify: The prover cannot establish an assertion (Assert) in method getContentProviderOperationsForCreate
    if (!change.isCreate()) throw new AssertionError();
                            ^
./MyExpenses.java:124: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method getContentProviderOperationsForCreate: long multiply overflow
        t.setDate(new Date(date * 1000));
                                ^
./MyExpenses.java:677: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:677:) in method getCurrentFragment: getCurrentFragment
    private TransactionList getCurrentFragment() {
            ^
./MyExpenses.java:677: verify: Associated declaration: ./MyExpenses.java:677:
    private TransactionList getCurrentFragment() {
                            ^
./MyExpenses.java:678: verify: Associated method exit
        return null;
        ^
./MyExpenses.java:269: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:269:) in method getFont: getFont
    private Font getFont(int f) {
            ^
./MyExpenses.java:269: verify: Associated declaration: ./MyExpenses.java:269:
    private Font getFont(int f) {
                 ^
./MyExpenses.java:270: verify: Associated method exit
        return null;
        ^
./MyExpenses.java:669: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:669:) in method getSupportFragmentManager: getSupportFragmentManager
    private Dummy getSupportFragmentManager() {
            ^
./MyExpenses.java:669: verify: Associated declaration: ./MyExpenses.java:669:
    private Dummy getSupportFragmentManager() {
                  ^
./MyExpenses.java:670: verify: Associated method exit
        return null;
        ^
./MyExpenses.java:15: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private StickyListHeadersAdapter mDrawerListAdapter;
                                     ^
./MyExpenses.java:17: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private Dummy mList;
                  ^
./MyExpenses.java:18: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private Dummy payeeToId;
                  ^
./MyExpenses.java:19: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private Font currentFont;
                 ^
./MyExpenses.java:21: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private Dummy mAdapter;
                  ^
./MyExpenses.java:22: verify: The prover cannot establish an assertion (NullField) in method mergeUpdate
    private Dummy[] files;
                    ^
./MyExpenses.java:224: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method processChar: newChunk
        Chunk newChunk = null;
              ^
./MyExpenses.java:383: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:383:) in method newInstance: newInstance
        public static Object newInstance(Dummy progress_dialog_printing) {
                      ^
./MyExpenses.java:383: verify: Associated declaration: ./MyExpenses.java:383:
        public static Object newInstance(Dummy progress_dialog_printing) {
                             ^
./MyExpenses.java:384: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:626: verify: The prover cannot establish an assertion (UndefinedCalledMethodPrecondition: /home/mkellogg/openjml/specs/java/lang/String.jml:447:) in method runAll
        public int compareTo(Object o) {
                   ^
Note: Call stack
  /home/mkellogg/openjml/specs/java/lang/String.jml:458: java.lang.String.equals
  /home/mkellogg/openjml/specs/java/lang/StringBuffer.jml:35: java.lang.String.equals
  ./MyExpenses.java:36: java.lang.StringBuffer.<init>
/home/mkellogg/openjml/specs/java/lang/String.jml:447: verify: Associated declaration: ./MyExpenses.java:626:
      @ public static model helper boolean equals(nullable String s1, nullable String s2);
                                           ^
/home/mkellogg/openjml/specs/java/lang/String.jml:436: verify: Precondition conjunct is false: s1.charArray != null
      @   //-RAC@ requires s1.charArray != null & s2.charArray != null; // OPENJML: TODO Needs the invariant that charArray is not null
                                        ^
/home/mkellogg/openjml/specs/java/lang/String.jml:439: verify: Precondition conjunct is false: s1 == s2
      @   requires s1 == s2;
                      ^
/home/mkellogg/openjml/specs/java/lang/String.jml:442: verify: Precondition conjunct is false: s1 == null || s2 == null || (java.lang.String.isInterned(s1) && java.lang.String.isInterned(s2))
      @   requires s1 == null || s2 == null ||
                                            ^
./MyExpenses.java:372: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:372:) in method newInstanceWithBundle: newInstanceWithBundle
        public static Object newInstanceWithBundle(Bundle args, Object taskPrint) {
                      ^
./MyExpenses.java:372: verify: Associated declaration: ./MyExpenses.java:372:
        public static Object newInstanceWithBundle(Bundle args, Object taskPrint) {
                             ^
./MyExpenses.java:373: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:518: verify: The prover cannot establish an assertion (NullField) in method Transaction
        public Dummy uuid;
                     ^
./MyExpenses.java:518: verify: The prover cannot establish an assertion (NullField) in method Transaction
        public Dummy uuid;
                     ^
./MyExpenses.java:546: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:546:) in method buildSaveOperations: buildSaveOperations
        public ArrayList<ContentProviderOperation> buildSaveOperations(int offset, int parentOffset, boolean b) {
                        ^
./MyExpenses.java:546: verify: Associated declaration: ./MyExpenses.java:546:
        public ArrayList<ContentProviderOperation> buildSaveOperations(int offset, int parentOffset, boolean b) {
                                                   ^
./MyExpenses.java:547: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:555: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:555:) in method valueOf: valueOf
            public static Dummy valueOf(Dummy crStatus) {
                          ^
./MyExpenses.java:555: verify: Associated declaration: ./MyExpenses.java:555:
            public static Dummy valueOf(Dummy crStatus) {
                                ^
./MyExpenses.java:556: verify: Associated method exit
                return null;
                ^
./MyExpenses.java:397: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:397:) in method amount: amount
        public Long amount() {
               ^
./MyExpenses.java:397: verify: Associated declaration: ./MyExpenses.java:397:
        public Long amount() {
                    ^
./MyExpenses.java:398: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:507: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:507:) in method setTimeStamp: setTimeStamp
            public Dummy setTimeStamp(long currentTimeMillis) {
                   ^
./MyExpenses.java:507: verify: Associated declaration: ./MyExpenses.java:507:
            public Dummy setTimeStamp(long currentTimeMillis) {
                         ^
./MyExpenses.java:508: verify: Associated method exit
                return null;
                ^
./MyExpenses.java:413: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:413:) in method comment: comment
        public Dummy comment() {
               ^
./MyExpenses.java:413: verify: Associated declaration: ./MyExpenses.java:413:
        public Dummy comment() {
                     ^
./MyExpenses.java:414: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:437: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:437:) in method crStatus: crStatus
        public Dummy crStatus() {
               ^
./MyExpenses.java:437: verify: Associated declaration: ./MyExpenses.java:437:
        public Dummy crStatus() {
                     ^
./MyExpenses.java:438: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:429: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:429:) in method date: date
        public Long date() {
               ^
./MyExpenses.java:429: verify: Associated declaration: ./MyExpenses.java:429:
        public Long date() {
                    ^
./MyExpenses.java:430: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:421: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:421:) in method label: label
        public Dummy label() {
               ^
./MyExpenses.java:421: verify: Associated declaration: ./MyExpenses.java:421:
        public Dummy label() {
                     ^
./MyExpenses.java:422: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:417: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:417:) in method methodLabel: methodLabel
        public Dummy methodLabel() {
               ^
./MyExpenses.java:417: verify: Associated declaration: ./MyExpenses.java:417:
        public Dummy methodLabel() {
                     ^
./MyExpenses.java:418: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:409: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:409:) in method parentUuid: parentUuid
        public Dummy parentUuid() {
               ^
./MyExpenses.java:409: verify: Associated declaration: ./MyExpenses.java:409:
        public Dummy parentUuid() {
                     ^
./MyExpenses.java:410: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:433: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:433:) in method payeeName: payeeName
        public Dummy payeeName() {
               ^
./MyExpenses.java:433: verify: Associated declaration: ./MyExpenses.java:433:
        public Dummy payeeName() {
                     ^
./MyExpenses.java:434: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:441: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:441:) in method pictureUri: pictureUri
        public Dummy pictureUri() {
               ^
./MyExpenses.java:441: verify: Associated declaration: ./MyExpenses.java:441:
        public Dummy pictureUri() {
                     ^
./MyExpenses.java:442: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:445: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:445:) in method referenceNumber: referenceNumber
        public Dummy referenceNumber() {
               ^
./MyExpenses.java:445: verify: Associated declaration: ./MyExpenses.java:445:
        public Dummy referenceNumber() {
                     ^
./MyExpenses.java:446: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:401: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:401:) in method splitParts: splitParts
        public Dummy splitParts() {
               ^
./MyExpenses.java:401: verify: Associated declaration: ./MyExpenses.java:401:
        public Dummy splitParts() {
                     ^
./MyExpenses.java:402: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:449: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:449:) in method toBuilder: toBuilder
        public Builder toBuilder() {
               ^
./MyExpenses.java:449: verify: Associated declaration: ./MyExpenses.java:449:
        public Builder toBuilder() {
                       ^
./MyExpenses.java:450: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:405: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:405:) in method transferAccount: transferAccount
        public Dummy transferAccount() {
               ^
./MyExpenses.java:405: verify: Associated declaration: ./MyExpenses.java:405:
        public Dummy transferAccount() {
                     ^
./MyExpenses.java:406: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:425: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:425:) in method uuid: uuid
        public Dummy uuid() {
               ^
./MyExpenses.java:425: verify: Associated declaration: ./MyExpenses.java:425:
        public Dummy uuid() {
                     ^
./MyExpenses.java:426: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:354: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:354:) in method getFilterCriteria: getFilterCriteria
        public Object getFilterCriteria() {
               ^
./MyExpenses.java:354: verify: Associated declaration: ./MyExpenses.java:354:
        public Object getFilterCriteria() {
                      ^
./MyExpenses.java:355: verify: Associated method exit
            return null;
            ^
./MyExpenses.java:297: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method updateOrClearHeader: underflow in int difference
        final boolean isHeaderPositionOutsideAdapterRange = headerPosition > adapterCount - 1
                                                                                          ^
./MyExpenses.java:282: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method updateOrClearHeader: overflow in int difference
        int headerPosition = firstVisiblePosition - headerViewCount;
                                                  ^
./MyExpenses.java:282: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method updateOrClearHeader: underflow in int difference
        int headerPosition = firstVisiblePosition - headerViewCount;
                                                  ^
./MyExpenses.java:286: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method updateOrClearHeader: overflow in int sum
                headerPosition++;
                              ^
./MyExpenses.java:281: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method updateOrClearHeader
        final int headerViewCount = mList.getHeaderViewsCount();
                                         ^
./MyExpenses.java:15: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private StickyListHeadersAdapter mDrawerListAdapter;
                                     ^
./MyExpenses.java:22: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private Dummy[] files;
                    ^
./MyExpenses.java:21: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private Dummy mAdapter;
                  ^
./MyExpenses.java:19: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private Font currentFont;
                 ^
./MyExpenses.java:18: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private Dummy payeeToId;
                  ^
./MyExpenses.java:17: verify: The prover cannot establish an assertion (NullField) in method updateOrClearHeader
    private Dummy mList;
                  ^
./MyExpenses.java:696: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./MyExpenses.java:696:) in method parse: parse
        public static Object parse(Dummy pictureUri) {
                      ^
./MyExpenses.java:696: verify: Associated declaration: ./MyExpenses.java:696:
        public static Object parse(Dummy pictureUri) {
                             ^
./MyExpenses.java:697: verify: Associated method exit
            return null;
            ^
./K9.java:420: warning: Use a static_initializer clause to specify the values of static final fields: K9.AuthType.XOAUTH2
        public static final Object XOAUTH2 = null;
                                   ^
./K9.java:416: warning: Use a static_initializer clause to specify the values of static final fields: K9.ConnectionSecurity.NONE
        public static final Object NONE = null;
                                   ^
./K9.java:250: warning: Use a static_initializer clause to specify the values of static final fields: K9.Context.CONNECTIVITY_SERVICE
        public static final Object CONNECTIVITY_SERVICE = null;
                                   ^
./K9.java:420: warning: Use a static_initializer clause to specify the values of static final fields: K9.AuthType.XOAUTH2
        public static final Object XOAUTH2 = null;
                                   ^
./K9.java:416: warning: Use a static_initializer clause to specify the values of static final fields: K9.ConnectionSecurity.NONE
        public static final Object NONE = null;
                                   ^
./K9.java:250: warning: Use a static_initializer clause to specify the values of static final fields: K9.Context.CONNECTIVITY_SERVICE
        public static final Object CONNECTIVITY_SERVICE = null;
                                   ^
./K9.java:420: warning: Use a static_initializer clause to specify the values of static final fields: K9.AuthType.XOAUTH2
        public static final Object XOAUTH2 = null;
                                   ^
./K9.java:416: warning: Use a static_initializer clause to specify the values of static final fields: K9.ConnectionSecurity.NONE
        public static final Object NONE = null;
                                   ^
./K9.java:250: warning: Use a static_initializer clause to specify the values of static final fields: K9.Context.CONNECTIVITY_SERVICE
        public static final Object CONNECTIVITY_SERVICE = null;
                                   ^
./K9.java:430: verify: Associated declaration: ./K9.java:430:
        public String getMessage() {
                      ^
./K9.java:431: verify: Associated method exit
            return null;
            ^
./K9.java:252: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:252:) in method getSystemService: getSystemService
        public Object getSystemService(Object connectivityService) {
               ^
./K9.java:252: verify: Associated declaration: ./K9.java:252:
        public Object getSystemService(Object connectivityService) {
                      ^
./K9.java:253: verify: Associated method exit
            return null;
            ^
./K9.java:338: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:338:) in method createParser: createParser
    private ImapResponseParser createParser(String s) {
            ^
./K9.java:338: verify: Associated declaration: ./K9.java:338:
    private ImapResponseParser createParser(String s) {
                               ^
./K9.java:339: verify: Associated method exit
        return null;
        ^
./K9.java:299: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:299:) in method getId: getId
        public String getId() {
               ^
./K9.java:299: verify: Associated declaration: ./K9.java:299:
        public String getId() {
                      ^
./K9.java:300: verify: Associated method exit
            return null;
            ^
./K9.java:436: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:436:) in method textToHtml: textToHtml
        public static String textToHtml(String message) {
                      ^
./K9.java:436: verify: Associated declaration: ./K9.java:436:
        public static String textToHtml(String message) {
                             ^
./K9.java:437: verify: Associated method exit
            return null;
            ^
./K9.java:329: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:329:) in method getList: getList
        public ImapResponse getList(int i) {
               ^
./K9.java:329: verify: Associated declaration: ./K9.java:329:
        public ImapResponse getList(int i) {
                            ^
./K9.java:330: verify: Associated method exit
            return null;
            ^
./K9.java:325: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:325:) in method getString: getString
        public String getString(int i) {
               ^
./K9.java:325: verify: Associated declaration: ./K9.java:325:
        public String getString(int i) {
                      ^
./K9.java:326: verify: Associated method exit
            return null;
            ^
./K9.java:315: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:315:) in method readResponse: readResponse
        public ImapResponse readResponse() {
               ^
./K9.java:315: verify: Associated declaration: ./K9.java:315:
        public ImapResponse readResponse() {
                            ^
./K9.java:316: verify: Associated method exit
            return null;
            ^
./K9.java:281: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:281:) in method getId: getId
        public String getId() {
               ^
./K9.java:281: verify: Associated declaration: ./K9.java:281:
        public String getId() {
                      ^
./K9.java:282: verify: Associated method exit
            return null;
            ^
./K9.java:117: verify: The prover cannot establish an assertion (NullFormal: ./K9.java:395:) in method open_withXoauth2Extension_shouldThrowOnMultipleFailure: s in output(java.lang.String)
        server.output("334 " + XOAuth2ChallengeParserTest.STATUS_400_RESPONSE);
                      ^
./K9.java:395: verify: Associated declaration: ./K9.java:117:
        public void output(String s) {
                           ^
./K9.java:117: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method open_withXoauth2Extension_shouldThrowOnMultipleFailure: (Caller: K9.open_withXoauth2Extension_shouldThrowOnMultipleFailure(), Callee: K9.MockSmtpServer.output(java.lang.String))
        server.output("334 " + XOAuth2ChallengeParserTest.STATUS_400_RESPONSE);
                      ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./K9.java:117:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./K9.java:245: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:245:) in method startServerAndCreateSmtpTransport: startServerAndCreateSmtpTransport
    private SmtpTransport startServerAndCreateSmtpTransport(MockSmtpServer server, Object xoauth2, Object none) {
            ^
./K9.java:245: verify: Associated declaration: ./K9.java:245:
    private SmtpTransport startServerAndCreateSmtpTransport(MockSmtpServer server, Object xoauth2, Object none) {
                          ^
./K9.java:246: verify: Associated method exit
        return null;
        ^
./K9.java:188: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method StorageManager
                    mProviders.put(provider.getId(), provider);
                              ^
./K9.java:189: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method StorageManager
                    mProviderLocks.put(provider, new SynchronizationAid());
                                  ^
./K9.java:348: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./K9.java:348:) in method getStoreUri: getStoreUri
        public String getStoreUri() {
               ^
./K9.java:348: verify: Associated declaration: ./K9.java:348:
        public String getStoreUri() {
                      ^
./K9.java:349: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:463: warning: Use a static_initializer clause to specify the values of static final fields: Antlr4Master.SemanticContext.NONE
        public static final Object NONE = null;
                                   ^
./Antlr4Master.java:339: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method analyse: (Parameter: grammarsAndTokens, Caller: Antlr4Master.analyse(java.io.File,java.util.Collection<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.charAt(int))
    private void analyse(File grammarFile, Collection<File> grammarsAndTokens, Tool tool) {
                                                            ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./Antlr4Master.java:339:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./Antlr4Master.java:339: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:24:) in method analyse: (Parameter: grammarFile, Caller: Antlr4Master.analyse(java.io.File,java.util.Collection<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.charAt(int))
    private void analyse(File grammarFile, Collection<File> grammarsAndTokens, Tool tool) {
                              ^
/home/mkellogg/openjml/specs/java/io/File.jml:24: verify: Associated declaration: ./Antlr4Master.java:339:
    //@ public invariant separator.length() == 1 && separator.charAt(0) == separatorChar;
               ^
./Antlr4Master.java:25: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method analyse: (Caller: Antlr4Master.analyse(java.io.File,java.util.Collection<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.charAt(int))
    private T[][] buckets;
                  ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:339: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method analyse: (Parameter: grammarFile, Caller: Antlr4Master.analyse(java.io.File,java.util.Collection<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.charAt(int))
    private void analyse(File grammarFile, Collection<File> grammarsAndTokens, Tool tool) {
                              ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:339:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:29: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method analyse: (Caller: Antlr4Master.analyse(java.io.File,java.util.Collection<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.charAt(int))
    public void runAll() {
                         ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:29:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:375: verify: The prover cannot establish an assertion (InvariantExit: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method ATNConfigSet
    public static class ATNConfigSet implements Set<ATNConfig> {
                  ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./Antlr4Master.java:375:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./Antlr4Master.java:410: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:144:) in method add
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:144: verify: Associated declaration: ./Antlr4Master.java:410:
      @   ensures \exists \bigint i; 0 <= i < values.length; values[i] == o;
          ^
./Antlr4Master.java:447: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:447:) in method add: add
        public Transaction add(Object newInstanceWithBundle, MyExpenses.Dummy asyncTag) {
               ^
./Antlr4Master.java:447: verify: Associated declaration: ./Antlr4Master.java:447:
        public Transaction add(Object newInstanceWithBundle, MyExpenses.Dummy asyncTag) {
                           ^
./Antlr4Master.java:448: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:439: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:277:) in method clear
        public void clear() {
                    ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:277: verify: Associated declaration: ./Antlr4Master.java:439:
      @   ensures isEmpty();
          ^
./Antlr4Master.java:390: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:72:) in method contains
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:72: verify: Associated declaration: ./Antlr4Master.java:390:
      @   ensures \result == (\exists int i; 0 <= i < values.length; Collection.nullequals(o,values[i]));
          ^
./Antlr4Master.java:420: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:198:) in method containsAll
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:198: verify: Associated declaration: ./Antlr4Master.java:420:
          ensures \result;
          ^
./Antlr4Master.java:385: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:66:) in method isEmpty
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:66: verify: Associated declaration: ./Antlr4Master.java:385:
      @  ensures \result <==> (values.length == 0);
         ^
./Antlr4Master.java:394: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:394:) in method iterator: iterator
        public Iterator<ATNConfig> iterator() {
                       ^
./Antlr4Master.java:394: verify: Associated declaration: ./Antlr4Master.java:394:
        public Iterator<ATNConfig> iterator() {
                                   ^
./Antlr4Master.java:395: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:415: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Set.jml:62:) in method remove
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Set.jml:62: verify: Associated declaration: ./Antlr4Master.java:415:
       @   ensures \result;
           ^
./Antlr4Master.java:435: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:229:) in method removeAll
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:229: verify: Associated declaration: ./Antlr4Master.java:435:
      @   ensures c == this ==> isEmpty();
          ^
./Antlr4Master.java:435: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Set.jml:88:) in method removeAll
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Set.jml:88: verify: Associated declaration: ./Antlr4Master.java:435:
       @   ensures (\forall Object o; c.contains(o) <==>
           ^
./Antlr4Master.java:435: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Set.jml:87:) in method removeAll
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Set.jml:87: verify: Associated declaration: ./Antlr4Master.java:435:
       @   ensures \old(c.contains(null)) ==> !contains(null);
           ^
./Antlr4Master.java:380: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:61:) in method size
            return 0;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:61: verify: Associated declaration: ./Antlr4Master.java:380:
      @    ensures \result == values.length;
           ^
./Antlr4Master.java:400: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:102:) in method toArray
            return new Object[0];
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:102: verify: Associated declaration: ./Antlr4Master.java:400:
    //@       ensures \result.length == size();
              ^
./Antlr4Master.java:400: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:106:) in method toArray
            return new Object[0];
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:106: verify: Associated declaration: ./Antlr4Master.java:400:
    //-RAC@   ensures  (\forall Object o; containsObject(o) <==> Arrays.contains(\result,o));
              ^
./Antlr4Master.java:404: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:404:) in method <T>toArray: toArray
        public <T> T[] toArray(T[] a) {
                    ^
./Antlr4Master.java:404: verify: Associated declaration: ./Antlr4Master.java:404:
        public <T> T[] toArray(T[] a) {
                       ^
./Antlr4Master.java:405: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:360: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:360:) in method createWithUTF8: createWithUTF8
        public static CharStream createWithUTF8(Path path) {
                      ^
./Antlr4Master.java:360: verify: Associated declaration: ./Antlr4Master.java:360:
        public static CharStream createWithUTF8(Path path) {
                                 ^
./Antlr4Master.java:361: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:356: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:356:) in method createWithUTF8Stream: createWithUTF8Stream
        public static CharStream createWithUTF8Stream(InputStream in) {
                      ^
./Antlr4Master.java:356: verify: Associated declaration: ./Antlr4Master.java:356:
        public static CharStream createWithUTF8Stream(InputStream in) {
                                 ^
./Antlr4Master.java:357: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:331: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:331:) in method findUsages: findUsages
    private Collection<String> findUsages(String relativePath) {
                      ^
./Antlr4Master.java:331: verify: Associated declaration: ./Antlr4Master.java:331:
    private Collection<String> findUsages(String relativePath) {
                               ^
./Antlr4Master.java:332: verify: Associated method exit
        return null;
        ^
./Antlr4Master.java:470: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:470:) in method getConflictingAltSubsets: getConflictingAltSubsets
    private static Collection<BitSet> getConflictingAltSubsets(ATNConfigSet configs) {
                             ^
./Antlr4Master.java:470: verify: Associated declaration: ./Antlr4Master.java:470:
    private static Collection<BitSet> getConflictingAltSubsets(ATNConfigSet configs) {
                                      ^
./Antlr4Master.java:471: verify: Associated method exit
        return null;
        ^
./Antlr4Master.java:29: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getRelativePath: (Caller: Antlr4Master.getRelativePath(java.io.File), Callee: java.lang.String.charAt(int))
    public void runAll() {
                         ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:29:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:335: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method getRelativePath: (Parameter: grammarFile, Caller: Antlr4Master.getRelativePath(java.io.File), Callee: java.lang.String.charAt(int))
    private String getRelativePath(File grammarFile) {
                                        ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:335:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:25: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getRelativePath: (Caller: Antlr4Master.getRelativePath(java.io.File), Callee: java.lang.String.charAt(int))
    private T[][] buckets;
                  ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:335: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:24:) in method getRelativePath: (Parameter: grammarFile, Caller: Antlr4Master.getRelativePath(java.io.File), Callee: java.lang.String.charAt(int))
    private String getRelativePath(File grammarFile) {
                                        ^
/home/mkellogg/openjml/specs/java/io/File.jml:24: verify: Associated declaration: ./Antlr4Master.java:335:
    //@ public invariant separator.length() == 1 && separator.charAt(0) == separatorChar;
               ^
./Antlr4Master.java:335: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:335:) in method getRelativePath: getRelativePath
    private String getRelativePath(File grammarFile) {
            ^
./Antlr4Master.java:335: verify: Associated declaration: ./Antlr4Master.java:335:
    private String getRelativePath(File grammarFile) {
                   ^
./Antlr4Master.java:336: verify: Associated method exit
        return null;
        ^
./Antlr4Master.java:326: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:24:) in method put: (Parameter: grammarFile, Caller: Antlr4Master.Grammar.put(java.io.File,java.util.AbstractMap.SimpleImmutableEntry<byte[],java.util.Collection<java.lang.String>>), Callee: java.lang.String.charAt(int))
        public void put(File grammarFile, AbstractMap.SimpleImmutableEntry<byte[], Collection<String>> collectionSimpleImmutableEntry) {
                             ^
/home/mkellogg/openjml/specs/java/io/File.jml:24: verify: Associated declaration: ./Antlr4Master.java:326:
    //@ public invariant separator.length() == 1 && separator.charAt(0) == separatorChar;
               ^
./Antlr4Master.java:326: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method put: (Parameter: grammarFile, Caller: Antlr4Master.Grammar.put(java.io.File,java.util.AbstractMap.SimpleImmutableEntry<byte[],java.util.Collection<java.lang.String>>), Callee: java.lang.String.charAt(int))
        public void put(File grammarFile, AbstractMap.SimpleImmutableEntry<byte[], Collection<String>> collectionSimpleImmutableEntry) {
                             ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:326:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:29: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method put: (Caller: Antlr4Master.Grammar.put(java.io.File,java.util.AbstractMap.SimpleImmutableEntry<byte[],java.util.Collection<java.lang.String>>), Callee: java.lang.String.charAt(int))
    public void runAll() {
                         ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:29:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:25: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method put: (Caller: Antlr4Master.Grammar.put(java.io.File,java.util.AbstractMap.SimpleImmutableEntry<byte[],java.util.Collection<java.lang.String>>), Callee: java.lang.String.charAt(int))
    private T[][] buckets;
                  ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:53: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method analyze: (Caller: Antlr4Master.GrammarDependencies.analyze(java.util.Set<java.io.File>,java.util.Set<java.io.File>,Antlr4Master.Tool), Callee: java.lang.String.concat(@org.jmlspecs.annotation.Nullable java.lang.String,@org.jmlspecs.annotation.Nullable java.lang.String))
    public class GrammarDependencies {
           ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:53:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:70: verify: The prover cannot establish an assertion (Precondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:224:) in method analyze
            grammarsAndTokens.addAll(importGrammarFiles);
                                    ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:224: verify: Associated declaration: ./Antlr4Master.java:70:
    boolean addAll(Collection<? extends E> c) throws NullPointerException;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:210: verify: Precondition conjunct is false: !false ==> (!containsNull ==> !c.containsNull)
      @   requires !\key("RAC") ==> !containsNull ==> !c.containsNull;
                                ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:219: verify: Precondition conjunct is false: c == null
      @  requires c == null;
                    ^
./Antlr4Master.java:71: verify: The prover cannot establish an assertion (Precondition: /home/mkellogg/openjml/specs/java/util/Collection.jml:224:) in method analyze
            grammarsAndTokens.addAll(grammarFiles);
                                    ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:224: verify: Associated declaration: ./Antlr4Master.java:71:
    boolean addAll(Collection<? extends E> c) throws NullPointerException;
            ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:210: verify: Precondition conjunct is false: !false ==> (!containsNull ==> !c.containsNull)
      @   requires !\key("RAC") ==> !containsNull ==> !c.containsNull;
                                ^
/home/mkellogg/openjml/specs/java/util/Collection.jml:219: verify: Precondition conjunct is false: c == null
      @  requires c == null;
                    ^
./Antlr4Master.java:93: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method analyze: (Caller: Antlr4Master.GrammarDependencies.analyze(java.util.Set<java.io.File>,java.util.Set<java.io.File>,Antlr4Master.Tool), Callee: java.io.File.getName())
                Collection<String> usages = findUsages(grammarFile.getName());
                                                                          ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:93:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:80: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method analyze: (Caller: Antlr4Master.GrammarDependencies.analyze(java.util.Set<java.io.File>,java.util.Set<java.io.File>,Antlr4Master.Tool), Callee: Antlr4Master.getRelativePath(java.io.File))
                Collection<String> usages = findUsages(getRelativePath(grammarFile));
                                                                       ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:80:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:64: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
        public GrammarDependencies analyze(Set<File> grammarFiles,
                                   ^
./Antlr4Master.java:545: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:545:) in method of: of
        public static String of(int i, int i1) {
                      ^
./Antlr4Master.java:545: verify: Associated declaration: ./Antlr4Master.java:545:
        public static String of(int i, int i1) {
                             ^
./Antlr4Master.java:546: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:500: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:500:) in method createLexerInterpreter: createLexerInterpreter
        public LexerInterpreter createLexerInterpreter(ANTLRInputStream antlrInputStream) {
               ^
./Antlr4Master.java:500: verify: Associated declaration: ./Antlr4Master.java:500:
        public LexerInterpreter createLexerInterpreter(ANTLRInputStream antlrInputStream) {
                                ^
./Antlr4Master.java:501: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:25: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method checksum: (Caller: Antlr4Master.MojoUtils.checksum(java.io.File), Callee: java.lang.String.charAt(int))
    private T[][] buckets;
                  ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:320: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method checksum: (Parameter: grammarFile, Caller: Antlr4Master.MojoUtils.checksum(java.io.File), Callee: java.lang.String.charAt(int))
        public static byte[] checksum(File grammarFile) {
                                           ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./Antlr4Master.java:320:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./Antlr4Master.java:320: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:24:) in method checksum: (Parameter: grammarFile, Caller: Antlr4Master.MojoUtils.checksum(java.io.File), Callee: java.lang.String.charAt(int))
        public static byte[] checksum(File grammarFile) {
                                           ^
/home/mkellogg/openjml/specs/java/io/File.jml:24: verify: Associated declaration: ./Antlr4Master.java:320:
    //@ public invariant separator.length() == 1 && separator.charAt(0) == separatorChar;
               ^
./Antlr4Master.java:29: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method checksum: (Caller: Antlr4Master.MojoUtils.checksum(java.io.File), Callee: java.lang.String.charAt(int))
    public void runAll() {
                         ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Antlr4Master.java:29:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Antlr4Master.java:114: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method process: lexerClass
        Class<? extends Lexer> lexerClass = null;
                               ^
./Antlr4Master.java:216: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method removeFast
        T[] bucket = buckets[b];
                            ^
./Antlr4Master.java:223: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method removeFast
            T e = bucket[i];
                        ^
./Antlr4Master.java:223: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method removeFast: e
            T e = bucket[i];
              ^
./Antlr4Master.java:216: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method removeFast
        T[] bucket = buckets[b];
                            ^
./Antlr4Master.java:231: verify: The prover cannot establish an assertion (Precondition: /home/mkellogg/openjml/specs/java/lang/System.jml:312:) in method removeFast
                System.arraycopy(bucket, i+1, bucket, i, bucket.length-i-1);
                                ^
/home/mkellogg/openjml/specs/java/lang/System.jml:312: verify: Associated declaration: ./Antlr4Master.java:231:
    public static native void arraycopy(/*@nullable*/ Object src,
                              ^
/home/mkellogg/openjml/specs/java/lang/System.jml:147: verify: Precondition conjunct is false: src == null || dest == null
      @    requires src == null || dest == null;
                                ^
/home/mkellogg/openjml/specs/java/lang/System.jml:152: verify: Precondition conjunct is false: (src instanceof byte[])
           requires (src instanceof byte[]) &&
                    ^
/home/mkellogg/openjml/specs/java/lang/System.jml:208: verify: Precondition conjunct is false: \elemtype(\typeof(src)) <: \elemtype(\typeof(dest))
                 \elemtype(\typeof(src)) <: \elemtype(\typeof(dest)) &&
                                         ^
/home/mkellogg/openjml/specs/java/lang/System.jml:218: verify: Precondition conjunct is false: (src instanceof int[])
        requires (src instanceof int[]) &&
                 ^
/home/mkellogg/openjml/specs/java/lang/System.jml:229: verify: Precondition conjunct is false: (src instanceof long[])
        requires (src instanceof long[]) &&
                 ^
/home/mkellogg/openjml/specs/java/lang/System.jml:240: verify: Precondition conjunct is false: (src instanceof char[])
        requires (src instanceof char[]) &&
                 ^
./Antlr4Master.java:232: verify: The prover cannot establish an assertion (PossiblyNullAssignment) in method removeFast
                bucket[bucket.length - 1] = null;
                                          ^
./Antlr4Master.java:531: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:531:) in method getText: getText
        public String getText() {
               ^
./Antlr4Master.java:531: verify: Associated declaration: ./Antlr4Master.java:531:
        public String getText() {
                      ^
./Antlr4Master.java:532: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:535: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:535:) in method getText: getText
        public String getText(String of) {
               ^
./Antlr4Master.java:535: verify: Associated declaration: ./Antlr4Master.java:535:
        public String getText(String of) {
                      ^
./Antlr4Master.java:536: verify: Associated method exit
            return null;
            ^
./Antlr4Master.java:523: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Antlr4Master.java:523:) in method getTokenStream: getTokenStream
        public JLabel getTokenStream() {
               ^
./Antlr4Master.java:523: verify: Associated declaration: ./Antlr4Master.java:523:
        public JLabel getTokenStream() {
                      ^
./Antlr4Master.java:524: verify: Associated method exit
            return null;
            ^
./Pom.java:553: warning: Use a static_initializer clause to specify the values of static final fields: Pom.Project.MSG_DEBUG
        public static final Object MSG_DEBUG = "";
                                   ^
./Pom.java:319: verify: Associated declaration: ./Pom.java:319:
    private Class findBaseClass(String classname) throws ClassNotFoundException{
                  ^
./Pom.java:320: verify: Associated method exit
        return null;
        ^
./Pom.java:311: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:311:) in method findClass: findClass
    private Class findClass(String classname) throws ClassNotFoundException{
            ^
./Pom.java:311: verify: Associated declaration: ./Pom.java:311:
    private Class findClass(String classname) throws ClassNotFoundException{
                  ^
./Pom.java:312: verify: Associated method exit
        return null;
        ^
./Pom.java:331: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:331:) in method findLoadedClass: findLoadedClass
    private Class findLoadedClass(String classname) {
            ^
./Pom.java:331: verify: Associated declaration: ./Pom.java:331:
    private Class findLoadedClass(String classname) {
                  ^
./Pom.java:332: verify: Associated method exit
        return null;
        ^
./Pom.java:170: verify: The prover cannot establish an assertion (Accessible) in method getCurrentWorkingDirectory: \everything
                    return new File(".").getAbsoluteFile();
                           ^
./Pom.java:19: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getCurrentWorkingDirectory: (Caller: Pom.1.getCurrentWorkingDirectory(), Callee: java.lang.String.charAt(int))
    private static final String HEALTH_0_TO_20 = "icon-health-00to19";
                                                             ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Pom.java:19:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Pom.java:22: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getCurrentWorkingDirectory: (Caller: Pom.1.getCurrentWorkingDirectory(), Callee: java.lang.String.charAt(int))
    private static final String HEALTH_61_TO_80_IMG = "health-60to79.png";
      ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Pom.java:22:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Pom.java:170: verify: The prover cannot establish an assertion (Accessible) in method getCurrentWorkingDirectory: \everything
                    return new File(".").getAbsoluteFile();
                                                        ^
./Pom.java:170: verify: The prover cannot establish an assertion (Assignable) in method getCurrentWorkingDirectory: \everything
                    return new File(".").getAbsoluteFile();
                                                        ^
./Pom.java:19: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getCurrentWorkingDirectory: (Caller: Pom.1.getCurrentWorkingDirectory(), Callee: java.lang.String.charAt(int))
    private static final String HEALTH_0_TO_20 = "icon-health-00to19";
                                                             ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Pom.java:19:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Pom.java:22: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method getCurrentWorkingDirectory: (Caller: Pom.1.getCurrentWorkingDirectory(), Callee: java.lang.String.charAt(int))
    private static final String HEALTH_61_TO_80_IMG = "health-60to79.png";
      ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Pom.java:22:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Pom.java:175: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                    String[] envp = new String[envs.size()];
                                                        ^
./Pom.java:175: verify: The prover cannot establish an assertion (PossiblyNegativeSize) in method getEnv
                    String[] envp = new String[envs.size()];
                                                        ^
./Pom.java:179: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method getEnv: overflow in int sum
                        envp[i++] = e.getKey()+'+'+e.getValue();
                              ^
./Pom.java:174: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method getEnv: envs
                    Map<String,String> envs = System.getenv();
                                       ^
./Pom.java:179: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method getEnv
                        envp[i++] = e.getKey()+'+'+e.getValue();
                            ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                            ^
./Pom.java:179: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method getEnv
                        envp[i++] = e.getKey()+'+'+e.getValue();
                            ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                              ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                             ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                  ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                  ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                  ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                  ^
./Pom.java:179: verify: The prover cannot establish an assertion (Accessible) in method getEnv: \everything
                        envp[i++] = e.getKey()+'+'+e.getValue();
                                                  ^
./Pom.java:158: verify: The prover cannot establish an assertion (Accessible) in method unimplementedError: \everything
                    throw new UnsupportedOperationException(s);
                          ^
./Pom.java:162: verify: The prover cannot establish an assertion (Accessible) in method warn: \everything
                    LOGGER.fine(s);
                               ^
./Pom.java:162: verify: The prover cannot establish an assertion (Assignable) in method warn: \everything
                    LOGGER.fine(s);
                               ^
./Pom.java:103: verify: The prover cannot establish an assertion (PossiblyNullAssignment) in method HealthReport
            this.description = null;
                             ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:109: verify: The prover cannot establish an assertion (Assignable: /home/mkellogg/openjml/specs/java/util/Iterator.jml:66:) in method hasNext: \everything
/home/mkellogg/openjml/specs/java/util/Iterator.jml:66: verify: Associated declaration: /home/mkellogg/openjml/specs/java/util/Iterator.jml:109:
    //@ pure helper
        ^
./Pom.java:220: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Iterator.jml:64:) in method hasNext
                return next!=null;
                ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:64: verify: Associated declaration: ./Pom.java:220:
      @    ensures \result <==> moreElements;
           ^
./Pom.java:219: verify: The prover cannot establish an assertion (ExceptionalPostcondition: /home/mkellogg/openjml/specs/java/util/Iterator.jml:62:) in method hasNext
                fetch();
                     ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:62: verify: Associated declaration: ./Pom.java:219:
    /*@ public normal_behavior
               ^
./Pom.java:226: verify: The prover cannot establish an assertion (PossiblyNullAssignment) in method next
                next = null;
                     ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:109: verify: The prover cannot establish an assertion (Assignable: /home/mkellogg/openjml/specs/java/util/Iterator.jml:83:) in method next: \everything
/home/mkellogg/openjml/specs/java/util/Iterator.jml:83: verify: Associated declaration: /home/mkellogg/openjml/specs/java/util/Iterator.jml:109:
      @     assignable \nothing;
            ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:109: verify: The prover cannot establish an assertion (Assignable: /home/mkellogg/openjml/specs/java/util/Iterator.jml:77:) in method next: \everything
/home/mkellogg/openjml/specs/java/util/Iterator.jml:77: verify: Associated declaration: /home/mkellogg/openjml/specs/java/util/Iterator.jml:109:
      @     assignable objectState, remove_called_since, moreElements;
            ^
./Pom.java:224: verify: The prover cannot establish an assertion (ExceptionalPostcondition: /home/mkellogg/openjml/specs/java/util/Iterator.jml:75:) in method next
                fetch();
                     ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:75: verify: Associated declaration: ./Pom.java:224:
    /*@  public normal_behavior
                ^
./Pom.java:224: verify: The prover cannot establish an assertion (ExceptionList: /home/mkellogg/openjml/specs/java/util/Iterator.jml:84:) in method next
                fetch();
                     ^
/home/mkellogg/openjml/specs/java/util/Iterator.jml:84: verify: Associated declaration: ./Pom.java:224:
      @     signals_only NoSuchElementException;
            ^
./Pom.java:492: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:492:) in method getCurrentWorkingDirectory: getCurrentWorkingDirectory
        public File getCurrentWorkingDirectory() {
               ^
./Pom.java:492: verify: Associated declaration: ./Pom.java:492:
        public File getCurrentWorkingDirectory() {
                    ^
./Pom.java:493: verify: Associated method exit
            return null;
            ^
./Pom.java:517: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:517:) in method getErrorStream: getErrorStream
        public PrintStream getErrorStream() {
               ^
./Pom.java:517: verify: Associated declaration: ./Pom.java:517:
        public PrintStream getErrorStream() {
                           ^
./Pom.java:518: verify: Associated method exit
            return null;
            ^
./Pom.java:502: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:502:) in method getInputStream: getInputStream
        public InputStream getInputStream() {
               ^
./Pom.java:502: verify: Associated declaration: ./Pom.java:502:
        public InputStream getInputStream() {
                           ^
./Pom.java:503: verify: Associated method exit
            return null;
            ^
./Pom.java:507: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:507:) in method getOutputStream: getOutputStream
        public PrintStream getOutputStream() {
               ^
./Pom.java:507: verify: Associated declaration: ./Pom.java:507:
        public PrintStream getOutputStream() {
                           ^
./Pom.java:508: verify: Associated method exit
            return null;
            ^
./Pom.java:336: verify: The prover cannot establish an assertion (NullField) in method ReloadThread
        public Set<ViewJob> reloadQueue;
                            ^
./Pom.java:40: verify: The prover cannot establish an assertion (NullFormal: ./Pom.java:213:) in method runAll: base in <T>limit(java.util.Iterator<? extends T>,Pom.CountingPredicate<? super T>)
        limit(null, null);
              ^
./Pom.java:213: verify: Associated declaration: ./Pom.java:40:
    public static <T> Iterator<T> limit(final Iterator<? extends T> base, final CountingPredicate<? super T> filter) {
                                                      ^
./Pom.java:424: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Map.jml:230:) in method clear
        public void clear() {
                    ^
/home/mkellogg/openjml/specs/java/util/Map.jml:230: verify: Associated declaration: ./Pom.java:424:
      @    ensures isEmpty();
           ^
./Pom.java:354: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:354:) in method comparator: comparator
        public Comparator comparator() {
               ^
./Pom.java:354: verify: Associated declaration: ./Pom.java:354:
        public Comparator comparator() {
                          ^
./Pom.java:355: verify: Associated method exit
            return null;
            ^
./Pom.java:395: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Map.jml:113:) in method containsKey
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Map.jml:113: verify: Associated declaration: ./Pom.java:395:
      @    ensures keys[key.uniqueHash] <==> \result;
           ^
./Pom.java:400: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Map.jml:125:) in method containsValue
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Map.jml:125: verify: Associated declaration: ./Pom.java:400:
      @    ensures \result <==> ((nullPresent && nullValue.uniqueHash == value.uniqueHash) || \exists \bigint i;; keys[i] && modelMap[i].uniqueHash == value.uniqueHash);
           ^
./Pom.java:439: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:439:) in method entrySet: entrySet
        public Set<Entry> entrySet() {
                  ^
./Pom.java:439: verify: Associated declaration: ./Pom.java:439:
        public Set<Entry> entrySet() {
                          ^
./Pom.java:440: verify: Associated method exit
            return null;
            ^
./Pom.java:445: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/lang/Object.jml:85:) in method equals
            return false;
            ^
/home/mkellogg/openjml/specs/java/lang/Object.jml:85: verify: Associated declaration: ./Pom.java:445:
      @     ensures \result;
            ^
./Pom.java:374: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:374:) in method firstKey: firstKey
        public Object firstKey() {
               ^
./Pom.java:374: verify: Associated declaration: ./Pom.java:374:
        public Object firstKey() {
                      ^
./Pom.java:375: verify: Associated method exit
            return null;
            ^
./Pom.java:404: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:404:) in method get: get
        public Object get(Object key) {
               ^
./Pom.java:404: verify: Associated declaration: ./Pom.java:404:
        public Object get(Object key) {
                      ^
./Pom.java:405: verify: Associated method exit
            return null;
            ^
./Pom.java:450: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/lang/Object.jml:69:) in method hashCode
            return 0;
            ^
/home/mkellogg/openjml/specs/java/lang/Object.jml:69: verify: Associated declaration: ./Pom.java:450:
    //-RAC@ ensures \result == theHashCode;  
            ^
./Pom.java:364: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:364:) in method headMap: headMap
        public SortedMap headMap(Object toKey) {
               ^
./Pom.java:364: verify: Associated declaration: ./Pom.java:364:
        public SortedMap headMap(Object toKey) {
                         ^
./Pom.java:365: verify: Associated method exit
            return null;
            ^
./Pom.java:390: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Map.jml:107:) in method isEmpty
            return false;
            ^
/home/mkellogg/openjml/specs/java/util/Map.jml:107: verify: Associated declaration: ./Pom.java:390:
      @    ensures \result <==> (_size == 0); 
           ^
./Pom.java:429: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:429:) in method keySet: keySet
        public Set keySet() {
               ^
./Pom.java:429: verify: Associated declaration: ./Pom.java:429:
        public Set keySet() {
                   ^
./Pom.java:430: verify: Associated method exit
            return null;
            ^
./Pom.java:379: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:379:) in method lastKey: lastKey
        public Object lastKey() {
               ^
./Pom.java:379: verify: Associated declaration: ./Pom.java:379:
        public Object lastKey() {
                      ^
./Pom.java:380: verify: Associated method exit
            return null;
            ^
./Pom.java:409: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:409:) in method put: put
        public Object put(Object key, Object value) {
               ^
./Pom.java:409: verify: Associated declaration: ./Pom.java:409:
        public Object put(Object key, Object value) {
                      ^
./Pom.java:410: verify: Associated method exit
            return null;
            ^
./Pom.java:414: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:414:) in method remove: remove
        public Object remove(Object key) {
               ^
./Pom.java:414: verify: Associated declaration: ./Pom.java:414:
        public Object remove(Object key) {
                      ^
./Pom.java:415: verify: Associated method exit
            return null;
            ^
./Pom.java:385: verify: The prover cannot establish an assertion (Postcondition: /home/mkellogg/openjml/specs/java/util/Map.jml:101:) in method size
            return 0;
            ^
/home/mkellogg/openjml/specs/java/util/Map.jml:101: verify: Associated declaration: ./Pom.java:385:
    //-RAC@   ensures \result == _size;
              ^
./Pom.java:359: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:359:) in method subMap: subMap
        public SortedMap subMap(Object fromKey, Object toKey) {
               ^
./Pom.java:359: verify: Associated declaration: ./Pom.java:359:
        public SortedMap subMap(Object fromKey, Object toKey) {
                         ^
./Pom.java:360: verify: Associated method exit
            return null;
            ^
./Pom.java:369: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:369:) in method tailMap: tailMap
        public SortedMap tailMap(Object fromKey) {
               ^
./Pom.java:369: verify: Associated declaration: ./Pom.java:369:
        public SortedMap tailMap(Object fromKey) {
                         ^
./Pom.java:370: verify: Associated method exit
            return null;
            ^
./Pom.java:434: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:434:) in method values: values
        public Collection values() {
               ^
./Pom.java:434: verify: Associated declaration: ./Pom.java:434:
        public Collection values() {
                          ^
./Pom.java:435: verify: Associated method exit
            return null;
            ^
./Pom.java:138: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method _getRuns: (Caller: Pom.ViewJob._getRuns(), Callee: java.util.Set.add(E))
                        reloadQueue.add(this);
                                       ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./Pom.java:138:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./Pom.java:111: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Pom.java:111:) in method _getRuns: _getRuns
        protected SortedMap<Integer,RunT> _getRuns() {
                           ^
./Pom.java:111: verify: Associated declaration: ./Pom.java:111:
        protected SortedMap<Integer,RunT> _getRuns() {
                                          ^
./Pom.java:143: verify: Associated method exit
            return runs;
            ^
./CarReport.java:414: warning: Use a static_initializer clause to specify the values of static final fields: CarReport.View.GONE
        public static final Object GONE = null;
                                   ^
./CarReport.java:637: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:637:) in method getChartData: getChartData
        public Object getChartData(ReportChartOptions options) {
               ^
./CarReport.java:637: verify: Associated declaration: ./CarReport.java:637:
        public Object getChartData(ReportChartOptions options) {
                      ^
./CarReport.java:638: verify: Associated method exit
            return null;
            ^
./CarReport.java:675: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:675:) in method play: play
        public Temporal play(Object ofFloat) {
               ^
./CarReport.java:675: verify: Associated declaration: ./CarReport.java:675:
        public Temporal play(Object ofFloat) {
                        ^
./CarReport.java:676: verify: Associated method exit
            return null;
            ^
./CarReport.java:713: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:713:) in method getContext: getContext
        public static Utils getContext() {
                      ^
./CarReport.java:713: verify: Associated declaration: ./CarReport.java:713:
        public static Utils getContext() {
                            ^
./CarReport.java:714: verify: Associated method exit
            return null;
            ^
./CarReport.java:561: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:561:) in method create: create
        public Builder create() {
               ^
./CarReport.java:561: verify: Associated declaration: ./CarReport.java:561:
        public Builder create() {
                       ^
./CarReport.java:562: verify: Associated method exit
            return null;
            ^
./CarReport.java:557: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:557:) in method setItems: setItems
        public Builder setItems(String[] carNames, DialogInterface.OnClickListener onClickListener) {
               ^
./CarReport.java:557: verify: Associated declaration: ./CarReport.java:557:
        public Builder setItems(String[] carNames, DialogInterface.OnClickListener onClickListener) {
                       ^
./CarReport.java:558: verify: Associated method exit
            return null;
            ^
./CarReport.java:581: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:581:) in method getName: getName
        public String getName() {
               ^
./CarReport.java:581: verify: Associated declaration: ./CarReport.java:581:
        public String getName() {
                      ^
./CarReport.java:582: verify: Associated method exit
            return null;
            ^
./CarReport.java:571: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:571:) in method suspendedSince: suspendedSince
        public View suspendedSince(Date date) {
               ^
./CarReport.java:571: verify: Associated declaration: ./CarReport.java:571:
        public View suspendedSince(Date date) {
                    ^
./CarReport.java:572: verify: Associated method exit
            return null;
            ^
./CarReport.java:25: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method downloadFile: (Caller: CarReport.downloadFile(), Callee: java.lang.String.charAt(int))
    private ComboLineColumnChartView mCurrentFullScreenChart;
                                   ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./CarReport.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./CarReport.java:23: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method downloadFile: (Caller: CarReport.downloadFile(), Callee: java.lang.String.charAt(int))
    private EditText mEdtUrl;
                       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./CarReport.java:23:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./CarReport.java:253: verify: The prover cannot establish an assertion (NullFormal: /home/mkellogg/openjml/specs/java/io/File.jml:29:) in method downloadFile: arg1 in File(java.lang.String,java.lang.String)
        File tempFile = new File(Application.getContext().getCacheDir(), getClass().getSimpleName());
                                                                                                 ^
/home/mkellogg/openjml/specs/java/io/File.jml:29: verify: Associated declaration: ./CarReport.java:253:
    /*@ pure*/ public File(/*@ nullable*/ String parent, /*@ non_null*/ String child);
                                                             ^
./CarReport.java:255: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method downloadFile: outputStream
        FileOutputStream outputStream = null;
                         ^
./CarReport.java:23: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method copyFile: (Caller: CarReport.FileCopyUtil.copyFile(java.io.File,java.io.File), Callee: java.lang.String.charAt(int))
    private EditText mEdtUrl;
                       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./CarReport.java:23:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./CarReport.java:719: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:23:) in method copyFile: (Parameter: tempFile, Caller: CarReport.FileCopyUtil.copyFile(java.io.File,java.io.File), Callee: java.lang.String.charAt(int))
        public static boolean copyFile(File tempFile, File localFile) {
                                            ^
/home/mkellogg/openjml/specs/java/io/File.jml:23: verify: Associated declaration: ./CarReport.java:719:
    //@ public invariant pathSeparator.length() == 1 && pathSeparator.charAt(0) == pathSeparatorChar;
               ^
./CarReport.java:25: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method copyFile: (Caller: CarReport.FileCopyUtil.copyFile(java.io.File,java.io.File), Callee: java.lang.String.charAt(int))
    private ComboLineColumnChartView mCurrentFullScreenChart;
                                   ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./CarReport.java:25:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./CarReport.java:719: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/File.jml:24:) in method copyFile: (Parameter: tempFile, Caller: CarReport.FileCopyUtil.copyFile(java.io.File,java.io.File), Callee: java.lang.String.charAt(int))
        public static boolean copyFile(File tempFile, File localFile) {
                                            ^
/home/mkellogg/openjml/specs/java/io/File.jml:24: verify: Associated declaration: ./CarReport.java:719:
    //@ public invariant separator.length() == 1 && separator.charAt(0) == separatorChar;
               ^
./CarReport.java:516: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:516:) in method findViewById: findViewById
    private View findViewById(Object edt_url) {
            ^
./CarReport.java:516: verify: Associated declaration: ./CarReport.java:516:
    private View findViewById(Object edt_url) {
                 ^
./CarReport.java:517: verify: Associated method exit
        return null;
        ^
./CarReport.java:351: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:351:) in method id: id
        public FuelTypeSelection id(Object id) {
               ^
./CarReport.java:351: verify: Associated declaration: ./CarReport.java:351:
        public FuelTypeSelection id(Object id) {
                                 ^
./CarReport.java:352: verify: Associated method exit
            return null;
            ^
./CarReport.java:308: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:308:) in method getActivity: getActivity
    private Save getActivity() {
            ^
./CarReport.java:308: verify: Associated declaration: ./CarReport.java:308:
    private Save getActivity() {
                 ^
./CarReport.java:309: verify: Associated method exit
        return null;
        ^
./CarReport.java:598: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:598:) in method getContentResolver: getContentResolver
    private Object getContentResolver() {
            ^
./CarReport.java:598: verify: Associated declaration: ./CarReport.java:598:
    private Object getContentResolver() {
                   ^
./CarReport.java:599: verify: Associated method exit
        return null;
        ^
./CarReport.java:304: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:304:) in method getContext: getContext
    private Save getContext() {
            ^
./CarReport.java:304: verify: Associated declaration: ./CarReport.java:304:
    private Save getContext() {
                 ^
./CarReport.java:305: verify: Associated method exit
        return null;
        ^
./CarReport.java:606: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:606:) in method getDetailActivityIntent: getDetailActivityIntent
    private Intent getDetailActivityIntent(int edit, long carId, int otherType) {
            ^
./CarReport.java:606: verify: Associated declaration: ./CarReport.java:606:
    private Intent getDetailActivityIntent(int edit, long carId, int otherType) {
                   ^
./CarReport.java:607: verify: Associated method exit
        return null;
        ^
./CarReport.java:284: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:284:) in method getLocalFile: getLocalFile
    private File getLocalFile() {
            ^
./CarReport.java:284: verify: Associated declaration: ./CarReport.java:284:
    private File getLocalFile() {
                 ^
./CarReport.java:285: verify: Associated method exit
        return null;
        ^
./CarReport.java:288: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:288:) in method getResources: getResources
    private View getResources() {
            ^
./CarReport.java:288: verify: Associated declaration: ./CarReport.java:288:
    private View getResources() {
                 ^
./CarReport.java:289: verify: Associated method exit
        return null;
        ^
./CarReport.java:292: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:292:) in method getView: getView
    private ComboLineColumnChartView getView() {
            ^
./CarReport.java:292: verify: Associated declaration: ./CarReport.java:292:
    private ComboLineColumnChartView getView() {
                                     ^
./CarReport.java:293: verify: Associated method exit
        return null;
        ^
./CarReport.java:504: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:504:) in method getWindow: getWindow
    private View getWindow() {
            ^
./CarReport.java:504: verify: Associated declaration: ./CarReport.java:504:
    private View getWindow() {
                 ^
./CarReport.java:505: verify: Associated method exit
        return null;
        ^
./CarReport.java:170: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method onClick
                            Intent intent = getDetailActivityIntent(edit, carIds[which], otherType);
                                                                                ^
./CarReport.java:170: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method onClick
                            Intent intent = getDetailActivityIntent(edit, carIds[which], otherType);
                                                                                ^
error: An error while executing a proof script for handleFABClick: (error "line 7682 column 41: unknown constant <anonymous CarReport$2>___heap___0")
  >>>(define-fun BL_0_else_29__A24 () Bool (= |<anonymous CarReport$2>___heap___0| |<anonymous CarReport$2>__heap___0_0___24|))
./CarReport.java:300: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:300:) in method loadReportChartOptions: loadReportChartOptions
    private ReportChartOptions loadReportChartOptions(Object context, AbstractReport report) {
            ^
./CarReport.java:300: verify: Associated declaration: ./CarReport.java:300:
    private ReportChartOptions loadReportChartOptions(Object context, AbstractReport report) {
                               ^
./CarReport.java:301: verify: Associated method exit
        return null;
        ^
./CarReport.java:685: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:685:) in method ofFloat: ofFloat
        public static TemporalAdjuster ofFloat(ComboLineColumnChartView mFullScreenChartHolder, Object y, Object top, Object top1) {
                      ^
./CarReport.java:685: verify: Associated declaration: ./CarReport.java:685:
        public static TemporalAdjuster ofFloat(ComboLineColumnChartView mFullScreenChartHolder, Object y, Object top, Object top1) {
                                       ^
./CarReport.java:686: verify: Associated method exit
            return null;
            ^
./CarReport.java:384: verify: The prover cannot establish an assertion (NullField) in method R
        public Object edt_url;
                      ^
./CarReport.java:646: verify: The prover cannot establish an assertion (NullField) in method Rect
        public Object left;
                      ^
./CarReport.java:58: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method isValid
                return !mOtherFuelTypeNames.contains(name);
                                           ^
./CarReport.java:58: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method isValid: (Caller: CarReport.1.isValid(), Callee: java.util.List.contains(java.lang.Object))
                return !mOtherFuelTypeNames.contains(name);
                                                    ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./CarReport.java:58:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./CarReport.java:54: verify: The prover cannot establish an assertion (Precondition: ./CarReport.java:54:) in method save
        validator.add(new AbstractFormFieldValidator(mEdtName) {
                      ^
./CarReport.java:54: verify: Associated declaration: ./CarReport.java:54:
        validator.add(new AbstractFormFieldValidator(mEdtName) {
                                                               ^
./CarReport.java:376: verify: Precondition conjunct is false: mEdtName != null
        public AbstractFormFieldValidator(Save mEdtName) {
                                               ^
./CarReport.java:54: verify: The prover cannot establish an assertion (NullFormal: ./CarReport.java:54:) in method save: mEdtName in (CarReport.Save)
        validator.add(new AbstractFormFieldValidator(mEdtName) {
                                                     ^
./CarReport.java:54: verify: Associated declaration: ./CarReport.java:54:
        validator.add(new AbstractFormFieldValidator(mEdtName) {
                                                               ^
./CarReport.java:66: verify: The prover cannot establish an assertion (NullFormal: ./CarReport.java:371:) in method save: mEdtName in FormFieldNotEmptyValidator(CarReport.Save)
        validator.add(new FormFieldNotEmptyValidator(mEdtCategory));
                                                     ^
./CarReport.java:371: verify: Associated declaration: ./CarReport.java:66:
        public FormFieldNotEmptyValidator(Save mEdtName) {
                                          ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: The prover cannot establish an assertion (Invariant) in method save
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./CarReport.java:315: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:315:) in method getContentResolver: getContentResolver
        public Save getContentResolver() {
               ^
./CarReport.java:315: verify: Associated declaration: ./CarReport.java:315:
        public Save getContentResolver() {
                    ^
./CarReport.java:316: verify: Associated method exit
            return null;
            ^
./CarReport.java:319: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:319:) in method getId: getId
        public Object getId() {
               ^
./CarReport.java:319: verify: Associated declaration: ./CarReport.java:319:
        public Object getId() {
                      ^
./CarReport.java:320: verify: Associated method exit
            return null;
            ^
./CarReport.java:323: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:323:) in method getText: getText
        public Object getText() {
               ^
./CarReport.java:323: verify: Associated declaration: ./CarReport.java:323:
        public Object getText() {
                      ^
./CarReport.java:324: verify: Associated method exit
            return null;
            ^
./CarReport.java:114: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method afterTextChanged
                    mTxtTrustCertificate.setVisibility(View.GONE);
                                        ^
./CarReport.java:115: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method afterTextChanged
                    mChkTrustCertificate.setChecked(false);
                                        ^
error: An error while executing a proof script for onCreate: (error "line 5676 column 41: unknown constant <anonymous CarReport$SetupWebDavSyncDial176757429")
  >>>(define-fun BL_2_else_50__A18 () Bool (= |<anonymous CarReport$SetupWebDavSyncDial176757429| |<anonymous CarReport$SetupWebDavSyncDial1562192593|))
./CarReport.java:240: verify: The prover cannot establish an assertion (PossiblyNullAssignment) in method onAnimationEnd
                mFullScreenChartAnimator = null;
                                         ^
error: An error while executing a proof script for showFullScreenChart: (error "line 8314 column 41: unknown constant <anonymous CarReport$2>___heap___0")
  >>>(define-fun BL_0_else_56__A27 () Bool (= |<anonymous CarReport$2>___heap___0| |<anonymous CarReport$2>__heap___0_7788__-2144594926|))
./CarReport.java:87: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:87:) in method getCacheDir: getCacheDir
        public String getCacheDir() {
               ^
./CarReport.java:87: verify: Associated declaration: ./CarReport.java:87:
        public String getCacheDir() {
                      ^
./CarReport.java:88: verify: Associated method exit
            return null;
            ^
./CarReport.java:422: verify: The prover cannot establish an assertion (NullField) in method View
        public Object activity_setup_webdav_sync;
                      ^
./CarReport.java:462: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:462:) in method download: download
        public View download(String s) {
               ^
./CarReport.java:462: verify: Associated declaration: ./CarReport.java:462:
        public View download(String s) {
                    ^
./CarReport.java:463: verify: Associated method exit
            return null;
            ^
./CarReport.java:466: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:466:) in method download: download
        public View download(FileOutputStream outputStream) {
               ^
./CarReport.java:466: verify: Associated declaration: ./CarReport.java:466:
        public View download(FileOutputStream outputStream) {
                    ^
./CarReport.java:467: verify: Associated method exit
            return null;
            ^
./CarReport.java:458: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:458:) in method files: files
        public View files() throws NetworkIOException, DbxException {
               ^
./CarReport.java:458: verify: Associated declaration: ./CarReport.java:458:
        public View files() throws NetworkIOException, DbxException {
                    ^
./CarReport.java:459: verify: Associated method exit
            return null;
            ^
./CarReport.java:454: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:454:) in method getInteger: getInteger
        public View getInteger(Object config_longAnimTime) {
               ^
./CarReport.java:454: verify: Associated declaration: ./CarReport.java:454:
        public View getInteger(Object config_longAnimTime) {
                    ^
./CarReport.java:455: verify: Associated method exit
            return null;
            ^
./CarReport.java:442: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./CarReport.java:442:) in method query: query
        public CarCursor query(Object contentResolver, Object allColumns, String s) {
               ^
./CarReport.java:442: verify: Associated declaration: ./CarReport.java:442:
        public CarCursor query(Object contentResolver, Object allColumns, String s) {
                         ^
./CarReport.java:443: verify: Associated method exit
            return null;
            ^
./weka/estimators/EstimatorUtils.java:60: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method getMinMax: instance
    Instance instance = null;
             ^
./weka/estimators/EstimatorUtils.java:99: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./weka/estimators/EstimatorUtils.java:99:) in method enumerateInstances: enumerateInstances
    public Enumeration<Instance> enumerateInstances() {
                      ^
./weka/estimators/EstimatorUtils.java:99: verify: Associated declaration: ./weka/estimators/EstimatorUtils.java:99:
    public Enumeration<Instance> enumerateInstances() {
                                 ^
./weka/estimators/EstimatorUtils.java:100: verify: Associated method exit
      return null;
      ^
warning: Use a static_initializer clause to specify the values of static final fields: java.awt.Component.LOCK
/home/mkellogg/openjml/specs/java/awt/event/MouseMotionListener.jml:9: error: There is no binary class to match this Java declaration in the specification file: java.awt.event.MouseMotionListener
public interface MouseMotionListener extends java.util.EventListener {
       ^
/home/mkellogg/openjml/specs/java/awt/event/MouseListener.jml:9: error: There is no binary class to match this Java declaration in the specification file: java.awt.event.MouseListener
public interface MouseListener extends java.util.EventListener {
       ^
/home/mkellogg/openjml/specs/java/awt/event/FocusListener.jml:9: error: There is no binary class to match this Java declaration in the specification file: java.awt.event.FocusListener
public interface FocusListener extends java.util.EventListener {
       ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:65: verify: The prover cannot establish an assertion (Assignable: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void runAll() {
                ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:65:
      @Override
            ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:72: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method actionPerformed
        if (m_evaluationMetrics.size() > 0) {
                               ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:71: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
   * Handles the various button clicking type activities.
                                 ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:71:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:83: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
      for (int i = 0; i < m_Listeners.size(); i++) {
                                   ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:83:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:83: verify: The prover cannot establish an assertion (Assignable: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
      for (int i = 0; i < m_Listeners.size(); i++) {
                                   ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:83:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:73: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
   * @param e a value of type 'ActionEvent'
       ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:73:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:65: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void runAll() {
                ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:65:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:80: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
      selectProperty();
    ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:80:
      @Override
            ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:75: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method actionPerformed: (Caller: weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.1.actionPerformed(java.awt.event.ActionEvent), Callee: java.lang.StringBuilder.append(java.lang.String))
            b.append(s).append(",");
                     ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:75:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void actionPerformed(ActionEvent e) {
                ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void actionPerformed(ActionEvent e) {
                ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void actionPerformed(ActionEvent e) {
                          ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
  public void actionPerformed(ActionEvent e) {
                          ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:77:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:81: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
    } else if (e.getSource() == m_StatusBox) {
                                 ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:81:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:81: verify: The prover cannot establish an assertion (Assignable: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
    } else if (e.getSource() == m_StatusBox) {
                                 ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:81:
      @Override
            ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:78: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method actionPerformed
          m_cpe.setEvaluationMetricsToOutput(newList);
               ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:86: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
          ActionEvent.ACTION_PERFORMED, "Editor status change"));
                                                          ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:86:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:86: verify: The prover cannot establish an assertion (Assignable: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
          ActionEvent.ACTION_PERFORMED, "Editor status change"));
                                                          ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:86:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:89: verify: The prover cannot establish an assertion (Accessible: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
      // Toggles whether the custom property is used
                                             ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:89:
      @Override
            ^
./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:89: verify: The prover cannot establish an assertion (Assignable: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:85:) in method actionPerformed: \everything
      // Toggles whether the custom property is used
                                             ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:87: verify: Associated declaration: ./weka/gui/experiment/GeneratorPropertyIteratorPanel.java:89:
      @Override
            ^
./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:62: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method addButtons: (Caller: weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.addButtons(), Callee: java.awt.Container.add(java.awt.Component,java.lang.Object))
    add(butHolder, BorderLayout.SOUTH);
                   ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./weka/gui/beans/ClassifierPerformanceEvaluatorCustomizer.java:62:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
warning: Use a static_initializer clause to specify the values of static final fields: java.awt.Component.LOCK
./weka/gui/beans/ModelPerformanceChart.java:122: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./weka/gui/beans/ModelPerformanceChart.java:122:) in method getBeanContext: getBeanContext
  public BeanContext getBeanContext() {
         ^
./weka/gui/beans/ModelPerformanceChart.java:122: verify: Associated declaration: ./weka/gui/beans/ModelPerformanceChart.java:122:
  public BeanContext getBeanContext() {
                     ^
./weka/gui/beans/ModelPerformanceChart.java:123: verify: Associated method exit
    return null;
    ^
./weka/gui/beans/ModelPerformanceChart.java:90: verify: The prover cannot establish an assertion (Assignable) in method windowClosing: m_framePoppedUp
              m_framePoppedUp = false;
                              ^
./weka/gui/beans/ModelPerformanceChart.java:74: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
  public void performRequest(String request) {
              ^
./SpringBatch.java:18: verify: The prover cannot establish an assertion (NullField) in method SpringBatch
    private Bean container;
                 ^
./SpringBatch.java:255: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:255:) in method createItemWriter: createItemWriter
    private ItmWriter createItemWriter() {
            ^
./SpringBatch.java:255: verify: Associated declaration: ./SpringBatch.java:255:
    private ItmWriter createItemWriter() {
                      ^
./SpringBatch.java:256: verify: Associated method exit
        return null;
        ^
./SpringBatch.java:383: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:383:) in method getConnection: getConnection
        public Connection getConnection() {
               ^
./SpringBatch.java:383: verify: Associated declaration: ./SpringBatch.java:383:
        public Connection getConnection() {
                          ^
./SpringBatch.java:384: verify: Associated method exit
            return null;
            ^
./SpringBatch.java:259: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:259:) in method getInputResource: getInputResource
    private Resource getInputResource(String s) {
            ^
./SpringBatch.java:259: verify: Associated declaration: ./SpringBatch.java:259:
    private Resource getInputResource(String s) {
                     ^
./SpringBatch.java:260: verify: Associated method exit
        return null;
        ^
./SpringBatch.java:230: verify: The prover cannot establish an assertion (Accessible) in method write: \everything
                    throw new RuntimeException(e);
                          ^
./SpringBatch.java:244: verify: The prover cannot establish an assertion (Accessible) in method write: \everything
                    throw new RuntimeException(e);
                          ^
error: An error while executing a proof script for initWriterForSimpleCallbackTests: (error "line 6424 column 41: unknown constant <anonymous SpringBatch$4>___heap___0")
  >>>(define-fun BL_0_else_26__A27 () Bool (= |<anonymous SpringBatch$4>___heap___0| |<anonymous SpringBatch$4>__heap___0_0___-1875603421|))
./SpringBatch.java:288: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:288:) in method getExitStatus: getExitStatus
        public String getExitStatus() {
               ^
./SpringBatch.java:288: verify: Associated declaration: ./SpringBatch.java:288:
        public String getExitStatus() {
                      ^
./SpringBatch.java:289: verify: Associated method exit
            return null;
            ^
./SpringBatch.java:328: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:328:) in method getJMSMessageID: getJMSMessageID
        public Object getJMSMessageID() {
               ^
./SpringBatch.java:328: verify: Associated declaration: ./SpringBatch.java:328:
        public Object getJMSMessageID() {
                      ^
./SpringBatch.java:329: verify: Associated method exit
            return null;
            ^
./SpringBatch.java:324: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:324:) in method getText: getText
        public Object getText() {
               ^
./SpringBatch.java:324: verify: Associated declaration: ./SpringBatch.java:324:
        public Object getText() {
                      ^
./SpringBatch.java:325: verify: Associated method exit
            return null;
            ^
./SpringBatch.java:283: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:283:) in method runJob: runJob
    private JobExecution runJob(String jsrUniqueInstanceTests, Properties properties, long l) {
            ^
./SpringBatch.java:283: verify: Associated declaration: ./SpringBatch.java:283:
    private JobExecution runJob(String jsrUniqueInstanceTests, Properties properties, long l) {
                         ^
./SpringBatch.java:284: verify: Associated method exit
        return null;
        ^
./SpringBatch.java:193: verify: The prover cannot establish an assertion (Assignable) in method isEndOfRecord: pair
                    pair = !pair;
                         ^
./SpringBatch.java:199: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:199:) in method postProcess: postProcess
            public String postProcess(String record) {
                   ^
./SpringBatch.java:199: verify: Associated declaration: ./SpringBatch.java:199:
            public String postProcess(String record) {
                          ^
./SpringBatch.java:200: verify: Associated method exit
                return StringUtils.hasText(record) ? record : null;
                ^
error: An error while executing a proof script for testCustomRecordSeparatorMultilineBlankLineAfterEnd: (error "line 7458 column 41: unknown constant <anonymous SpringBatch$2>___heap___0")
  >>>(define-fun BL_0_else_92__A15 () Bool (= |<anonymous SpringBatch$2>___heap___0| |<anonymous SpringBatch$2>__heap___0_7835631797294|))
./SpringBatch.java:73: verify: The prover cannot establish an assertion (PossiblyBadCast) in method doWithRetry: a SpringBatch.Message cannot be proved to be a SpringBatch.TextMessage
                                processed.add(((TextMessage) msg).getText());
                                               ^
./SpringBatch.java:73: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method doWithRetry
                                processed.add(((TextMessage) msg).getText());
                                                                 ^
./SpringBatch.java:85: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method recover
                                recovered.add(((TextMessage) msg).getText());
                                                                 ^
./SpringBatch.java:85: verify: The prover cannot establish an assertion (PossiblyBadCast) in method recover: a SpringBatch.Message cannot be proved to be a SpringBatch.TextMessage
                                recovered.add(((TextMessage) msg).getText());
                                               ^
error: An error while executing a proof script for onMessage: (error "line 3518 column 45: unknown constant <anonymous SpringBatch$1$1>___heap___0")
  >>>(define-fun BL_2514_throw_74__A22 () Bool (= |<anonymous SpringBatch$1$1>___heap___0| |<anonymous SpringBatch$1$1>__heap___0_251231005474|))
./SpringBatch.java:65: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method testFailureAndRecovery
        container.setMessageListener(new MessageListener() {
                 ^
./SpringBatch.java:103: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method testFailureAndRecovery
        assertEquals("foo", processed.poll(5, TimeUnit.SECONDS));
                                     ^
./SpringBatch.java:102: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method testFailureAndRecovery
        jmsTemplate.convertAndSend("queue", "foo");
                   ^
./SpringBatch.java:167: verify: The prover cannot establish an assertion (PossiblyNullAssignment) in method testOperationWithDirectCloseCall
        con1_1 = null;
               ^
./SpringBatch.java:348: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:348:) in method poll: poll
        public Object poll(int i, TimeUnit seconds) {
               ^
./SpringBatch.java:348: verify: Associated declaration: ./SpringBatch.java:348:
        public Object poll(int i, TimeUnit seconds) {
                      ^
./SpringBatch.java:349: verify: Associated method exit
            return null;
            ^
./SpringBatch.java:271: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./SpringBatch.java:271:) in method when: when
    private Returner when(Connection connection) {
            ^
./SpringBatch.java:271: verify: Associated declaration: ./SpringBatch.java:271:
    private Returner when(Connection connection) {
                     ^
./SpringBatch.java:272: verify: Associated method exit
        return null;
        ^
./HibernateORM.java:352: warning: Use a static_initializer clause to specify the values of static final fields: HibernateORM.StandardBasicTypes.STRING
        public static final Object STRING = null;
                                   ^
./HibernateORM.java:299: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method collectionInfoString: (Caller: HibernateORM.collectionInfoString(HibernateORM.CollectionPersister,HibernateORM.PersistentCollection,java.io.Serializable,HibernateORM.SharedSessionContractImplementor), Callee: java.lang.StringBuilder.append(char[]))
            s.append( persister.getRole() );
                    ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./HibernateORM.java:299:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./HibernateORM.java:90: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:90:) in method getIdentifierType: getIdentifierType
        public Type getIdentifierType() {
               ^
./HibernateORM.java:90: verify: Associated declaration: ./HibernateORM.java:90:
        public Type getIdentifierType() {
                    ^
./HibernateORM.java:91: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:86: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:86:) in method getOwnerEntityPersister: getOwnerEntityPersister
        public CollectionPersister getOwnerEntityPersister() {
               ^
./HibernateORM.java:86: verify: Associated declaration: ./HibernateORM.java:86:
        public CollectionPersister getOwnerEntityPersister() {
                                   ^
./HibernateORM.java:87: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:112: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:112:) in method getId: getId
        public Serializable getId() {
               ^
./HibernateORM.java:112: verify: Associated declaration: ./HibernateORM.java:112:
        public Serializable getId() {
                            ^
./HibernateORM.java:113: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:404: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:404:) in method convert: convert
        public Exception convert(SQLException e, String s, String idInsertSelect) {
               ^
./HibernateORM.java:404: verify: Associated declaration: ./HibernateORM.java:404:
        public Exception convert(SQLException e, String s, String idInsertSelect) {
                         ^
./HibernateORM.java:405: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:407: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:407:) in method convert: convert
        public Exception convert(SQLException e, String s, Update idInsertSelect) {
               ^
./HibernateORM.java:407: verify: Associated declaration: ./HibernateORM.java:407:
        public Exception convert(SQLException e, String s, Update idInsertSelect) {
                         ^
./HibernateORM.java:408: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:423: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:423:) in method convert: convert
        public Object convert(long l, Object nanoseconds) {
               ^
./HibernateORM.java:423: verify: Associated declaration: ./HibernateORM.java:423:
        public Object convert(long l, Object nanoseconds) {
                      ^
./HibernateORM.java:424: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:415: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:415:) in method extract: extract
        public ResultSet extract(PreparedStatement query) {
               ^
./HibernateORM.java:415: verify: Associated declaration: ./HibernateORM.java:415:
        public ResultSet extract(PreparedStatement query) {
                         ^
./HibernateORM.java:416: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:419: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:419:) in method getEntry: getEntry
        public EntityEntry getEntry(Object collectionOwner) {
               ^
./HibernateORM.java:419: verify: Associated declaration: ./HibernateORM.java:419:
        public EntityEntry getEntry(Object collectionOwner) {
                           ^
./HibernateORM.java:420: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:380: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:380:) in method getLogicalConnection: getLogicalConnection
        public Environment getLogicalConnection() {
               ^
./HibernateORM.java:380: verify: Associated declaration: ./HibernateORM.java:380:
        public Environment getLogicalConnection() {
                           ^
./HibernateORM.java:381: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:392: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:392:) in method getResourceRegistry: getResourceRegistry
        public Environment getResourceRegistry() {
               ^
./HibernateORM.java:392: verify: Associated declaration: ./HibernateORM.java:392:
        public Environment getResourceRegistry() {
                           ^
./HibernateORM.java:393: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:384: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:384:) in method getResultSetReturn: getResultSetReturn
        public Environment getResultSetReturn() {
               ^
./HibernateORM.java:384: verify: Associated declaration: ./HibernateORM.java:384:
        public Environment getResultSetReturn() {
                           ^
./HibernateORM.java:385: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:400: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:400:) in method getSqlExceptionHelper: getSqlExceptionHelper
        public Environment getSqlExceptionHelper() {
               ^
./HibernateORM.java:400: verify: Associated declaration: ./HibernateORM.java:400:
        public Environment getSqlExceptionHelper() {
                           ^
./HibernateORM.java:401: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:364: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:364:) in method getStatementPreparer: getStatementPreparer
        public Environment getStatementPreparer() {
               ^
./HibernateORM.java:364: verify: Associated declaration: ./HibernateORM.java:364:
        public Environment getStatementPreparer() {
                           ^
./HibernateORM.java:365: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:368: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:368:) in method prepareStatement: prepareStatement
        public PreparedStatement prepareStatement(String idInsertSelect, boolean b) {
               ^
./HibernateORM.java:368: verify: Associated declaration: ./HibernateORM.java:368:
        public PreparedStatement prepareStatement(String idInsertSelect, boolean b) {
                                 ^
./HibernateORM.java:369: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:372: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:372:) in method prepareStatement: prepareStatement
        public PreparedStatement prepareStatement(Update idInsertSelect, boolean b) {
               ^
./HibernateORM.java:372: verify: Associated declaration: ./HibernateORM.java:372:
        public PreparedStatement prepareStatement(Update idInsertSelect, boolean b) {
                                 ^
./HibernateORM.java:373: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:411: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:411:) in method prepareStatement: prepareStatement
        public PreparedStatement prepareStatement(Update queryString) {
               ^
./HibernateORM.java:411: verify: Associated declaration: ./HibernateORM.java:411:
        public PreparedStatement prepareStatement(Update queryString) {
                                 ^
./HibernateORM.java:412: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:166: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method execute: ps
            PreparedStatement ps = null;
                              ^
./HibernateORM.java:248: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method execute: session
                Session session = (Session) sessionImpl;
                        ^
./HibernateORM.java:253: verify: The prover cannot establish an assertion (NullFormal: ./HibernateORM.java:411:) in method execute: queryString in prepareStatement(HibernateORM.Update)
                            .prepareStatement( queryString );
                                               ^
./HibernateORM.java:411: verify: Associated declaration: ./HibernateORM.java:253:
        public PreparedStatement prepareStatement(Update queryString) {
                                                  ^
./HibernateORM.java:265: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method execute: underflow in long difference
                    value--;
                         ^
./HibernateORM.java:9: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private String idInsertSelect;
                   ^
./HibernateORM.java:8: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private Update[] updates;
                     ^
./HibernateORM.java:7: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private Object targetedPersister;
                   ^
./HibernateORM.java:12: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private Update queryString;
                   ^
./HibernateORM.java:11: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private ParameterSpecification[][] assignmentParameterSpecifications;
                                       ^
./HibernateORM.java:10: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private ParameterSpecification[] idSelectParameterSpecifications;
                                     ^
./HibernateORM.java:13: verify: The prover cannot establish an assertion (NullField) in method extractSequenceValue
    private Object dialect;
                   ^
./HibernateORM.java:433: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:433:) in method getDefaultProperties: getDefaultProperties
    private Environment getDefaultProperties() {
            ^
./HibernateORM.java:433: verify: Associated declaration: ./HibernateORM.java:433:
    private Environment getDefaultProperties() {
                        ^
./HibernateORM.java:434: verify: Associated method exit
        return null;
        ^
./HibernateORM.java:346: verify: The prover cannot establish an assertion (InvariantExceptionExit: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method NoArgSQLFunction: HibernateORM.NoArgSQLFunction.NoArgSQLFunction(java.lang.String,java.lang.Object,boolean) (parameter sysdate)
        public NoArgSQLFunction(String sysdate, Object p1, boolean b) {
                                       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./HibernateORM.java:346:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./HibernateORM.java:346: verify: The prover cannot establish an assertion (InvariantExit: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method NoArgSQLFunction: HibernateORM.NoArgSQLFunction.NoArgSQLFunction(java.lang.String,java.lang.Object,boolean) (parameter sysdate)
        public NoArgSQLFunction(String sysdate, Object p1, boolean b) {
                                       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./HibernateORM.java:346:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./HibernateORM.java:96: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:96:) in method getOwner: getOwner
        public Object getOwner() {
               ^
./HibernateORM.java:96: verify: Associated declaration: ./HibernateORM.java:96:
        public Object getOwner() {
                      ^
./HibernateORM.java:97: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:498: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:498:) in method beginTransaction: beginTransaction
        public Transaction beginTransaction() {
               ^
./HibernateORM.java:498: verify: Associated declaration: ./HibernateORM.java:498:
        public Transaction beginTransaction() {
                           ^
./HibernateORM.java:499: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:463: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:463:) in method getJdbcCoordinator: getJdbcCoordinator
        public Environment getJdbcCoordinator() {
               ^
./HibernateORM.java:463: verify: Associated declaration: ./HibernateORM.java:463:
        public Environment getJdbcCoordinator() {
                           ^
./HibernateORM.java:464: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:454: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:454:) in method getFactory: getFactory
        public Object getFactory() {
               ^
./HibernateORM.java:454: verify: Associated declaration: ./HibernateORM.java:454:
        public Object getFactory() {
                      ^
./HibernateORM.java:455: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:442: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:442:) in method getJdbcCoordinator: getJdbcCoordinator
        public Environment getJdbcCoordinator() {
               ^
./HibernateORM.java:442: verify: Associated declaration: ./HibernateORM.java:442:
        public Environment getJdbcCoordinator() {
                           ^
./HibernateORM.java:443: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:446: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:446:) in method getJdbcServices: getJdbcServices
        public Environment getJdbcServices() {
               ^
./HibernateORM.java:446: verify: Associated declaration: ./HibernateORM.java:446:
        public Environment getJdbcServices() {
                           ^
./HibernateORM.java:447: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:450: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:450:) in method getPersistenceContext: getPersistenceContext
        public Environment getPersistenceContext() {
               ^
./HibernateORM.java:450: verify: Associated declaration: ./HibernateORM.java:450:
        public Environment getPersistenceContext() {
                           ^
./HibernateORM.java:451: verify: Associated method exit
            return null;
            ^
./HibernateORM.java:118: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method TimesTenDialect: (Caller: HibernateORM.TimesTenDialect.TimesTenDialect(), Callee: HibernateORM.Environment.setProperty(java.lang.Object,java.lang.String))
    public class TimesTenDialect extends Dialect {
           ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./HibernateORM.java:118:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./HibernateORM.java:102: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./HibernateORM.java:102:) in method getReturnedClass: getReturnedClass
        public Class<?> getReturnedClass() {
                    ^
./HibernateORM.java:102: verify: Associated declaration: ./HibernateORM.java:102:
        public Class<?> getReturnedClass() {
                        ^
./HibernateORM.java:103: verify: Associated method exit
            return null;
            ^
./Phoenix.java:468: warning: Use a static_initializer clause to specify the values of static final fields: Phoenix.FlumeConstants.CONFIG_TABLE_DDL
        public static final Object CONFIG_TABLE_DDL = null;
                                   ^
./Phoenix.java:544: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:544:) in method getTransaction: getTransaction
        public Transaction getTransaction() {
               ^
./Phoenix.java:544: verify: Associated declaration: ./Phoenix.java:544:
        public Transaction getTransaction() {
                           ^
./Phoenix.java:545: verify: Associated method exit
            return null;
            ^
./Phoenix.java:548: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:548:) in method take: take
        public Event take() {
               ^
./Phoenix.java:548: verify: Associated declaration: ./Phoenix.java:548:
        public Event take() {
                     ^
./Phoenix.java:549: verify: Associated method exit
            return null;
            ^
./Phoenix.java:20: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: com.google.common.base.Preconditions.<T>checkNotNull(T,java.lang.Object))
public class Phoenix {
       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Phoenix.java:20:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Phoenix.java:178: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: org.apache.hbase.thirdparty.com.google.common.base.Splitter.on(java.lang.String))
        for(String s : Splitter.on(DEFAULT_COLUMNS_DELIMITER).split(columnNames)) {
                                   ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Phoenix.java:178:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Phoenix.java:198: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method configure
        logger.debug(" the jdbcUrl configured is {}",jdbcUrl);
              ^
./Phoenix.java:184: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: Antlr4Master.ATNConfigSet.add(java.lang.String))
                headers.add(s);
                            ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Phoenix.java:184:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Phoenix.java:184: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: Antlr4Master.ATNConfigSet.add(java.lang.String))
                headers.add(s);
                           ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./Phoenix.java:184:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./Phoenix.java:179: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/lang/Iterable.jml:10:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: Antlr4Master.ATNConfigSet.add(java.lang.String))
            colNames.add(s);
                        ^
/home/mkellogg/openjml/specs/java/lang/Iterable.jml:10: verify: Associated declaration: ./Phoenix.java:179:
    //-RAC@ public invariant values.length >= 0;  // FIXME - should be implicit? (cf. gitbug686)
                   ^
./Phoenix.java:179: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: Antlr4Master.ATNConfigSet.add(java.lang.String))
            colNames.add(s);
                         ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Phoenix.java:179:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Phoenix.java:184: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method configure
                headers.add(s);
                       ^
./Phoenix.java:199: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method configure: (Caller: Phoenix.configure(Phoenix.Context), Callee: Pom.POSIXHandler.debug(java.lang.String,java.lang.Object))
        logger.debug(" columns configured are {}",colNames.toString());
                     ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./Phoenix.java:199:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./Phoenix.java:179: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method configure
            colNames.add(s);
                    ^
./Phoenix.java:199: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method configure
        logger.debug(" columns configured are {}",colNames.toString());
                                                          ^
./Phoenix.java:198: verify: The prover cannot establish an assertion (NullFormal: ./Pom.java:521:) in method configure: jdbcUrl in debug(java.lang.String,java.lang.Object)
        logger.debug(" the jdbcUrl configured is {}",jdbcUrl);
                                                     ^
./Pom.java:521: verify: Associated declaration: ./Phoenix.java:198:
        public void debug(String s, Object jdbcUrl) {
                                    ^
./Phoenix.java:193: verify: The prover cannot establish an assertion (PossiblyNullDeReference) in method configure
                logger.error("An invalid key generator {} was specified in configuration file. Specify one of {}",keyGeneratorType,DefaultKeyGenerator.values());
                      ^
./Phoenix.java:477: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:477:) in method getString: getString
        public String getString(Object configTableDdl) {
               ^
./Phoenix.java:477: verify: Associated declaration: ./Phoenix.java:477:
        public String getString(Object configTableDdl) {
                      ^
./Phoenix.java:478: verify: Associated method exit
            return null;
            ^
./Phoenix.java:493: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:493:) in method valueOf: valueOf
        public static Object valueOf(String toUpperCase) {
                      ^
./Phoenix.java:493: verify: Associated declaration: ./Phoenix.java:493:
        public static Object valueOf(String toUpperCase) {
                             ^
./Phoenix.java:494: verify: Associated method exit
            return null;
            ^
./Phoenix.java:497: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:497:) in method values: values
        public static Object values() {
                      ^
./Phoenix.java:497: verify: Associated declaration: ./Phoenix.java:497:
        public static Object values() {
                             ^
./Phoenix.java:498: verify: Associated method exit
            return null;
            ^
./Phoenix.java:100: verify: The prover cannot establish an assertion (NullFormal: ./Phoenix.java:345:) in method doDropSchema: o in MetaDataMutationResult(java.lang.Object,java.lang.Object,java.lang.Object)
                null);
                ^
./Phoenix.java:345: verify: Associated declaration: ./Phoenix.java:100:
        public MetaDataMutationResult(Object schemaNotFound, Object currentTimeMillis, Object o) {
                                                                                       ^
./Phoenix.java:73: verify: The prover cannot establish an assertion (NullFormal: ./Phoenix.java:456:) in method doDropSchema: o in getKeyForSchema(java.lang.Object,java.lang.String)
            Scan scan = MetaDataUtil.newTableRowsScan(SchemaUtil.getKeyForSchema(null, schemaName), MIN_TABLE_TIMESTAMP,
                                                                                 ^
./Phoenix.java:456: verify: Associated declaration: ./Phoenix.java:73:
        public static Object getKeyForSchema(Object o, String schemaName) {
                                             ^
./Phoenix.java:422: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:422:) in method getRegion: getRegion
        public Region getRegion() {
               ^
./Phoenix.java:422: verify: Associated declaration: ./Phoenix.java:422:
        public Region getRegion() {
                      ^
./Phoenix.java:423: verify: Associated method exit
            return null;
            ^
./Phoenix.java:362: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:362:) in method currentTimeMillis: currentTimeMillis
        public static Object currentTimeMillis() {
                      ^
./Phoenix.java:362: verify: Associated declaration: ./Phoenix.java:362:
        public static Object currentTimeMillis() {
                             ^
./Phoenix.java:363: verify: Associated method exit
            return null;
            ^
./Phoenix.java:137: verify: The prover cannot establish an assertion (PossiblyNegativeSize) in method evaluate
        byte[] resultPtr=new byte[PLong.INSTANCE.getByteSize()];
                                                            ^
./Phoenix.java:134: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method evaluate
        long remainder = dividend % divisor;
                                  ^
./Phoenix.java:385: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:385:) in method getCodec: getCodec
        public Expression getCodec() {
               ^
./Phoenix.java:385: verify: Associated declaration: ./Phoenix.java:385:
        public Expression getCodec() {
                          ^
./Phoenix.java:386: verify: Associated method exit
            return null;
            ^
./Phoenix.java:389: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:389:) in method getDataType: getDataType
        public Expression getDataType() {
               ^
./Phoenix.java:389: verify: Associated declaration: ./Phoenix.java:389:
        public Expression getDataType() {
                          ^
./Phoenix.java:390: verify: Associated method exit
            return null;
            ^
./Phoenix.java:377: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:377:) in method getSortOrder: getSortOrder
        public Object getSortOrder() {
               ^
./Phoenix.java:377: verify: Associated declaration: ./Phoenix.java:377:
        public Object getSortOrder() {
                      ^
./Phoenix.java:378: verify: Associated method exit
            return null;
            ^
./Phoenix.java:280: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:280:) in method getChannel: getChannel
    private Channel getChannel() {
            ^
./Phoenix.java:280: verify: Associated declaration: ./Phoenix.java:280:
    private Channel getChannel() {
                    ^
./Phoenix.java:281: verify: Associated method exit
        return null;
        ^
./Phoenix.java:143: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:143:) in method getDataType: getDataType
    private Expression getDataType() {
            ^
./Phoenix.java:143: verify: Associated declaration: ./Phoenix.java:143:
    private Expression getDataType() {
                       ^
./Phoenix.java:144: verify: Associated method exit
        return null;
        ^
./Phoenix.java:151: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:151:) in method getDividendExpression: getDividendExpression
    private Expression getDividendExpression() {
            ^
./Phoenix.java:151: verify: Associated declaration: ./Phoenix.java:151:
    private Expression getDividendExpression() {
                       ^
./Phoenix.java:152: verify: Associated method exit
        return null;
        ^
./Phoenix.java:147: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:147:) in method getDivisorExpression: getDivisorExpression
    private Expression getDivisorExpression() {
            ^
./Phoenix.java:147: verify: Associated declaration: ./Phoenix.java:147:
    private Expression getDivisorExpression() {
                       ^
./Phoenix.java:148: verify: Associated method exit
        return null;
        ^
./Phoenix.java:340: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:340:) in method getOptions: getOptions
    private Options getOptions() {
            ^
./Phoenix.java:340: verify: Associated declaration: ./Phoenix.java:340:
    private Options getOptions() {
                    ^
./Phoenix.java:341: verify: Associated method exit
        return null;
        ^
./Phoenix.java:104: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:104:) in method loadSchema: loadSchema
    private PSchema loadSchema(Dummy env, byte[] key, ImmutableBytesPtr immutableBytesPtr, long clientTimeStamp, long clientTimeStamp1) {
            ^
./Phoenix.java:104: verify: Associated declaration: ./Phoenix.java:104:
    private PSchema loadSchema(Dummy env, byte[] key, ImmutableBytesPtr immutableBytesPtr, long clientTimeStamp, long clientTimeStamp1) {
                    ^
./Phoenix.java:105: verify: Associated method exit
        return null;
        ^
./Phoenix.java:462: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:462:) in method newTableRowsScan: newTableRowsScan
        public static Scan newTableRowsScan(Object keyForSchema, Object minTableTimestamp, long clientTimeStamp) {
                      ^
./Phoenix.java:462: verify: Associated declaration: ./Phoenix.java:462:
        public static Scan newTableRowsScan(Object keyForSchema, Object minTableTimestamp, long clientTimeStamp) {
                           ^
./Phoenix.java:463: verify: Associated method exit
            return null;
            ^
./Phoenix.java:298: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method parseOptions: cmdLine
        CommandLine cmdLine = null;
                    ^
./Phoenix.java:214: verify: The prover cannot establish an assertion (PossiblyNullInitialization) in method process: transaction
        Transaction transaction = null;
                    ^
./Phoenix.java:487: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:487:) in method getUrl: getUrl
        public static Object getUrl(String zookeeperQuorum) {
                      ^
./Phoenix.java:487: verify: Associated declaration: ./Phoenix.java:487:
        public static Object getUrl(String zookeeperQuorum) {
                             ^
./Phoenix.java:488: verify: Associated method exit
            return null;
            ^
./Phoenix.java:414: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:414:) in method getScanner: getScanner
        public RegionScanner getScanner(Scan scan) {
               ^
./Phoenix.java:414: verify: Associated declaration: ./Phoenix.java:414:
        public RegionScanner getScanner(Scan scan) {
                             ^
./Phoenix.java:415: verify: Associated method exit
            return null;
            ^
./Phoenix.java:456: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./Phoenix.java:456:) in method getKeyForSchema: getKeyForSchema
        public static Object getKeyForSchema(Object o, String schemaName) {
                      ^
./Phoenix.java:456: verify: Associated declaration: ./Phoenix.java:456:
        public static Object getKeyForSchema(Object o, String schemaName) {
                             ^
./Phoenix.java:457: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:605: warning: Use a static_initializer clause to specify the values of static final fields: OpenCMSCore.CmsHtmlIconButtonStyleEnum.SMALL_ICON_TEXT
        public static final Object SMALL_ICON_TEXT = null;
                                   ^
./OpenCMSCore.java:599: verify: Associated declaration: ./OpenCMSCore.java:599:
        public static String defaultButtonHtml(Object smallIconText, String id, CmsWorkplace key, CmsWorkplace key1, boolean enabled, Object iconPath, Object o, String onClic) {
                             ^
./OpenCMSCore.java:600: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:261: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method buttonHtml: (Caller: OpenCMSCore.buttonHtml(OpenCMSCore.CmsWorkplace), Callee: java.lang.String.valueOf(java.lang.Object))
                    + CmsHtmlList.NO_SELECTION_MATCH_HELP_VAR
                      ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./OpenCMSCore.java:261:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./OpenCMSCore.java:273: verify: The prover cannot establish an assertion (NullFormal: ./OpenCMSCore.java:599:) in method buttonHtml: o in defaultButtonHtml(java.lang.Object,java.lang.String,OpenCMSCore.CmsWorkplace,OpenCMSCore.CmsWorkplace,boolean,java.lang.Object,java.lang.Object,java.lang.String)
                    null,
                    ^
./OpenCMSCore.java:599: verify: Associated declaration: ./OpenCMSCore.java:273:
        public static String defaultButtonHtml(Object smallIconText, String id, CmsWorkplace key, CmsWorkplace key1, boolean enabled, Object iconPath, Object o, String onClic) {
                                                                                                                                                       ^
./OpenCMSCore.java:336: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:336:) in method getStaticTypeId: getStaticTypeId
        public static Object getStaticTypeId() {
                      ^
./OpenCMSCore.java:336: verify: Associated declaration: ./OpenCMSCore.java:336:
        public static Object getStaticTypeId() {
                             ^
./OpenCMSCore.java:337: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:342: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:342:) in method getStaticTypeId: getStaticTypeId
        public static Object getStaticTypeId() {
                      ^
./OpenCMSCore.java:342: verify: Associated declaration: ./OpenCMSCore.java:342:
        public static Object getStaticTypeId() {
                             ^
./OpenCMSCore.java:343: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:589: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:589:) in method escapeJavaScript: escapeJavaScript
        public static String escapeJavaScript(Object resolveMacros) {
                      ^
./OpenCMSCore.java:589: verify: Associated declaration: ./OpenCMSCore.java:589:
        public static String escapeJavaScript(Object resolveMacros) {
                             ^
./OpenCMSCore.java:590: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:573: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:573:) in method getLocale: getLocale
        public Object getLocale() {
               ^
./OpenCMSCore.java:573: verify: Associated declaration: ./OpenCMSCore.java:573:
        public Object getLocale() {
                      ^
./OpenCMSCore.java:574: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:577: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:577:) in method resolveMacros: resolveMacros
        public Object resolveMacros(CmsWorkplace key) {
               ^
./OpenCMSCore.java:577: verify: Associated declaration: ./OpenCMSCore.java:577:
        public Object resolveMacros(CmsWorkplace key) {
                      ^
./OpenCMSCore.java:578: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:583: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:583:) in method key: key
        public CmsWorkplace key(Object locale) {
               ^
./OpenCMSCore.java:583: verify: Associated declaration: ./OpenCMSCore.java:583:
        public CmsWorkplace key(Object locale) {
                            ^
./OpenCMSCore.java:584: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:47: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
    public List<A_CmsSitemapMenuEntry> createContextMenu(CmsSitemapHoverbar hoverbar) {
                                       ^
./OpenCMSCore.java:158: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method execute: (Caller: OpenCMSCore.execute(java.io.Reader), Callee: java.lang.String.trim())
                if (line.trim().startsWith("#")) {
                             ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./OpenCMSCore.java:158:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
/home/mkellogg/openjml/specs/java/io/PrintStream.jml:42: verify: The prover cannot establish an assertion (Invariant) in method execute
    //-RAC@ public invariant outputText != null && \invariant_for(outputText);
                   ^
./OpenCMSCore.java:608: verify: The prover cannot establish an assertion (UndefinedCalledMethodPrecondition: /home/mkellogg/openjml/specs/java/lang/String.jml:333:) in method execute
Note: Call stack
  /home/mkellogg/openjml/specs/java/lang/String.jml:985: java.lang.String.charAt
  ./OpenCMSCore.java:158: java.lang.String.trim
/home/mkellogg/openjml/specs/java/lang/String.jml:333: verify: Associated declaration: ./OpenCMSCore.java:608:
    public /*@ pure @*/ char charAt(int index)
                             ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:79: verify: Precondition conjunct is false: 0 <= index < charArray.length
      @      requires 0 <= index < charArray.length;
                                 ^
./OpenCMSCore.java:172: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method execute: (Caller: OpenCMSCore.execute(java.io.Reader), Callee: java.util.List.add(E))
                        parameters.add(st.sval);
                                       ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./OpenCMSCore.java:172:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./OpenCMSCore.java:193: verify: The prover cannot establish an assertion (Precondition: /home/mkellogg/openjml/specs/java/lang/Throwable.jml:198:) in method execute
            t.printStackTrace(m_err);
                             ^
/home/mkellogg/openjml/specs/java/lang/Throwable.jml:198: verify: Associated declaration: ./OpenCMSCore.java:193:
    public void printStackTrace(/*@ non_null*/PrintStream s);
                ^
/home/mkellogg/openjml/specs/java/lang/Throwable.jml:195: verify: Precondition conjunct is false: s.isOpen
    //-RAC@   requires s.isOpen;
                        ^
/home/mkellogg/openjml/specs/java/io/PrintStream.jml:35: verify: The prover cannot establish an assertion (Invariant) in method execute
    //-RAC@ public static invariant \invariant_for(eol) && eol.length() > 0;
                          ^
./OpenCMSCore.java:137: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
    public void execute(Reader reader) {
                ^
./OpenCMSCore.java:223: verify: The prover cannot establish an assertion (InvariantEntrance: /home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30:) in method generateContent: (Caller: OpenCMSCore.generateContent(OpenCMSCore.CmsObject,java.lang.String,int,double), Callee: OpenCMSCore.generateResources(OpenCMSCore.CmsObject,java.lang.String,java.lang.String,int,java.lang.Object,int,double))
                "org/opencms/search/pdf-test-112.pdf",
                ^
/home/mkellogg/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./OpenCMSCore.java:223:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./OpenCMSCore.java:235: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method generateContent: overflow in int difference
                numberOfFiles - numberOfBinaryFiles,
                              ^
./OpenCMSCore.java:235: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method generateContent: underflow in int difference
                numberOfFiles - numberOfBinaryFiles,
                              ^
./OpenCMSCore.java:231: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method generateContent: overflow in int sum
        writtenFiles += generateResources(
                     ^
./OpenCMSCore.java:231: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method generateContent: underflow in int sum
        writtenFiles += generateResources(
                     ^
./OpenCMSCore.java:240: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/PrintStream.jml:42:) in method generateContent: (Caller: OpenCMSCore.generateContent(OpenCMSCore.CmsObject,java.lang.String,int,double), Callee: java.io.PrintStream.println(java.lang.String))
        System.out.println("" + writtenFiles + " files written in Folder " + vfsFolder);
                          ^
/home/mkellogg/openjml/specs/java/io/PrintStream.jml:42: verify: Associated declaration: ./OpenCMSCore.java:240:
    //-RAC@ public invariant outputText != null && \invariant_for(outputText);
                   ^
./OpenCMSCore.java:240: verify: The prover cannot establish an assertion (InvariantLeaveCaller: /home/mkellogg/openjml/specs/java/io/PrintStream.jml:35:) in method generateContent: (Caller: OpenCMSCore.generateContent(OpenCMSCore.CmsObject,java.lang.String,int,double), Callee: java.io.PrintStream.println(java.lang.String))
        System.out.println("" + writtenFiles + " files written in Folder " + vfsFolder);
                          ^
/home/mkellogg/openjml/specs/java/io/PrintStream.jml:35: verify: Associated declaration: ./OpenCMSCore.java:240:
    //-RAC@ public static invariant \invariant_for(eol) && eol.length() > 0;
                          ^
./OpenCMSCore.java:300: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:300:) in method getConfirmationMessage: getConfirmationMessage
    private ConfirmationMessage getConfirmationMessage() {
            ^
./OpenCMSCore.java:300: verify: Associated declaration: ./OpenCMSCore.java:300:
    private ConfirmationMessage getConfirmationMessage() {
                                ^
./OpenCMSCore.java:301: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:288: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:288:) in method getHelpText: getHelpText
    private ConfirmationMessage getHelpText() {
            ^
./OpenCMSCore.java:288: verify: Associated declaration: ./OpenCMSCore.java:288:
    private ConfirmationMessage getHelpText() {
                                ^
./OpenCMSCore.java:289: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:292: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:292:) in method getIconPath: getIconPath
    private Object getIconPath() {
            ^
./OpenCMSCore.java:292: verify: Associated declaration: ./OpenCMSCore.java:292:
    private Object getIconPath() {
                   ^
./OpenCMSCore.java:293: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:304: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:304:) in method getId: getId
    private String getId() {
            ^
./OpenCMSCore.java:304: verify: Associated declaration: ./OpenCMSCore.java:304:
    private String getId() {
                   ^
./OpenCMSCore.java:305: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:308: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:308:) in method getListId: getListId
    private String getListId() {
            ^
./OpenCMSCore.java:308: verify: Associated declaration: ./OpenCMSCore.java:308:
    private String getListId() {
                   ^
./OpenCMSCore.java:309: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:284: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:284:) in method getName: getName
    private ConfirmationMessage getName() {
            ^
./OpenCMSCore.java:284: verify: Associated declaration: ./OpenCMSCore.java:284:
    private ConfirmationMessage getName() {
                                ^
./OpenCMSCore.java:285: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:296: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:296:) in method getRelatedActionIds: getRelatedActionIds
    private String getRelatedActionIds() {
            ^
./OpenCMSCore.java:296: verify: Associated declaration: ./OpenCMSCore.java:296:
    private String getRelatedActionIds() {
                   ^
./OpenCMSCore.java:297: verify: Associated method exit
        return null;
        ^
./OpenCMSCore.java:354: verify: The prover cannot establish an assertion (PossiblyNullReturn: ./OpenCMSCore.java:354:) in method newArrayList: newArrayList
        public static List<A_CmsSitemapMenuEntry> newArrayList() {
                          ^
./OpenCMSCore.java:354: verify: Associated declaration: ./OpenCMSCore.java:354:
        public static List<A_CmsSitemapMenuEntry> newArrayList() {
                                                  ^
./OpenCMSCore.java:355: verify: Associated method exit
            return null;
            ^
./OpenCMSCore.java:101: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method seekFile: underflow in long sum
                    m_buffer.seek(m_buffer.getPosition() + pos);
                                                         ^
./OpenCMSCore.java:101: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method seekFile: overflow in long sum
                    m_buffer.seek(m_buffer.getPosition() + pos);
                                                         ^
./OpenCMSCore.java:107: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method seekFile: overflow in long sum
                    long newPos = m_buffer.getLength() + pos;
                                                       ^
./OpenCMSCore.java:107: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method seekFile: underflow in long sum
                    long newPos = m_buffer.getLength() + pos;
                                                       ^
Note: ./Phoenix.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: ./OpenCMSCore.java uses or overrides a deprecated API that is marked for removal.
Note: Recompile with -Xlint:removal for details.
Note: ./Pom.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
9 errors
99 warnings
only showing the first 99 warnings, of 1224 total; use -Xmaxwarns if you would like to see more
904 verification failures
